const ADMIN = {
  init: function () {
    this.tabHandle();
    this.toggleDashBoard();
    this.initEditor();
    this.buttonHandle();
    this.imagesPicker();
    this.tableHandle();
    this.categoriesHandle();
    this.openPopup();
    this.closePopup();
  },
  tabHandle: function () {
    $('.manager__item').on('click', e => {
      const _this = e.target;
      if (!$(_this).hasClass('active')) {
        $('.manager__item').removeClass('active');
        $('.main-content.active').removeClass('active');
        $(_this).addClass('active');
        $(`.main-content[data-mapping="${$(_this).find('span').text()}"`).addClass('active');
      }
    });
  },
  toggleDashBoard: function () {
    $('#toggle-dashboard').click(e => {
      const _this = e.target;
      $(_this).toggleClass('active');
      if (!$(_this).hasClass('active')) {
        $('.sidebar').css('margin-left', '-200px');
        $('.main').css('margin-left', '0');
      } else {
        $('.sidebar').css('margin-left', '0');
        $('.main').css('margin-left', '200px');
      }
    });
  },
  initEditor: function () {
    tinymce.init({
      selector: 'textarea',
      height: 500,
      plugins: ["advlist autolink lists link image charmap print preview anchor", "searchreplace visualblocks code fullscreen", "insertdatetime media table contextmenu paste imagetools wordcount"],
      menubar: false,
      toolbar: "insertfile undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image",
      content_css: ['//fonts.googleapis.com/css?family=Lato:300,300i,400,400i', '//www.tinymce.com/css/codepen.min.css']
    });
  },
  buttonHandle: function () {
    $('.product-table').on('click', '.btn-admin-edit', e => {
      const idEdit = e.target.getAttribute('data-id');
      $('#modal-edit').show();
      $('body').css('overflow', 'hidden');
      $('#editAjax').data('id', idEdit);
      $.ajax({
        type: 'GET',
        url: `https://funiture-store.herokuapp.com/v1/api/products/${idEdit}`
      }).done(data => {
        // console.log(data)
        this.editProductEvent(data);
      });
    });

    $('.product-table').on('click', '.btn-admin-delete', e => {
      const id = $(e.target).data('id');
      $('.loader').css('display', 'flex').hide().fadeIn();
      $.ajax({
        type: 'DELETE',
        url: 'https://funiture-store.herokuapp.com/v1/api/products',
        data: {
          productID: id
        }
      }).done(() => {
        alert('Đã xóa!');
        $(e.target).closest('tr').remove();
        $('.loader').fadeOut();
      }).fail(err => {
        alert(err.responseText);
      });
    });

    $('#addProductBtn').click(() => {
      $('#modal').show();
      $('body').css('overflow', 'hidden');
    });
    $('.close-modal').click(() => {
      $('.modal').hide();
      $('body').css('overflow', 'auto');
    });
    $('#updateRole').click(() => {
      $('#modal-account').show();
      $('body').css('overflow', 'hidden');
    });

    $('#editAjax').click(e => {
      const idEdit = $(e.target).data('id');
      const data = this.getInfoEdit(idEdit);
      let formData = new FormData();
      for (let key in data) {
        formData.append(key, data[key]);
      }
      formData.delete('images');
      for (let i = 0; i < data.images.length; i++) {
        formData.append('images', data.images[i]);
      }
      $.ajax({
        url: 'https://funiture-store.herokuapp.com/v1/api/products',
        processData: false,
        contentType: false,
        type: 'PUT',
        data: formData
      }).done(data => {
        $('.modal').hide();
        $('body').css('overflow', 'auto');
      }).fail(err => {
        alert(err.responseText);
      });
    });

    $('#letsAddAProduct').click(e => {
      const data = this.getNewProductInfo();
      let formData = new FormData();
      for (let key in data) {
        formData.append(key, data[key]);
      }

      formData.delete('images');
      for (let i = 0; i < data.images.length; i++) {
        formData.append('images', data.images[i]);
      }
      $.ajax({
        url: 'https://funiture-store.herokuapp.com/v1/api/products',
        processData: false,
        contentType: false,
        type: 'POST',
        data: formData
      }).done(data => {
        $('.modal').hide();
        $('body').css('overflow', 'auto');
      }).fail(err => {
        alert(err.responseText);
      });
    });

    $('#letsUpdateRole').click(() => {
      $.ajax({
        url: 'https://funiture-store.herokuapp.com/v1/api/user/role',
        data: {
          email: $('#updateRoleOverlay #emailForRoleUpdate').val(),
          role: $('#updateRoleOverlay #roleForRoleUpdate').val()
        },
        type: 'PUT'
      }).done(data => {
        $('.modal').hide();
        $('body').css('overflow', 'auto');
        alert('done');
        $('.modal').hide();
        $('body').css('overflow', 'auto');
      }).fail(err => {
        alert('Something went wrong');
      });
    });
  },
  imagesPicker: function () {
    let imgDeleteArr = [];
    $('.img-upload-container').on('click', '.img-wrapper', e => {
      const _this = e.target;
      $(_this).parent().toggleClass('selected');
    });
  },
  editProductEvent: function (product) {
    this.setInfoEdit(product);
  },
  setInfoEdit: function (product) {
    const idModal = '#modal-edit';
    $(idModal).find('.img-upload-container').html('');
    product.images.forEach(element => {
      const thumbnailHTML = `<div class="img-wrapper"><img src="${element}" alt=""></div>`;
      $(idModal).find('.img-upload-container').append(thumbnailHTML);
    });

    $(idModal).find('input[name="color_editProduct"]').each((index, element) => {
      if (product.colors.some(e => e._id === $(element).parent().data('id'))) {
        $(element).prop('checked', true);
      } else $(element).prop('checked', false);
    });

    $(idModal).find('.form-check-input').each((index, element) => {
      if (product.categories.includes($(element).val())) {
        $(element).prop('checked', true);
      } else $(element).prop('checked', false);
    });

    $(idModal).find('.prodNameInput').val(product.name);
    $(idModal).find('.currPriceInput').val(product.price);
    $(idModal).find('.oldPriceInput').val(product.oldPrice);
    tinymce.get($(idModal).find('textarea').attr('id')).setContent(product.description);
    $(idModal).find('.present-img').attr('src', product.thumbnail);
  },
  getInfoEdit: function (id) {
    const idModal = '#modal-edit';
    let categories = [];
    $(idModal).find('.form-check-input').each((index, element) => {
      if ($(element).prop('checked')) {
        categories.push($(element).val());
      }
    });
    let colors = [];
    if ($('input[name="color_editProduct"]:checked').length) {
      Array.from($('input[name="color_editProduct"]:checked')).forEach(checkColor => {
        colors.push($(checkColor).parent().data('id'));
      });
    }
    let deleteImageArr = [];
    $(idModal).find('.img-wrapper.selected').each((index, element) => {
      deleteImageArr.push($(element).children().attr('src'));
    });
    const formData = {
      productID: id,
      colors: JSON.stringify(colors),
      thumbnail: $('.avatarFileUpload')[0].files[0],
      name: $(idModal).find('.prodNameInput').val(),
      deletedImages: JSON.stringify(deleteImageArr),
      price: $(idModal).find('.currPriceInput').val(),
      oldPrice: $(idModal).find('.oldPriceInput').val(),
      description: tinymce.get($(idModal).find('textarea').attr('id')).getContent(),
      categories: JSON.stringify(categories),
      images: $('.thumnailFileUpload')[0].files
    };
    return formData;
  },
  getNewProductInfo: function () {
    const idModal = '#modal';
    let categories = [];
    $(idModal).find('.form-check-input').each((index, element) => {
      if ($(element).prop('checked')) {
        categories.push($(element).val());
      }
    });
    let colors = [];
    if ($('input[name="color_addProduct"]:checked').length) {
      Array.from($('input[name="color_addProduct"]:checked')).forEach(checkColor => {
        colors.push($(checkColor).parent().data('id'));
      });
    }
    const formData = {
      colors: JSON.stringify(colors),
      thumbnail: $('.add_thumnailUpload')[0].files[0],
      name: $(idModal).find('.prodNameInput').val(),
      price: $(idModal).find('.currPriceInput').val(),
      oldPrice: $(idModal).find('.oldPriceInput').val(),
      description: tinymce.get($(idModal).find('textarea').attr('id')).getContent(),
      categories: JSON.stringify(categories),
      images: $('.add_imagesUpload')[0].files
    };
    return formData;
  },
  tableHandle: function () {
    $(function () {
      var onSampleResized = function (e) {
        var table = $(e.currentTarget); //reference to the resized table
      };

      $("table").colResizable({
        liveDrag: true,
        draggingClass: "dragging",
        onResize: onSampleResized
      });
    });
  },
  categoriesHandle: function () {
    const urlAPI = 'https://funiture-store.herokuapp.com/v1/api/categories';
    // const urlAPI = 'http://localhost:9000/v1/api/categories';
    let currentIDCategory;
    $('#letsAddCategory').click(() => {
      const categoryName = $('#input-category').val();
      if (categoryName.length) {
        $.ajax({
          type: 'POST',
          url: urlAPI,
          data: {
            name: categoryName
          }
        }).done(() => {
          alert('Done!');
          $('.modal').hide();
          $('body').css('overflow', 'auto');
          ADMIN.refreshCategory();
        }).fail(err => {
          console.log(err.responseText);
        });
      }
    });

    $('.categories-table').on('click', '.btn-admin-edit', e => {
      const thisCategoryName = $(e.target).parent().prev().text();
      console.log(thisCategoryName);
      currentIDCategory = $(e.target).data('id');
      $('#input-category-edit').val(thisCategoryName);
    });

    $('.categories-table').on('click', '.btn-admin-delete', e => {
      const id = $(e.target).data('id');
      $.ajax({
        type: 'DELETE',
        url: urlAPI,
        data: {
          _id: id
        }
      }).done(() => {
        alert('Deleted!');
        $('.modal').hide();
        $('body').css('overflow', 'auto');
        ADMIN.refreshCategory();
      }).fail(err => {
        alert(JSON.parse(err.responseText).msg);
      });
    });

    $('#letsEditCategory').click(e => {
      const _this = e.target;
      const id = currentIDCategory;
      const categoryName = $('#input-category-edit').val();
      $.ajax({
        type: 'PUT',
        url: urlAPI,
        data: {
          _id: id,
          name: categoryName
        }
      }).done(() => {
        alert('Done!');
        $('.modal').hide();
        $('body').css('overflow', 'auto');
        ADMIN.refreshCategory();
      }).fail(err => {
        console.log(err.responseText);
      });
    });
  },
  openPopup: function () {
    $(document).on('click', '.openPopup', e => {
      const selector = $(e.target).data('popup');
      $(selector).show();
      $('body').css('overflow', 'hidden');
    });
  },
  closePopup: function () {
    $(document).on('click', '.close-modal', () => {
      $('.modal').hide();
      $('body').css('overflow', 'auto');
    });
  },
  refreshCategory: function () {
    $('.categories-table tbody').empty();
    $.ajax({
      type: 'GET',
      url: 'https://funiture-store.herokuapp.com/v1/api/categories'
    }).done(data => {
      let categoriesHTML = '';
      data.forEach((category, index) => {
        categoriesHTML += `
        <tr>
          <td>${index + 1}</td>
          <td>${category.name}</td>
          <td>
              <button class="btn-admin btn-admin-edit openPopup" data-popup="#modalEditCategory" data-id="${category['_id']}">Sửa</button>
              <button class="btn-admin btn-admin-delete" data-id="${category['_id']}">Xóa</button>
          </td>
        </tr>`;
      });
      $('.categories-table tbody').append(categoriesHTML);
    }).fail(err => {
      console.log(err.responseText);
    });
  }
};

document.addEventListener("DOMContentLoaded", function () {
  if ($('.page-admin').length) {
    ADMIN.init();
    ADMIN.refreshCategory();
  }
});
/* jQuery elevateZoom 3.0.8 - Demo's and documentation: - www.elevateweb.co.uk/image-zoom - Copyright (c) 2013 Andrew Eades - www.elevateweb.co.uk - Dual licensed under the LGPL licenses. - http://en.wikipedia.org/wiki/MIT_License - http://en.wikipedia.org/wiki/GNU_General_Public_License */
"function" !== typeof Object.create && (Object.create = function (d) {
  function h() {}h.prototype = d;return new h();
});
(function (d, h, l, m) {
  var k = { init: function (b, a) {
      var c = this;c.elem = a;c.$elem = d(a);c.imageSrc = c.$elem.data("zoom-image") ? c.$elem.data("zoom-image") : c.$elem.attr("src");c.options = d.extend({}, d.fn.elevateZoom.options, b);c.options.tint && (c.options.lensColour = "none", c.options.lensOpacity = "1");"inner" == c.options.zoomType && (c.options.showLens = !1);c.$elem.parent().removeAttr("title").removeAttr("alt");c.zoomImage = c.imageSrc;c.refresh(1);d("#" + c.options.gallery + " a").click(function (a) {
        c.options.galleryActiveClass && (d("#" + c.options.gallery + " a").removeClass(c.options.galleryActiveClass), d(this).addClass(c.options.galleryActiveClass));a.preventDefault();d(this).data("zoom-image") ? c.zoomImagePre = d(this).data("zoom-image") : c.zoomImagePre = d(this).data("image");c.swaptheimage(d(this).data("image"), c.zoomImagePre);return !1;
      });
    }, refresh: function (b) {
      var a = this;setTimeout(function () {
        a.fetch(a.imageSrc);
      }, b || a.options.refresh);
    }, fetch: function (b) {
      var a = this,
          c = new Image();c.onload = function () {
        a.largeWidth = c.width;a.largeHeight = c.height;a.startZoom();a.currentImage = a.imageSrc;a.options.onZoomedImageLoaded(a.$elem);
      };c.src = b;
    }, startZoom: function () {
      var b = this;b.nzWidth = b.$elem.width();b.nzHeight = b.$elem.height();b.isWindowActive = !1;b.isLensActive = !1;b.isTintActive = !1;b.overWindow = !1;b.options.imageCrossfade && (b.zoomWrap = b.$elem.wrap('<div style="height:' + b.nzHeight + "px;width:" + b.nzWidth + 'px;" class="zoomWrapper" />'), b.$elem.css("position", "absolute"));b.zoomLock = 1;b.scrollingLock = !1;b.changeBgSize = !1;b.currentZoomLevel = b.options.zoomLevel;
      b.nzOffset = b.$elem.offset();b.widthRatio = b.largeWidth / b.currentZoomLevel / b.nzWidth;b.heightRatio = b.largeHeight / b.currentZoomLevel / b.nzHeight;"window" == b.options.zoomType && (b.zoomWindowStyle = "overflow: hidden;background-position: 0px 0px;text-align:center;background-color: " + String(b.options.zoomWindowBgColour) + ";width: " + String(b.options.zoomWindowWidth) + "px;height: " + String(b.options.zoomWindowHeight) + "px;float: left;background-size: " + b.largeWidth / b.currentZoomLevel + "px " + b.largeHeight / b.currentZoomLevel + "px;display: none;z-index:100;border: " + String(b.options.borderSize) + "px solid " + b.options.borderColour + ";background-repeat: no-repeat;position: absolute;");if ("inner" == b.options.zoomType) {
        var a = b.$elem.css("border-left-width");b.zoomWindowStyle = "overflow: hidden;margin-left: " + String(a) + ";margin-top: " + String(a) + ";background-position: 0px 0px;width: " + String(b.nzWidth) + "px;height: " + String(b.nzHeight) + "px;float: left;display: none;cursor:" + b.options.cursor + ";px solid " + b.options.borderColour + ";background-repeat: no-repeat;position: absolute;";
      }"window" == b.options.zoomType && (lensHeight = b.nzHeight < b.options.zoomWindowWidth / b.widthRatio ? b.nzHeight : String(b.options.zoomWindowHeight / b.heightRatio), lensWidth = b.largeWidth < b.options.zoomWindowWidth ? b.nzWidth : b.options.zoomWindowWidth / b.widthRatio, b.lensStyle = "background-position: 0px 0px;width: " + String(b.options.zoomWindowWidth / b.widthRatio) + "px;height: " + String(b.options.zoomWindowHeight / b.heightRatio) + "px;float: right;display: none;overflow: hidden;z-index: 999;-webkit-transform: translateZ(0);opacity:" + b.options.lensOpacity + ";filter: alpha(opacity = " + 100 * b.options.lensOpacity + "); zoom:1;width:" + lensWidth + "px;height:" + lensHeight + "px;background-color:" + b.options.lensColour + ";cursor:" + b.options.cursor + ";border: " + b.options.lensBorderSize + "px solid " + b.options.lensBorderColour + ";background-repeat: no-repeat;position: absolute;");b.tintStyle = "display: block;position: absolute;background-color: " + b.options.tintColour + ";filter:alpha(opacity=0);opacity: 0;width: " + b.nzWidth + "px;height: " + b.nzHeight + "px;";
      b.lensRound = "";"lens" == b.options.zoomType && (b.lensStyle = "background-position: 0px 0px;float: left;display: none;border: " + String(b.options.borderSize) + "px solid " + b.options.borderColour + ";width:" + String(b.options.lensSize) + "px;height:" + String(b.options.lensSize) + "px;background-repeat: no-repeat;position: absolute;");"round" == b.options.lensShape && (b.lensRound = "border-top-left-radius: " + String(b.options.lensSize / 2 + b.options.borderSize) + "px;border-top-right-radius: " + String(b.options.lensSize / 2 + b.options.borderSize) + "px;border-bottom-left-radius: " + String(b.options.lensSize / 2 + b.options.borderSize) + "px;border-bottom-right-radius: " + String(b.options.lensSize / 2 + b.options.borderSize) + "px;");b.zoomContainer = d('<div class="zoomContainer" style="-webkit-transform: translateZ(0);position:absolute;left:' + b.nzOffset.left + "px;top:" + b.nzOffset.top + "px;height:" + b.nzHeight + "px;width:" + b.nzWidth + 'px;"></div>');d("body").append(b.zoomContainer);b.options.containLensZoom && "lens" == b.options.zoomType && b.zoomContainer.css("overflow", "hidden");"inner" != b.options.zoomType && (b.zoomLens = d("<div class='zoomLens' style='" + b.lensStyle + b.lensRound + "'>&nbsp;</div>").appendTo(b.zoomContainer).click(function () {
        b.$elem.trigger("click");
      }), b.options.tint && (b.tintContainer = d("<div/>").addClass("tintContainer"), b.zoomTint = d("<div class='zoomTint' style='" + b.tintStyle + "'></div>"), b.zoomLens.wrap(b.tintContainer), b.zoomTintcss = b.zoomLens.after(b.zoomTint), b.zoomTintImage = d('<img style="position: absolute; left: 0px; top: 0px; max-width: none; width: ' + b.nzWidth + "px; height: " + b.nzHeight + 'px;" src="' + b.imageSrc + '">').appendTo(b.zoomLens).click(function () {
        b.$elem.trigger("click");
      })));isNaN(b.options.zoomWindowPosition) ? b.zoomWindow = d("<div style='z-index:999;left:" + b.windowOffsetLeft + "px;top:" + b.windowOffsetTop + "px;" + b.zoomWindowStyle + "' class='zoomWindow'>&nbsp;</div>").appendTo("body").click(function () {
        b.$elem.trigger("click");
      }) : b.zoomWindow = d("<div style='z-index:999;left:" + b.windowOffsetLeft + "px;top:" + b.windowOffsetTop + "px;" + b.zoomWindowStyle + "' class='zoomWindow'>&nbsp;</div>").appendTo(b.zoomContainer).click(function () {
        b.$elem.trigger("click");
      });b.zoomWindowContainer = d("<div/>").addClass("zoomWindowContainer").css("width", b.options.zoomWindowWidth);b.zoomWindow.wrap(b.zoomWindowContainer);"lens" == b.options.zoomType && b.zoomLens.css({ backgroundImage: "url('" + b.imageSrc + "')" });"window" == b.options.zoomType && b.zoomWindow.css({ backgroundImage: "url('" + b.imageSrc + "')" });"inner" == b.options.zoomType && b.zoomWindow.css({ backgroundImage: "url('" + b.imageSrc + "')" });b.$elem.bind("touchmove", function (a) {
        a.preventDefault();b.setPosition(a.originalEvent.touches[0] || a.originalEvent.changedTouches[0]);
      });b.zoomContainer.bind("touchmove", function (a) {
        "inner" == b.options.zoomType && b.showHideWindow("show");a.preventDefault();b.setPosition(a.originalEvent.touches[0] || a.originalEvent.changedTouches[0]);
      });b.zoomContainer.bind("touchend", function (a) {
        b.showHideWindow("hide");b.options.showLens && b.showHideLens("hide");b.options.tint && "inner" != b.options.zoomType && b.showHideTint("hide");
      });
      b.$elem.bind("touchend", function (a) {
        b.showHideWindow("hide");b.options.showLens && b.showHideLens("hide");b.options.tint && "inner" != b.options.zoomType && b.showHideTint("hide");
      });b.options.showLens && (b.zoomLens.bind("touchmove", function (a) {
        a.preventDefault();b.setPosition(a.originalEvent.touches[0] || a.originalEvent.changedTouches[0]);
      }), b.zoomLens.bind("touchend", function (a) {
        b.showHideWindow("hide");b.options.showLens && b.showHideLens("hide");b.options.tint && "inner" != b.options.zoomType && b.showHideTint("hide");
      }));
      b.$elem.bind("mousemove", function (a) {
        !1 == b.overWindow && b.setElements("show");if (b.lastX !== a.clientX || b.lastY !== a.clientY) b.setPosition(a), b.currentLoc = a;b.lastX = a.clientX;b.lastY = a.clientY;
      });b.zoomContainer.bind("mousemove", function (a) {
        !1 == b.overWindow && b.setElements("show");if (b.lastX !== a.clientX || b.lastY !== a.clientY) b.setPosition(a), b.currentLoc = a;b.lastX = a.clientX;b.lastY = a.clientY;
      });"inner" != b.options.zoomType && b.zoomLens.bind("mousemove", function (a) {
        if (b.lastX !== a.clientX || b.lastY !== a.clientY) b.setPosition(a), b.currentLoc = a;b.lastX = a.clientX;b.lastY = a.clientY;
      });b.options.tint && "inner" != b.options.zoomType && b.zoomTint.bind("mousemove", function (a) {
        if (b.lastX !== a.clientX || b.lastY !== a.clientY) b.setPosition(a), b.currentLoc = a;b.lastX = a.clientX;b.lastY = a.clientY;
      });"inner" == b.options.zoomType && b.zoomWindow.bind("mousemove", function (a) {
        if (b.lastX !== a.clientX || b.lastY !== a.clientY) b.setPosition(a), b.currentLoc = a;b.lastX = a.clientX;b.lastY = a.clientY;
      });b.zoomContainer.add(b.$elem).mouseenter(function () {
        !1 == b.overWindow && b.setElements("show");
      }).mouseleave(function () {
        b.scrollLock || b.setElements("hide");
      });"inner" != b.options.zoomType && b.zoomWindow.mouseenter(function () {
        b.overWindow = !0;b.setElements("hide");
      }).mouseleave(function () {
        b.overWindow = !1;
      });b.minZoomLevel = b.options.minZoomLevel ? b.options.minZoomLevel : 2 * b.options.scrollZoomIncrement;b.options.scrollZoom && b.zoomContainer.add(b.$elem).bind("mousewheel DOMMouseScroll MozMousePixelScroll", function (a) {
        b.scrollLock = !0;clearTimeout(d.data(this, "timer"));d.data(this, "timer", setTimeout(function () {
          b.scrollLock = !1;
        }, 250));var e = a.originalEvent.wheelDelta || -1 * a.originalEvent.detail;a.stopImmediatePropagation();a.stopPropagation();a.preventDefault();0 < e / 120 ? b.currentZoomLevel >= b.minZoomLevel && b.changeZoomLevel(b.currentZoomLevel - b.options.scrollZoomIncrement) : b.options.maxZoomLevel ? b.currentZoomLevel <= b.options.maxZoomLevel && b.changeZoomLevel(parseFloat(b.currentZoomLevel) + b.options.scrollZoomIncrement) : b.changeZoomLevel(parseFloat(b.currentZoomLevel) + b.options.scrollZoomIncrement);
        return !1;
      });
    }, setElements: function (b) {
      if (!this.options.zoomEnabled) return !1;"show" == b && this.isWindowSet && ("inner" == this.options.zoomType && this.showHideWindow("show"), "window" == this.options.zoomType && this.showHideWindow("show"), this.options.showLens && this.showHideLens("show"), this.options.tint && "inner" != this.options.zoomType && this.showHideTint("show"));"hide" == b && ("window" == this.options.zoomType && this.showHideWindow("hide"), this.options.tint || this.showHideWindow("hide"), this.options.showLens && this.showHideLens("hide"), this.options.tint && this.showHideTint("hide"));
    }, setPosition: function (b) {
      if (!this.options.zoomEnabled) return !1;this.nzHeight = this.$elem.height();this.nzWidth = this.$elem.width();this.nzOffset = this.$elem.offset();this.options.tint && "inner" != this.options.zoomType && (this.zoomTint.css({ top: 0 }), this.zoomTint.css({ left: 0 }));this.options.responsive && !this.options.scrollZoom && this.options.showLens && (lensHeight = this.nzHeight < this.options.zoomWindowWidth / this.widthRatio ? this.nzHeight : String(this.options.zoomWindowHeight / this.heightRatio), lensWidth = this.largeWidth < this.options.zoomWindowWidth ? this.nzWidth : this.options.zoomWindowWidth / this.widthRatio, this.widthRatio = this.largeWidth / this.nzWidth, this.heightRatio = this.largeHeight / this.nzHeight, "lens" != this.options.zoomType && (lensHeight = this.nzHeight < this.options.zoomWindowWidth / this.widthRatio ? this.nzHeight : String(this.options.zoomWindowHeight / this.heightRatio), lensWidth = this.options.zoomWindowWidth < this.options.zoomWindowWidth ? this.nzWidth : this.options.zoomWindowWidth / this.widthRatio, this.zoomLens.css("width", lensWidth), this.zoomLens.css("height", lensHeight), this.options.tint && (this.zoomTintImage.css("width", this.nzWidth), this.zoomTintImage.css("height", this.nzHeight))), "lens" == this.options.zoomType && this.zoomLens.css({ width: String(this.options.lensSize) + "px", height: String(this.options.lensSize) + "px" }));this.zoomContainer.css({ top: this.nzOffset.top });this.zoomContainer.css({ left: this.nzOffset.left });this.mouseLeft = parseInt(b.pageX - this.nzOffset.left);this.mouseTop = parseInt(b.pageY - this.nzOffset.top);"window" == this.options.zoomType && (this.Etoppos = this.mouseTop < this.zoomLens.height() / 2, this.Eboppos = this.mouseTop > this.nzHeight - this.zoomLens.height() / 2 - 2 * this.options.lensBorderSize, this.Eloppos = this.mouseLeft < 0 + this.zoomLens.width() / 2, this.Eroppos = this.mouseLeft > this.nzWidth - this.zoomLens.width() / 2 - 2 * this.options.lensBorderSize);"inner" == this.options.zoomType && (this.Etoppos = this.mouseTop < this.nzHeight / 2 / this.heightRatio, this.Eboppos = this.mouseTop > this.nzHeight - this.nzHeight / 2 / this.heightRatio, this.Eloppos = this.mouseLeft < 0 + this.nzWidth / 2 / this.widthRatio, this.Eroppos = this.mouseLeft > this.nzWidth - this.nzWidth / 2 / this.widthRatio - 2 * this.options.lensBorderSize);0 >= this.mouseLeft || 0 > this.mouseTop || this.mouseLeft > this.nzWidth || this.mouseTop > this.nzHeight ? this.setElements("hide") : (this.options.showLens && (this.lensLeftPos = String(this.mouseLeft - this.zoomLens.width() / 2), this.lensTopPos = String(this.mouseTop - this.zoomLens.height() / 2)), this.Etoppos && (this.lensTopPos = 0), this.Eloppos && (this.tintpos = this.lensLeftPos = this.windowLeftPos = 0), "window" == this.options.zoomType && (this.Eboppos && (this.lensTopPos = Math.max(this.nzHeight - this.zoomLens.height() - 2 * this.options.lensBorderSize, 0)), this.Eroppos && (this.lensLeftPos = this.nzWidth - this.zoomLens.width() - 2 * this.options.lensBorderSize)), "inner" == this.options.zoomType && (this.Eboppos && (this.lensTopPos = Math.max(this.nzHeight - 2 * this.options.lensBorderSize, 0)), this.Eroppos && (this.lensLeftPos = this.nzWidth - this.nzWidth - 2 * this.options.lensBorderSize)), "lens" == this.options.zoomType && (this.windowLeftPos = String(-1 * ((b.pageX - this.nzOffset.left) * this.widthRatio - this.zoomLens.width() / 2)), this.windowTopPos = String(-1 * ((b.pageY - this.nzOffset.top) * this.heightRatio - this.zoomLens.height() / 2)), this.zoomLens.css({ backgroundPosition: this.windowLeftPos + "px " + this.windowTopPos + "px" }), this.changeBgSize && (this.nzHeight > this.nzWidth ? ("lens" == this.options.zoomType && this.zoomLens.css({ "background-size": this.largeWidth / this.newvalueheight + "px " + this.largeHeight / this.newvalueheight + "px" }), this.zoomWindow.css({ "background-size": this.largeWidth / this.newvalueheight + "px " + this.largeHeight / this.newvalueheight + "px" })) : ("lens" == this.options.zoomType && this.zoomLens.css({ "background-size": this.largeWidth / this.newvaluewidth + "px " + this.largeHeight / this.newvaluewidth + "px" }), this.zoomWindow.css({ "background-size": this.largeWidth / this.newvaluewidth + "px " + this.largeHeight / this.newvaluewidth + "px" })), this.changeBgSize = !1), this.setWindowPostition(b)), this.options.tint && "inner" != this.options.zoomType && this.setTintPosition(b), "window" == this.options.zoomType && this.setWindowPostition(b), "inner" == this.options.zoomType && this.setWindowPostition(b), this.options.showLens && (this.fullwidth && "lens" != this.options.zoomType && (this.lensLeftPos = 0), this.zoomLens.css({ left: this.lensLeftPos + "px", top: this.lensTopPos + "px" })));
    }, showHideWindow: function (b) {
      "show" != b || this.isWindowActive || (this.options.zoomWindowFadeIn ? this.zoomWindow.stop(!0, !0, !1).fadeIn(this.options.zoomWindowFadeIn) : this.zoomWindow.show(), this.isWindowActive = !0);"hide" == b && this.isWindowActive && (this.options.zoomWindowFadeOut ? this.zoomWindow.stop(!0, !0).fadeOut(this.options.zoomWindowFadeOut) : this.zoomWindow.hide(), this.isWindowActive = !1);
    }, showHideLens: function (b) {
      "show" != b || this.isLensActive || (this.options.lensFadeIn ? this.zoomLens.stop(!0, !0, !1).fadeIn(this.options.lensFadeIn) : this.zoomLens.show(), this.isLensActive = !0);"hide" == b && this.isLensActive && (this.options.lensFadeOut ? this.zoomLens.stop(!0, !0).fadeOut(this.options.lensFadeOut) : this.zoomLens.hide(), this.isLensActive = !1);
    }, showHideTint: function (b) {
      "show" != b || this.isTintActive || (this.options.zoomTintFadeIn ? this.zoomTint.css({ opacity: this.options.tintOpacity }).animate().stop(!0, !0).fadeIn("slow") : (this.zoomTint.css({ opacity: this.options.tintOpacity }).animate(), this.zoomTint.show()), this.isTintActive = !0);"hide" == b && this.isTintActive && (this.options.zoomTintFadeOut ? this.zoomTint.stop(!0, !0).fadeOut(this.options.zoomTintFadeOut) : this.zoomTint.hide(), this.isTintActive = !1);
    }, setLensPostition: function (b) {},
    setWindowPostition: function (b) {
      var a = this;if (isNaN(a.options.zoomWindowPosition)) a.externalContainer = d("#" + a.options.zoomWindowPosition), a.externalContainerWidth = a.externalContainer.width(), a.externalContainerHeight = a.externalContainer.height(), a.externalContainerOffset = a.externalContainer.offset(), a.windowOffsetTop = a.externalContainerOffset.top, a.windowOffsetLeft = a.externalContainerOffset.left;else switch (a.options.zoomWindowPosition) {case 1:
          a.windowOffsetTop = a.options.zoomWindowOffety;a.windowOffsetLeft = +a.nzWidth;break;case 2:
          a.options.zoomWindowHeight > a.nzHeight && (a.windowOffsetTop = -1 * (a.options.zoomWindowHeight / 2 - a.nzHeight / 2), a.windowOffsetLeft = a.nzWidth);break;case 3:
          a.windowOffsetTop = a.nzHeight - a.zoomWindow.height() - 2 * a.options.borderSize;a.windowOffsetLeft = a.nzWidth;break;case 4:
          a.windowOffsetTop = a.nzHeight;a.windowOffsetLeft = a.nzWidth;break;case 5:
          a.windowOffsetTop = a.nzHeight;a.windowOffsetLeft = a.nzWidth - a.zoomWindow.width() - 2 * a.options.borderSize;break;case 6:
          a.options.zoomWindowHeight > a.nzHeight && (a.windowOffsetTop = a.nzHeight, a.windowOffsetLeft = -1 * (a.options.zoomWindowWidth / 2 - a.nzWidth / 2 + 2 * a.options.borderSize));break;case 7:
          a.windowOffsetTop = a.nzHeight;a.windowOffsetLeft = 0;break;case 8:
          a.windowOffsetTop = a.nzHeight;a.windowOffsetLeft = -1 * (a.zoomWindow.width() + 2 * a.options.borderSize);break;case 9:
          a.windowOffsetTop = a.nzHeight - a.zoomWindow.height() - 2 * a.options.borderSize;a.windowOffsetLeft = -1 * (a.zoomWindow.width() + 2 * a.options.borderSize);break;case 10:
          a.options.zoomWindowHeight > a.nzHeight && (a.windowOffsetTop = -1 * (a.options.zoomWindowHeight / 2 - a.nzHeight / 2), a.windowOffsetLeft = -1 * (a.zoomWindow.width() + 2 * a.options.borderSize));break;case 11:
          a.windowOffsetTop = a.options.zoomWindowOffety;a.windowOffsetLeft = -1 * (a.zoomWindow.width() + 2 * a.options.borderSize);break;case 12:
          a.windowOffsetTop = -1 * (a.zoomWindow.height() + 2 * a.options.borderSize);a.windowOffsetLeft = -1 * (a.zoomWindow.width() + 2 * a.options.borderSize);break;case 13:
          a.windowOffsetTop = -1 * (a.zoomWindow.height() + 2 * a.options.borderSize);a.windowOffsetLeft = 0;break;case 14:
          a.options.zoomWindowHeight > a.nzHeight && (a.windowOffsetTop = -1 * (a.zoomWindow.height() + 2 * a.options.borderSize), a.windowOffsetLeft = -1 * (a.options.zoomWindowWidth / 2 - a.nzWidth / 2 + 2 * a.options.borderSize));break;case 15:
          a.windowOffsetTop = -1 * (a.zoomWindow.height() + 2 * a.options.borderSize);a.windowOffsetLeft = a.nzWidth - a.zoomWindow.width() - 2 * a.options.borderSize;break;case 16:
          a.windowOffsetTop = -1 * (a.zoomWindow.height() + 2 * a.options.borderSize);a.windowOffsetLeft = a.nzWidth;break;default:
          a.windowOffsetTop = a.options.zoomWindowOffety, a.windowOffsetLeft = a.nzWidth;}a.isWindowSet = !0;a.windowOffsetTop += a.options.zoomWindowOffety;a.windowOffsetLeft += a.options.zoomWindowOffetx;a.zoomWindow.css({ top: a.windowOffsetTop });a.zoomWindow.css({ left: a.windowOffsetLeft });"inner" == a.options.zoomType && (a.zoomWindow.css({ top: 0 }), a.zoomWindow.css({ left: 0 }));a.windowLeftPos = String(-1 * ((b.pageX - a.nzOffset.left) * a.widthRatio - a.zoomWindow.width() / 2));a.windowTopPos = String(-1 * ((b.pageY - a.nzOffset.top) * a.heightRatio - a.zoomWindow.height() / 2));a.Etoppos && (a.windowTopPos = 0);a.Eloppos && (a.windowLeftPos = 0);a.Eboppos && (a.windowTopPos = -1 * (a.largeHeight / a.currentZoomLevel - a.zoomWindow.height()));a.Eroppos && (a.windowLeftPos = -1 * (a.largeWidth / a.currentZoomLevel - a.zoomWindow.width()));a.fullheight && (a.windowTopPos = 0);a.fullwidth && (a.windowLeftPos = 0);if ("window" == a.options.zoomType || "inner" == a.options.zoomType) 1 == a.zoomLock && (1 >= a.widthRatio && (a.windowLeftPos = 0), 1 >= a.heightRatio && (a.windowTopPos = 0)), a.largeHeight < a.options.zoomWindowHeight && (a.windowTopPos = 0), a.largeWidth < a.options.zoomWindowWidth && (a.windowLeftPos = 0), a.options.easing ? (a.xp || (a.xp = 0), a.yp || (a.yp = 0), a.loop || (a.loop = setInterval(function () {
        a.xp += (a.windowLeftPos - a.xp) / a.options.easingAmount;a.yp += (a.windowTopPos - a.yp) / a.options.easingAmount;a.scrollingLock ? (clearInterval(a.loop), a.xp = a.windowLeftPos, a.yp = a.windowTopPos, a.xp = -1 * ((b.pageX - a.nzOffset.left) * a.widthRatio - a.zoomWindow.width() / 2), a.yp = -1 * ((b.pageY - a.nzOffset.top) * a.heightRatio - a.zoomWindow.height() / 2), a.changeBgSize && (a.nzHeight > a.nzWidth ? ("lens" == a.options.zoomType && a.zoomLens.css({ "background-size": a.largeWidth / a.newvalueheight + "px " + a.largeHeight / a.newvalueheight + "px" }), a.zoomWindow.css({ "background-size": a.largeWidth / a.newvalueheight + "px " + a.largeHeight / a.newvalueheight + "px" })) : ("lens" != a.options.zoomType && a.zoomLens.css({ "background-size": a.largeWidth / a.newvaluewidth + "px " + a.largeHeight / a.newvalueheight + "px" }), a.zoomWindow.css({ "background-size": a.largeWidth / a.newvaluewidth + "px " + a.largeHeight / a.newvaluewidth + "px" })), a.changeBgSize = !1), a.zoomWindow.css({ backgroundPosition: a.windowLeftPos + "px " + a.windowTopPos + "px" }), a.scrollingLock = !1, a.loop = !1) : (a.changeBgSize && (a.nzHeight > a.nzWidth ? ("lens" == a.options.zoomType && a.zoomLens.css({ "background-size": a.largeWidth / a.newvalueheight + "px " + a.largeHeight / a.newvalueheight + "px" }), a.zoomWindow.css({ "background-size": a.largeWidth / a.newvalueheight + "px " + a.largeHeight / a.newvalueheight + "px" })) : ("lens" != a.options.zoomType && a.zoomLens.css({ "background-size": a.largeWidth / a.newvaluewidth + "px " + a.largeHeight / a.newvaluewidth + "px" }), a.zoomWindow.css({ "background-size": a.largeWidth / a.newvaluewidth + "px " + a.largeHeight / a.newvaluewidth + "px" })), a.changeBgSize = !1), a.zoomWindow.css({ backgroundPosition: a.xp + "px " + a.yp + "px" }));
      }, 16))) : (a.changeBgSize && (a.nzHeight > a.nzWidth ? ("lens" == a.options.zoomType && a.zoomLens.css({ "background-size": a.largeWidth / a.newvalueheight + "px " + a.largeHeight / a.newvalueheight + "px" }), a.zoomWindow.css({ "background-size": a.largeWidth / a.newvalueheight + "px " + a.largeHeight / a.newvalueheight + "px" })) : ("lens" == a.options.zoomType && a.zoomLens.css({ "background-size": a.largeWidth / a.newvaluewidth + "px " + a.largeHeight / a.newvaluewidth + "px" }), a.largeHeight / a.newvaluewidth < a.options.zoomWindowHeight ? a.zoomWindow.css({ "background-size": a.largeWidth / a.newvaluewidth + "px " + a.largeHeight / a.newvaluewidth + "px" }) : a.zoomWindow.css({ "background-size": a.largeWidth / a.newvalueheight + "px " + a.largeHeight / a.newvalueheight + "px" })), a.changeBgSize = !1), a.zoomWindow.css({ backgroundPosition: a.windowLeftPos + "px " + a.windowTopPos + "px" }));
    }, setTintPosition: function (b) {
      this.nzOffset = this.$elem.offset();this.tintpos = String(-1 * (b.pageX - this.nzOffset.left - this.zoomLens.width() / 2));this.tintposy = String(-1 * (b.pageY - this.nzOffset.top - this.zoomLens.height() / 2));this.Etoppos && (this.tintposy = 0);this.Eloppos && (this.tintpos = 0);this.Eboppos && (this.tintposy = -1 * (this.nzHeight - this.zoomLens.height() - 2 * this.options.lensBorderSize));this.Eroppos && (this.tintpos = -1 * (this.nzWidth - this.zoomLens.width() - 2 * this.options.lensBorderSize));
      this.options.tint && (this.fullheight && (this.tintposy = 0), this.fullwidth && (this.tintpos = 0), this.zoomTintImage.css({ left: this.tintpos + "px" }), this.zoomTintImage.css({ top: this.tintposy + "px" }));
    }, swaptheimage: function (b, a) {
      var c = this,
          e = new Image();c.options.loadingIcon && (c.spinner = d("<div style=\"background: url('" + c.options.loadingIcon + "') no-repeat center;height:" + c.nzHeight + "px;width:" + c.nzWidth + 'px;z-index: 2000;position: absolute; background-position: center center;"></div>'), c.$elem.after(c.spinner));
      c.options.onImageSwap(c.$elem);e.onload = function () {
        c.largeWidth = e.width;c.largeHeight = e.height;c.zoomImage = a;c.zoomWindow.css({ "background-size": c.largeWidth + "px " + c.largeHeight + "px" });c.zoomWindow.css({ "background-size": c.largeWidth + "px " + c.largeHeight + "px" });c.swapAction(b, a);
      };e.src = a;
    }, swapAction: function (b, a) {
      var c = this,
          e = new Image();e.onload = function () {
        c.nzHeight = e.height;c.nzWidth = e.width;c.options.onImageSwapComplete(c.$elem);c.doneCallback();
      };e.src = b;c.currentZoomLevel = c.options.zoomLevel;c.options.maxZoomLevel = !1;"lens" == c.options.zoomType && c.zoomLens.css({ backgroundImage: "url('" + a + "')" });"window" == c.options.zoomType && c.zoomWindow.css({ backgroundImage: "url('" + a + "')" });"inner" == c.options.zoomType && c.zoomWindow.css({ backgroundImage: "url('" + a + "')" });c.currentImage = a;if (c.options.imageCrossfade) {
        var f = c.$elem,
            g = f.clone();c.$elem.attr("src", b);c.$elem.after(g);g.stop(!0).fadeOut(c.options.imageCrossfade, function () {
          d(this).remove();
        });c.$elem.width("auto").removeAttr("width");c.$elem.height("auto").removeAttr("height");
        f.fadeIn(c.options.imageCrossfade);c.options.tint && "inner" != c.options.zoomType && (f = c.zoomTintImage, g = f.clone(), c.zoomTintImage.attr("src", a), c.zoomTintImage.after(g), g.stop(!0).fadeOut(c.options.imageCrossfade, function () {
          d(this).remove();
        }), f.fadeIn(c.options.imageCrossfade), c.zoomTint.css({ height: c.$elem.height() }), c.zoomTint.css({ width: c.$elem.width() }));c.zoomContainer.css("height", c.$elem.height());c.zoomContainer.css("width", c.$elem.width());"inner" != c.options.zoomType || c.options.constrainType || (c.zoomWrap.parent().css("height", c.$elem.height()), c.zoomWrap.parent().css("width", c.$elem.width()), c.zoomWindow.css("height", c.$elem.height()), c.zoomWindow.css("width", c.$elem.width()));
      } else c.$elem.attr("src", b), c.options.tint && (c.zoomTintImage.attr("src", a), c.zoomTintImage.attr("height", c.$elem.height()), c.zoomTintImage.css({ height: c.$elem.height() }), c.zoomTint.css({ height: c.$elem.height() })), c.zoomContainer.css("height", c.$elem.height()), c.zoomContainer.css("width", c.$elem.width());c.options.imageCrossfade && (c.zoomWrap.css("height", c.$elem.height()), c.zoomWrap.css("width", c.$elem.width()));c.options.constrainType && ("height" == c.options.constrainType && (c.zoomContainer.css("height", c.options.constrainSize), c.zoomContainer.css("width", "auto"), c.options.imageCrossfade ? (c.zoomWrap.css("height", c.options.constrainSize), c.zoomWrap.css("width", "auto"), c.constwidth = c.zoomWrap.width()) : (c.$elem.css("height", c.options.constrainSize), c.$elem.css("width", "auto"), c.constwidth = c.$elem.width()), "inner" == c.options.zoomType && (c.zoomWrap.parent().css("height", c.options.constrainSize), c.zoomWrap.parent().css("width", c.constwidth), c.zoomWindow.css("height", c.options.constrainSize), c.zoomWindow.css("width", c.constwidth)), c.options.tint && (c.tintContainer.css("height", c.options.constrainSize), c.tintContainer.css("width", c.constwidth), c.zoomTint.css("height", c.options.constrainSize), c.zoomTint.css("width", c.constwidth), c.zoomTintImage.css("height", c.options.constrainSize), c.zoomTintImage.css("width", c.constwidth))), "width" == c.options.constrainType && (c.zoomContainer.css("height", "auto"), c.zoomContainer.css("width", c.options.constrainSize), c.options.imageCrossfade ? (c.zoomWrap.css("height", "auto"), c.zoomWrap.css("width", c.options.constrainSize), c.constheight = c.zoomWrap.height()) : (c.$elem.css("height", "auto"), c.$elem.css("width", c.options.constrainSize), c.constheight = c.$elem.height()), "inner" == c.options.zoomType && (c.zoomWrap.parent().css("height", c.constheight), c.zoomWrap.parent().css("width", c.options.constrainSize), c.zoomWindow.css("height", c.constheight), c.zoomWindow.css("width", c.options.constrainSize)), c.options.tint && (c.tintContainer.css("height", c.constheight), c.tintContainer.css("width", c.options.constrainSize), c.zoomTint.css("height", c.constheight), c.zoomTint.css("width", c.options.constrainSize), c.zoomTintImage.css("height", c.constheight), c.zoomTintImage.css("width", c.options.constrainSize))));
    }, doneCallback: function () {
      this.options.loadingIcon && this.spinner.hide();this.nzOffset = this.$elem.offset();this.nzWidth = this.$elem.width();
      this.nzHeight = this.$elem.height();this.currentZoomLevel = this.options.zoomLevel;this.widthRatio = this.largeWidth / this.nzWidth;this.heightRatio = this.largeHeight / this.nzHeight;"window" == this.options.zoomType && (lensHeight = this.nzHeight < this.options.zoomWindowWidth / this.widthRatio ? this.nzHeight : String(this.options.zoomWindowHeight / this.heightRatio), lensWidth = this.options.zoomWindowWidth < this.options.zoomWindowWidth ? this.nzWidth : this.options.zoomWindowWidth / this.widthRatio, this.zoomLens && (this.zoomLens.css("width", lensWidth), this.zoomLens.css("height", lensHeight)));
    }, getCurrentImage: function () {
      return this.zoomImage;
    }, getGalleryList: function () {
      var b = this;b.gallerylist = [];b.options.gallery ? d("#" + b.options.gallery + " a").each(function () {
        var a = "";d(this).data("zoom-image") ? a = d(this).data("zoom-image") : d(this).data("image") && (a = d(this).data("image"));a == b.zoomImage ? b.gallerylist.unshift({ href: "" + a + "", title: d(this).find("img").attr("title") }) : b.gallerylist.push({ href: "" + a + "", title: d(this).find("img").attr("title") });
      }) : b.gallerylist.push({ href: "" + b.zoomImage + "", title: d(this).find("img").attr("title") });return b.gallerylist;
    }, changeZoomLevel: function (b) {
      this.scrollingLock = !0;this.newvalue = parseFloat(b).toFixed(2);newvalue = parseFloat(b).toFixed(2);maxheightnewvalue = this.largeHeight / (this.options.zoomWindowHeight / this.nzHeight * this.nzHeight);maxwidthtnewvalue = this.largeWidth / (this.options.zoomWindowWidth / this.nzWidth * this.nzWidth);"inner" != this.options.zoomType && (maxheightnewvalue <= newvalue ? (this.heightRatio = this.largeHeight / maxheightnewvalue / this.nzHeight, this.newvalueheight = maxheightnewvalue, this.fullheight = !0) : (this.heightRatio = this.largeHeight / newvalue / this.nzHeight, this.newvalueheight = newvalue, this.fullheight = !1), maxwidthtnewvalue <= newvalue ? (this.widthRatio = this.largeWidth / maxwidthtnewvalue / this.nzWidth, this.newvaluewidth = maxwidthtnewvalue, this.fullwidth = !0) : (this.widthRatio = this.largeWidth / newvalue / this.nzWidth, this.newvaluewidth = newvalue, this.fullwidth = !1), "lens" == this.options.zoomType && (maxheightnewvalue <= newvalue ? (this.fullwidth = !0, this.newvaluewidth = maxheightnewvalue) : (this.widthRatio = this.largeWidth / newvalue / this.nzWidth, this.newvaluewidth = newvalue, this.fullwidth = !1)));"inner" == this.options.zoomType && (maxheightnewvalue = parseFloat(this.largeHeight / this.nzHeight).toFixed(2), maxwidthtnewvalue = parseFloat(this.largeWidth / this.nzWidth).toFixed(2), newvalue > maxheightnewvalue && (newvalue = maxheightnewvalue), newvalue > maxwidthtnewvalue && (newvalue = maxwidthtnewvalue), maxheightnewvalue <= newvalue ? (this.heightRatio = this.largeHeight / newvalue / this.nzHeight, this.newvalueheight = newvalue > maxheightnewvalue ? maxheightnewvalue : newvalue, this.fullheight = !0) : (this.heightRatio = this.largeHeight / newvalue / this.nzHeight, this.newvalueheight = newvalue > maxheightnewvalue ? maxheightnewvalue : newvalue, this.fullheight = !1), maxwidthtnewvalue <= newvalue ? (this.widthRatio = this.largeWidth / newvalue / this.nzWidth, this.newvaluewidth = newvalue > maxwidthtnewvalue ? maxwidthtnewvalue : newvalue, this.fullwidth = !0) : (this.widthRatio = this.largeWidth / newvalue / this.nzWidth, this.newvaluewidth = newvalue, this.fullwidth = !1));scrcontinue = !1;"inner" == this.options.zoomType && (this.nzWidth > this.nzHeight && (this.newvaluewidth <= maxwidthtnewvalue ? scrcontinue = !0 : (scrcontinue = !1, this.fullwidth = this.fullheight = !0)), this.nzHeight > this.nzWidth && (this.newvaluewidth <= maxwidthtnewvalue ? scrcontinue = !0 : (scrcontinue = !1, this.fullwidth = this.fullheight = !0)));"inner" != this.options.zoomType && (scrcontinue = !0);scrcontinue && (this.zoomLock = 0, this.changeZoom = !0, this.options.zoomWindowHeight / this.heightRatio <= this.nzHeight && (this.currentZoomLevel = this.newvalueheight, "lens" != this.options.zoomType && "inner" != this.options.zoomType && (this.changeBgSize = !0, this.zoomLens.css({ height: String(this.options.zoomWindowHeight / this.heightRatio) + "px" })), "lens" == this.options.zoomType || "inner" == this.options.zoomType) && (this.changeBgSize = !0), this.options.zoomWindowWidth / this.widthRatio <= this.nzWidth && ("inner" != this.options.zoomType && this.newvaluewidth > this.newvalueheight && (this.currentZoomLevel = this.newvaluewidth), "lens" != this.options.zoomType && "inner" != this.options.zoomType && (this.changeBgSize = !0, this.zoomLens.css({ width: String(this.options.zoomWindowWidth / this.widthRatio) + "px" })), "lens" == this.options.zoomType || "inner" == this.options.zoomType) && (this.changeBgSize = !0), "inner" == this.options.zoomType && (this.changeBgSize = !0, this.nzWidth > this.nzHeight && (this.currentZoomLevel = this.newvaluewidth), this.nzHeight > this.nzWidth && (this.currentZoomLevel = this.newvaluewidth)));this.setPosition(this.currentLoc);
    }, closeAll: function () {
      self.zoomWindow && self.zoomWindow.hide();
      self.zoomLens && self.zoomLens.hide();self.zoomTint && self.zoomTint.hide();
    }, changeState: function (b) {
      "enable" == b && (this.options.zoomEnabled = !0);"disable" == b && (this.options.zoomEnabled = !1);
    } };d.fn.elevateZoom = function (b) {
    return this.each(function () {
      var a = Object.create(k);a.init(b, this);d.data(this, "elevateZoom", a);
    });
  };d.fn.elevateZoom.options = { zoomActivation: "hover", zoomEnabled: !0, preloading: 1, zoomLevel: 1, scrollZoom: !1, scrollZoomIncrement: 0.1, minZoomLevel: !1, maxZoomLevel: !1, easing: !1, easingAmount: 12, lensSize: 200,
    zoomWindowWidth: 400, zoomWindowHeight: 400, zoomWindowOffetx: 0, zoomWindowOffety: 0, zoomWindowPosition: 1, zoomWindowBgColour: "#fff", lensFadeIn: !1, lensFadeOut: !1, debug: !1, zoomWindowFadeIn: !1, zoomWindowFadeOut: !1, zoomWindowAlwaysShow: !1, zoomTintFadeIn: !1, zoomTintFadeOut: !1, borderSize: 4, showLens: !0, borderColour: "#888", lensBorderSize: 1, lensBorderColour: "#000", lensShape: "square", zoomType: "window", containLensZoom: !1, lensColour: "white", lensOpacity: 0.4, lenszoom: !1, tint: !1, tintColour: "#333", tintOpacity: 0.4, gallery: !1,
    galleryActiveClass: "zoomGalleryActive", imageCrossfade: !1, constrainType: !1, constrainSize: !1, loadingIcon: !1, cursor: "default", responsive: !0, onComplete: d.noop, onZoomedImageLoaded: function () {}, onImageSwap: d.noop, onImageSwapComplete: d.noop };
})(jQuery, window, document);
const STORE = {
    apiURL: 'https://funiture-store.herokuapp.com/v1/api/products',
    filterParam: {
        categories: '',
        colors: [],
        minPrice: null,
        maxPrice: null
    },
    loader: {
        show: () => {
            $('.loader').css('display', 'flex').hide().fadeIn();
        },
        hide: () => {
            $('.loader').fadeOut();
        }
    },
    init: function () {
        this.initSlide();
        this.showBigProductThumb();
        this.addToCartEvent();
        this.popupHandle();
        this.buttonHandle();
        this.accordionCategory();
        this.filterProduct();
        this.sortHandle();
        this.searchHandle();
    },
    initSlide: function () {
        $('.slide').slick({
            arrows: false,
            dots: true,
            autoplay: true,
            autoplaySpeed: 2000,
            prevArrow: '<button type="button" class="slick-prev"><i class="fas fa-arrow-left"></i></button>',
            nextArrow: '<button type="button" class="slick-next"><i class="fas fa-arrow-right"></i></button>'
        });

        $('#smallPics').slick({
            slidesToShow: 4,
            arrows: false,
            dots: false,
            infinite: false,
            focusOnSelect: true,
            prevArrow: '<button type="button" class="slick-prev"><i class="fas fa-chevron-left"></i></button>',
            nextArrow: '<button type="button" class="slick-next"><i class="fas fa-chevron-right"></i></button>'
        });
        $('#otherProducts').slick({
            slidesToShow: 5,
            slidesToScroll: 2,
            arrows: true,
            dots: false,
            infinite: true,
            focusOnSelect: true,
            prevArrow: '<button type="button" class="slick-prev"><i class="fas fa-chevron-left"></i></button>',
            nextArrow: '<button type="button" class="slick-next"><i class="fas fa-chevron-right"></i></button>',
            responsive: [{
                breakpoint: 768,
                settings: {
                    slidesToShow: 1,
                    slidesToScroll: 1,
                    centerMode: true,
                    infinite: true
                }
            }]
        });
    },
    initZoomProduct: function () {
        $('.zoom-view').elevateZoom({
            zoomType: 'inner',
            cursor: 'zoom-in'
        });
    },
    showBigProductThumb: function () {
        const srcDefault = $('#smallPics .default').attr('src');
        const zoomDefault = $('#smallPics .default').data('zoom-image');
        zoomDefault && STORE.initZoomProduct();
        $('#bigPics .zoom-view').attr('src', srcDefault);
        $('#bigPics .zoom-view').data('zoom-image', zoomDefault);
        $('#smallPics .slick-slide:first-child').addClass('active');

        $('#smallPics').on('click', '.slick-slide', function () {
            $('#smallPics .slick-slide.active').removeClass('active');
            $(this).addClass('active');
            $('#bigPics .zoom-view').attr('src', $(this).attr('src'));
            if ($(window).width() > 768) {
                $('#bigPics .zoom-view').data('zoom-image', $(this).data('zoom-image'));
                $(this).data('zoom-image') ? STORE.initZoomProduct() : $('.zoomContainer').hide();
            }
        });
    },
    addToCartEvent: function () {
        $('#addToCart').click(e => {
            $('.popup').fadeIn();
        });
    },
    popupHandle: function () {
        $('.popup__close').click(function () {
            $('.popup').fadeOut();
        });
    },
    buttonHandle: function () {
        $('#pay-process').click(function (e) {
            e.preventDefault();
        });
        $('.menu-btn').click(function () {
            $('.navbar__list').slideToggle();
        });
        $('#continueShopping').click(() => {
            $('.popup').hide();
        });

        if ($(window).width() < 768) {
            $('.navbar__link.has-child').click(function (e) {
                e.preventDefault();
                $(this).next().slideToggle();
            });
        }
    },
    accordionCategory: function () {
        if ($(window).width() < 768) {
            $('.category__title').on('click', function () {
                $(this).next('.category__container').toggle();
                $(this).toggleClass('expand');
            });
        }
    },
    generateHTMLProduct: function (product) {
        const htmlProduct = `<div class="col-md-4 product">
                                <figure>
                                    <a href="/products/${product._id}">
                                        <img class="product__image" src="${product.thumbnail}" alt="">
                                    </a>
                                    <figcaption class="product__info text-center">
                                        <p class="product__name">${product.name}</p>
                                        <p class="product__old-price">${product.oldPrice || '&nbsp;'}</p>
                                        <p class="product__price">${product.price}</p>
                                    </figcaption>
                                </figure>
                                <div class="text-center">
                                    <a href="/products/${product._id}" class="btn btn-2" id="${product._id}">MUA NGAY</a>
                                </div>
                            </div>`;
        $('.product-list>.row').append(htmlProduct);
    },
    filterProduct: function () {
        $('.category__list').on('click', '.category__item', e => {
            const _this = e.target;
            $('.category__item.active').removeClass('active');
            $(_this).addClass('active');
            this.getFilterParam();
            this.filterProductAJAX();
        });
        $('input[name="color"]').on('change', e => {
            this.getFilterParam();
            this.filterProductAJAX();
        }), $('#priceFilter').click(e => {
            this.getFilterParam();
            this.filterProductAJAX();
        });
    },
    getFilterParam: function () {
        this.filterParam.categories = $('.category__item.active').text() !== 'Tất cả' ? $('.category__item.active').text() : '';
        this.filterParam.colors = [];
        if ($('input[name="color"]:checked').length) {
            Array.from($('input[name="color"]:checked')).forEach(checkColor => {
                this.filterParam.colors.push($(checkColor).parent().data('color'));
            });
        }
        this.filterParam.minPrice = $('#minPrice').val();
        this.filterParam.maxPrice = $('#maxPrice').val();
    },
    filterProductAJAX: function () {
        this.loader.show();
        $.ajax({
            url: this.apiURL,
            data: this.filterParam
        }).done(data => {
            if (data.length) {
                $('.product-list>.row').html('');
                data.forEach(product => {
                    this.generateHTMLProduct(product);
                });
            } else {
                $('.product-list>.row').html('');
                $('.product-list>.row').append('<p class="ml-3">Không tìm thấy sản phẩm</p>');
            }
            this.loader.hide();
        });
    },
    sortHandle: function () {
        $('#sort').change(e => {
            const _this = e.target;
            const typeSort = $(_this).find(`option:selected`).data('type');
            const param = $(_this).val();
            this.sortAJAX(typeSort, param);
        });
    },
    sortAJAX: function (typeSort, param) {
        this.loader.show();
        let dataAJAX = {};
        if (typeSort) {
            dataAJAX[typeSort] = param;
        }
        $.ajax({
            url: this.apiURL,
            data: dataAJAX
        }).done(data => {
            if (data.length) {
                $('.product-list>.row').html('');
                data.forEach(product => {
                    this.generateHTMLProduct(product);
                });
            }

            this.loader.hide();
        });
    },
    searchHandle: function () {
        $('#searchBtn').click(e => {
            const searchKey = $('.search').val();
            this.searchAJAX(searchKey);
        });
    },
    searchAJAX: function (searchKey) {
        this.loader.show();
        $.ajax({
            url: this.apiURL,
            data: {
                searchKey: searchKey
            }
        }).done(data => {
            if (data.length) {
                $('.product-list>.row').html('');
                data.forEach(product => {
                    this.generateHTMLProduct(product);
                });
            } else {
                $('.product-list>.row').html('');
                $('.product-list>.row').append('<p class="ml-3">Không tìm thấy sản phẩm</p>');
            }

            this.loader.hide();
        });
    }
};

document.addEventListener("DOMContentLoaded", function () {
    STORE.init();
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFkbWluLmpzIiwiZWxldmF0ZVpvb20uanMiLCJtYWluLmpzIl0sIm5hbWVzIjpbIkFETUlOIiwiaW5pdCIsInRhYkhhbmRsZSIsInRvZ2dsZURhc2hCb2FyZCIsImluaXRFZGl0b3IiLCJidXR0b25IYW5kbGUiLCJpbWFnZXNQaWNrZXIiLCJ0YWJsZUhhbmRsZSIsImNhdGVnb3JpZXNIYW5kbGUiLCJvcGVuUG9wdXAiLCJjbG9zZVBvcHVwIiwiJCIsIm9uIiwiZSIsIl90aGlzIiwidGFyZ2V0IiwiaGFzQ2xhc3MiLCJyZW1vdmVDbGFzcyIsImFkZENsYXNzIiwiZmluZCIsInRleHQiLCJjbGljayIsInRvZ2dsZUNsYXNzIiwiY3NzIiwidGlueW1jZSIsInNlbGVjdG9yIiwiaGVpZ2h0IiwicGx1Z2lucyIsIm1lbnViYXIiLCJ0b29sYmFyIiwiY29udGVudF9jc3MiLCJpZEVkaXQiLCJnZXRBdHRyaWJ1dGUiLCJzaG93IiwiZGF0YSIsImFqYXgiLCJ0eXBlIiwidXJsIiwiZG9uZSIsImVkaXRQcm9kdWN0RXZlbnQiLCJpZCIsImhpZGUiLCJmYWRlSW4iLCJwcm9kdWN0SUQiLCJhbGVydCIsImNsb3Nlc3QiLCJyZW1vdmUiLCJmYWRlT3V0IiwiZmFpbCIsImVyciIsInJlc3BvbnNlVGV4dCIsImdldEluZm9FZGl0IiwiZm9ybURhdGEiLCJGb3JtRGF0YSIsImtleSIsImFwcGVuZCIsImRlbGV0ZSIsImkiLCJpbWFnZXMiLCJsZW5ndGgiLCJwcm9jZXNzRGF0YSIsImNvbnRlbnRUeXBlIiwiZ2V0TmV3UHJvZHVjdEluZm8iLCJlbWFpbCIsInZhbCIsInJvbGUiLCJpbWdEZWxldGVBcnIiLCJwYXJlbnQiLCJwcm9kdWN0Iiwic2V0SW5mb0VkaXQiLCJpZE1vZGFsIiwiaHRtbCIsImZvckVhY2giLCJlbGVtZW50IiwidGh1bWJuYWlsSFRNTCIsImVhY2giLCJpbmRleCIsImNvbG9ycyIsInNvbWUiLCJfaWQiLCJwcm9wIiwiY2F0ZWdvcmllcyIsImluY2x1ZGVzIiwibmFtZSIsInByaWNlIiwib2xkUHJpY2UiLCJnZXQiLCJhdHRyIiwic2V0Q29udGVudCIsImRlc2NyaXB0aW9uIiwidGh1bWJuYWlsIiwicHVzaCIsIkFycmF5IiwiZnJvbSIsImNoZWNrQ29sb3IiLCJkZWxldGVJbWFnZUFyciIsImNoaWxkcmVuIiwiSlNPTiIsInN0cmluZ2lmeSIsImZpbGVzIiwiZGVsZXRlZEltYWdlcyIsImdldENvbnRlbnQiLCJvblNhbXBsZVJlc2l6ZWQiLCJ0YWJsZSIsImN1cnJlbnRUYXJnZXQiLCJjb2xSZXNpemFibGUiLCJsaXZlRHJhZyIsImRyYWdnaW5nQ2xhc3MiLCJvblJlc2l6ZSIsInVybEFQSSIsImN1cnJlbnRJRENhdGVnb3J5IiwiY2F0ZWdvcnlOYW1lIiwicmVmcmVzaENhdGVnb3J5IiwiY29uc29sZSIsImxvZyIsInRoaXNDYXRlZ29yeU5hbWUiLCJwcmV2IiwicGFyc2UiLCJtc2ciLCJkb2N1bWVudCIsImVtcHR5IiwiY2F0ZWdvcmllc0hUTUwiLCJjYXRlZ29yeSIsImFkZEV2ZW50TGlzdGVuZXIiLCJPYmplY3QiLCJjcmVhdGUiLCJkIiwiaCIsInByb3RvdHlwZSIsImwiLCJtIiwiayIsImIiLCJhIiwiYyIsImVsZW0iLCIkZWxlbSIsImltYWdlU3JjIiwib3B0aW9ucyIsImV4dGVuZCIsImZuIiwiZWxldmF0ZVpvb20iLCJ0aW50IiwibGVuc0NvbG91ciIsImxlbnNPcGFjaXR5Iiwiem9vbVR5cGUiLCJzaG93TGVucyIsInJlbW92ZUF0dHIiLCJ6b29tSW1hZ2UiLCJyZWZyZXNoIiwiZ2FsbGVyeSIsImdhbGxlcnlBY3RpdmVDbGFzcyIsInByZXZlbnREZWZhdWx0Iiwiem9vbUltYWdlUHJlIiwic3dhcHRoZWltYWdlIiwic2V0VGltZW91dCIsImZldGNoIiwiSW1hZ2UiLCJvbmxvYWQiLCJsYXJnZVdpZHRoIiwid2lkdGgiLCJsYXJnZUhlaWdodCIsInN0YXJ0Wm9vbSIsImN1cnJlbnRJbWFnZSIsIm9uWm9vbWVkSW1hZ2VMb2FkZWQiLCJzcmMiLCJueldpZHRoIiwibnpIZWlnaHQiLCJpc1dpbmRvd0FjdGl2ZSIsImlzTGVuc0FjdGl2ZSIsImlzVGludEFjdGl2ZSIsIm92ZXJXaW5kb3ciLCJpbWFnZUNyb3NzZmFkZSIsInpvb21XcmFwIiwid3JhcCIsInpvb21Mb2NrIiwic2Nyb2xsaW5nTG9jayIsImNoYW5nZUJnU2l6ZSIsImN1cnJlbnRab29tTGV2ZWwiLCJ6b29tTGV2ZWwiLCJuek9mZnNldCIsIm9mZnNldCIsIndpZHRoUmF0aW8iLCJoZWlnaHRSYXRpbyIsInpvb21XaW5kb3dTdHlsZSIsIlN0cmluZyIsInpvb21XaW5kb3dCZ0NvbG91ciIsInpvb21XaW5kb3dXaWR0aCIsInpvb21XaW5kb3dIZWlnaHQiLCJib3JkZXJTaXplIiwiYm9yZGVyQ29sb3VyIiwiY3Vyc29yIiwibGVuc0hlaWdodCIsImxlbnNXaWR0aCIsImxlbnNTdHlsZSIsImxlbnNCb3JkZXJTaXplIiwibGVuc0JvcmRlckNvbG91ciIsInRpbnRTdHlsZSIsInRpbnRDb2xvdXIiLCJsZW5zUm91bmQiLCJsZW5zU2l6ZSIsImxlbnNTaGFwZSIsInpvb21Db250YWluZXIiLCJsZWZ0IiwidG9wIiwiY29udGFpbkxlbnNab29tIiwiem9vbUxlbnMiLCJhcHBlbmRUbyIsInRyaWdnZXIiLCJ0aW50Q29udGFpbmVyIiwiem9vbVRpbnQiLCJ6b29tVGludGNzcyIsImFmdGVyIiwiem9vbVRpbnRJbWFnZSIsImlzTmFOIiwiem9vbVdpbmRvd1Bvc2l0aW9uIiwiem9vbVdpbmRvdyIsIndpbmRvd09mZnNldExlZnQiLCJ3aW5kb3dPZmZzZXRUb3AiLCJ6b29tV2luZG93Q29udGFpbmVyIiwiYmFja2dyb3VuZEltYWdlIiwiYmluZCIsInNldFBvc2l0aW9uIiwib3JpZ2luYWxFdmVudCIsInRvdWNoZXMiLCJjaGFuZ2VkVG91Y2hlcyIsInNob3dIaWRlV2luZG93Iiwic2hvd0hpZGVMZW5zIiwic2hvd0hpZGVUaW50Iiwic2V0RWxlbWVudHMiLCJsYXN0WCIsImNsaWVudFgiLCJsYXN0WSIsImNsaWVudFkiLCJjdXJyZW50TG9jIiwiYWRkIiwibW91c2VlbnRlciIsIm1vdXNlbGVhdmUiLCJzY3JvbGxMb2NrIiwibWluWm9vbUxldmVsIiwic2Nyb2xsWm9vbUluY3JlbWVudCIsInNjcm9sbFpvb20iLCJjbGVhclRpbWVvdXQiLCJ3aGVlbERlbHRhIiwiZGV0YWlsIiwic3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uIiwic3RvcFByb3BhZ2F0aW9uIiwiY2hhbmdlWm9vbUxldmVsIiwibWF4Wm9vbUxldmVsIiwicGFyc2VGbG9hdCIsInpvb21FbmFibGVkIiwiaXNXaW5kb3dTZXQiLCJyZXNwb25zaXZlIiwibW91c2VMZWZ0IiwicGFyc2VJbnQiLCJwYWdlWCIsIm1vdXNlVG9wIiwicGFnZVkiLCJFdG9wcG9zIiwiRWJvcHBvcyIsIkVsb3Bwb3MiLCJFcm9wcG9zIiwibGVuc0xlZnRQb3MiLCJsZW5zVG9wUG9zIiwidGludHBvcyIsIndpbmRvd0xlZnRQb3MiLCJNYXRoIiwibWF4Iiwid2luZG93VG9wUG9zIiwiYmFja2dyb3VuZFBvc2l0aW9uIiwibmV3dmFsdWVoZWlnaHQiLCJuZXd2YWx1ZXdpZHRoIiwic2V0V2luZG93UG9zdGl0aW9uIiwic2V0VGludFBvc2l0aW9uIiwiZnVsbHdpZHRoIiwiem9vbVdpbmRvd0ZhZGVJbiIsInN0b3AiLCJ6b29tV2luZG93RmFkZU91dCIsImxlbnNGYWRlSW4iLCJsZW5zRmFkZU91dCIsInpvb21UaW50RmFkZUluIiwib3BhY2l0eSIsInRpbnRPcGFjaXR5IiwiYW5pbWF0ZSIsInpvb21UaW50RmFkZU91dCIsInNldExlbnNQb3N0aXRpb24iLCJleHRlcm5hbENvbnRhaW5lciIsImV4dGVybmFsQ29udGFpbmVyV2lkdGgiLCJleHRlcm5hbENvbnRhaW5lckhlaWdodCIsImV4dGVybmFsQ29udGFpbmVyT2Zmc2V0Iiwiem9vbVdpbmRvd09mZmV0eSIsInpvb21XaW5kb3dPZmZldHgiLCJmdWxsaGVpZ2h0IiwiZWFzaW5nIiwieHAiLCJ5cCIsImxvb3AiLCJzZXRJbnRlcnZhbCIsImVhc2luZ0Ftb3VudCIsImNsZWFySW50ZXJ2YWwiLCJ0aW50cG9zeSIsImxvYWRpbmdJY29uIiwic3Bpbm5lciIsIm9uSW1hZ2VTd2FwIiwic3dhcEFjdGlvbiIsIm9uSW1hZ2VTd2FwQ29tcGxldGUiLCJkb25lQ2FsbGJhY2siLCJmIiwiZyIsImNsb25lIiwiY29uc3RyYWluVHlwZSIsImNvbnN0cmFpblNpemUiLCJjb25zdHdpZHRoIiwiY29uc3RoZWlnaHQiLCJnZXRDdXJyZW50SW1hZ2UiLCJnZXRHYWxsZXJ5TGlzdCIsImdhbGxlcnlsaXN0IiwidW5zaGlmdCIsImhyZWYiLCJ0aXRsZSIsIm5ld3ZhbHVlIiwidG9GaXhlZCIsIm1heGhlaWdodG5ld3ZhbHVlIiwibWF4d2lkdGh0bmV3dmFsdWUiLCJzY3Jjb250aW51ZSIsImNoYW5nZVpvb20iLCJjbG9zZUFsbCIsInNlbGYiLCJjaGFuZ2VTdGF0ZSIsInpvb21BY3RpdmF0aW9uIiwicHJlbG9hZGluZyIsImRlYnVnIiwiem9vbVdpbmRvd0Fsd2F5c1Nob3ciLCJsZW5zem9vbSIsIm9uQ29tcGxldGUiLCJub29wIiwialF1ZXJ5Iiwid2luZG93IiwiU1RPUkUiLCJhcGlVUkwiLCJmaWx0ZXJQYXJhbSIsIm1pblByaWNlIiwibWF4UHJpY2UiLCJsb2FkZXIiLCJpbml0U2xpZGUiLCJzaG93QmlnUHJvZHVjdFRodW1iIiwiYWRkVG9DYXJ0RXZlbnQiLCJwb3B1cEhhbmRsZSIsImFjY29yZGlvbkNhdGVnb3J5IiwiZmlsdGVyUHJvZHVjdCIsInNvcnRIYW5kbGUiLCJzZWFyY2hIYW5kbGUiLCJzbGljayIsImFycm93cyIsImRvdHMiLCJhdXRvcGxheSIsImF1dG9wbGF5U3BlZWQiLCJwcmV2QXJyb3ciLCJuZXh0QXJyb3ciLCJzbGlkZXNUb1Nob3ciLCJpbmZpbml0ZSIsImZvY3VzT25TZWxlY3QiLCJzbGlkZXNUb1Njcm9sbCIsImJyZWFrcG9pbnQiLCJzZXR0aW5ncyIsImNlbnRlck1vZGUiLCJpbml0Wm9vbVByb2R1Y3QiLCJzcmNEZWZhdWx0Iiwiem9vbURlZmF1bHQiLCJzbGlkZVRvZ2dsZSIsIm5leHQiLCJ0b2dnbGUiLCJnZW5lcmF0ZUhUTUxQcm9kdWN0IiwiaHRtbFByb2R1Y3QiLCJnZXRGaWx0ZXJQYXJhbSIsImZpbHRlclByb2R1Y3RBSkFYIiwiY2hhbmdlIiwidHlwZVNvcnQiLCJwYXJhbSIsInNvcnRBSkFYIiwiZGF0YUFKQVgiLCJzZWFyY2hLZXkiLCJzZWFyY2hBSkFYIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxRQUFRO0FBQ1pDLFFBQU0sWUFBVztBQUNmLFNBQUtDLFNBQUw7QUFDQSxTQUFLQyxlQUFMO0FBQ0EsU0FBS0MsVUFBTDtBQUNBLFNBQUtDLFlBQUw7QUFDQSxTQUFLQyxZQUFMO0FBQ0EsU0FBS0MsV0FBTDtBQUNBLFNBQUtDLGdCQUFMO0FBQ0EsU0FBS0MsU0FBTDtBQUNBLFNBQUtDLFVBQUw7QUFDRCxHQVhXO0FBWVpSLGFBQVcsWUFBVztBQUNwQlMsTUFBRSxnQkFBRixFQUFvQkMsRUFBcEIsQ0FBdUIsT0FBdkIsRUFBaUNDLENBQUQsSUFBTztBQUNyQyxZQUFNQyxRQUFRRCxFQUFFRSxNQUFoQjtBQUNBLFVBQUksQ0FBQ0osRUFBRUcsS0FBRixFQUFTRSxRQUFULENBQWtCLFFBQWxCLENBQUwsRUFBa0M7QUFDaENMLFVBQUUsZ0JBQUYsRUFBb0JNLFdBQXBCLENBQWdDLFFBQWhDO0FBQ0FOLFVBQUUsc0JBQUYsRUFBMEJNLFdBQTFCLENBQXNDLFFBQXRDO0FBQ0FOLFVBQUVHLEtBQUYsRUFBU0ksUUFBVCxDQUFrQixRQUFsQjtBQUNBUCxVQUFHLCtCQUE4QkEsRUFBRUcsS0FBRixFQUFTSyxJQUFULENBQWMsTUFBZCxFQUFzQkMsSUFBdEIsRUFBNkIsR0FBOUQsRUFBa0VGLFFBQWxFLENBQTJFLFFBQTNFO0FBQ0Q7QUFDRixLQVJEO0FBU0QsR0F0Qlc7QUF1QlpmLG1CQUFpQixZQUFXO0FBQzFCUSxNQUFFLG1CQUFGLEVBQXVCVSxLQUF2QixDQUE4QlIsQ0FBRCxJQUFPO0FB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RUFBd0I0RCxJQUF4QixDQUE2QixFQUE3QjtBQUNBNUQsa0JBQUUsb0JBQUYsRUFBd0I0QyxNQUF4QixDQUErQiw2Q0FBL0I7QUFDSDs7QUFFRCxpQkFBS2dTLE1BQUwsQ0FBWTlTLElBQVo7QUFDSCxTQWpCRDtBQWtCSDtBQXBQUyxDQUFkOztBQXVQQThFLFNBQVNJLGdCQUFULENBQTBCLGtCQUExQixFQUE4QyxZQUFXO0FBQ3JEdU4sVUFBTWpWLElBQU47QUFDSCxDQUZEIiwiZmlsZSI6Im1haW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBBRE1JTiA9IHtcclxuICBpbml0OiBmdW5jdGlvbigpIHtcclxuICAgIHRoaXMudGFiSGFuZGxlKCk7XHJcbiAgICB0aGlzLnRvZ2dsZURhc2hCb2FyZCgpO1xyXG4gICAgdGhpcy5pbml0RWRpdG9yKCk7XHJcbiAgICB0aGlzLmJ1dHRvbkhhbmRsZSgpO1xyXG4gICAgdGhpcy5pbWFnZXNQaWNrZXIoKTtcclxuICAgIHRoaXMudGFibGVIYW5kbGUoKTtcclxuICAgIHRoaXMuY2F0ZWdvcmllc0hhbmRsZSgpO1xyXG4gICAgdGhpcy5vcGVuUG9wdXAoKTtcclxuICAgIHRoaXMuY2xvc2VQb3B1cCgpO1xyXG4gIH0sXHJcbiAgdGFiSGFuZGxlOiBmdW5jdGlvbigpIHtcclxuICAgICQoJy5tYW5hZ2VyX19pdGVtJykub24oJ2NsaWNrJywgKGUpID0+IHtcclxuICAgICAgY29uc3QgX3RoaXMgPSBlLnRhcmdldDtcclxuICAgICAgaWYgKCEkKF90aGlzKS5oYXNDbGFzcygnYWN0aXZlJykpIHtcclxuICAgICAgICAkKCcubWFuYWdlcl9faXRlbScpLnJlbW92ZUNsYXNzKCdhY3RpdmUnKTtcclxuICAgICAgICAkKCcubWFpbi1jb250ZW50LmFjdGl2ZScpLnJlbW92ZUNsYXNzKCdhY3RpdmUnKTtcclxuICAgICAgICAkKF90aGlzKS5hZGRDbGFzcygnYWN0aXZlJyk7XHJcbiAgICAgICAgJChgLm1haW4tY29udGVudFtkYXRhLW1hcHBpbmc9XCIkeyQoX3RoaXMpLmZpbmQoJ3NwYW4nKS50ZXh0KCl9XCJgKS5hZGRDbGFzcygnYWN0aXZlJyk7XHJcbiAgICAgIH1cclxuICAgIH0pXHJcbiAgfSxcclxuICB0b2dnbGVEYXNoQm9hcmQ6IGZ1bmN0aW9uKCkge1xyXG4gICAgJCgnI3RvZ2dsZS1kYXNoYm9hcmQnKS5jbGljaygoZSkgPT4ge1xyXG4gICAgICBjb25zdCBfdGhpcyA9IGUudGFyZ2V0O1xyXG4gICAgICAkKF90aGlzKS50b2dnbGVDbGFzcygnYWN0aXZlJyk7XHJcbiAgICAgIGlmICghJChfdGhpcykuaGFzQ2xhc3MoJ2FjdGl2ZScpKSB7XHJcbiAgICAgICAgJCgnLnNpZGViYXInKS5jc3MoJ21hcmdpbi1sZWZ0JywgJy0yMDBweCcpO1xyXG4gICAgICAgICQoJy5tYWluJykuY3NzKCdtYXJnaW4tbGVmdCcsICcwJyk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgJCgnLnNpZGViYXInKS5jc3MoJ21hcmdpbi1sZWZ0JywgJzAnKTtcclxuICAgICAgICAkKCcubWFpbicpLmNzcygnbWFyZ2luLWxlZnQnLCAnMjAwcHgnKTtcclxuICAgICAgfVxyXG4gICAgfSlcclxuICB9LFxyXG4gIGluaXRFZGl0b3I6IGZ1bmN0aW9uKCkge1xyXG4gICAgdGlueW1jZS5pbml0KHtcclxuICAgICAgc2VsZWN0b3I6ICd0ZXh0YXJlYScsXHJcbiAgICAgIGhlaWdodDogNTAwLFxyXG4gICAgICBwbHVnaW5zOiBbXHJcbiAgICAgICAgXCJhZHZsaXN0IGF1dG9saW5rIGxpc3RzIGxpbmsgaW1hZ2UgY2hhcm1hcCBwcmludCBwcmV2aWV3IGFuY2hvclwiLFxyXG4gICAgICAgIFwic2VhcmNocmVwbGFjZSB2aXN1YWxibG9ja3MgY29kZSBmdWxsc2NyZWVuXCIsXHJcbiAgICAgICAgXCJpbnNlcnRkYXRldGltZSBtZWRpYSB0YWJsZSBjb250ZXh0bWVudSBwYXN0ZSBpbWFnZXRvb2xzIHdvcmRjb3VudFwiXHJcbiAgICAgIF0sXHJcbiAgICAgIG1lbnViYXI6IGZhbHNlLFxyXG4gICAgICB0b29sYmFyOiBcImluc2VydGZpbGUgdW5kbyByZWRvIHwgc3R5bGVzZWxlY3QgfCBib2xkIGl0YWxpYyB8IGFsaWdubGVmdCBhbGlnbmNlbnRlciBhbGlnbnJpZ2h0IGFsaWduanVzdGlmeSB8IGJ1bGxpc3QgbnVtbGlzdCBvdXRkZW50IGluZGVudCB8IGxpbmsgaW1hZ2VcIixcclxuICAgICAgY29udGVudF9jc3M6IFtcclxuICAgICAgICAnLy9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M/ZmFtaWx5PUxhdG86MzAwLDMwMGksNDAwLDQwMGknLFxyXG4gICAgICAgICcvL3d3dy50aW55bWNlLmNvbS9jc3MvY29kZXBlbi5taW4uY3NzJ1xyXG4gICAgICBdXHJcbiAgICB9KTtcclxuICB9LFxyXG4gIGJ1dHRvbkhhbmRsZTogZnVuY3Rpb24oKSB7XHJcbiAgICAkKCcucHJvZHVjdC10YWJsZScpLm9uKCdjbGljaycsICcuYnRuLWFkbWluLWVkaXQnLCAoZSkgPT4ge1xyXG4gICAgICBjb25zdCBpZEVkaXQgPSBlLnRhcmdldC5nZXRBdHRyaWJ1dGUoJ2RhdGEtaWQnKTtcclxuICAgICAgJCgnI21vZGFsLWVkaXQnKS5zaG93KCk7XHJcbiAgICAgICQoJ2JvZHknKS5jc3MoJ292ZXJmbG93JywgJ2hpZGRlbicpO1xyXG4gICAgICAkKCcjZWRpdEFqYXgnKS5kYXRhKCdpZCcsIGlkRWRpdCk7XHJcbiAgICAgICQuYWpheCh7XHJcbiAgICAgICAgdHlwZTogJ0dFVCcsXHJcbiAgICAgICAgdXJsOiBgaHR0cHM6Ly9mdW5pdHVyZS1zdG9yZS5oZXJva3VhcHAuY29tL3YxL2FwaS9wcm9kdWN0cy8keyBpZEVkaXQgfWBcclxuICAgICAgfSkuZG9uZShkYXRhID0+IHtcclxuICAgICAgICAvLyBjb25zb2xlLmxvZyhkYXRhKVxyXG4gICAgICAgIHRoaXMuZWRpdFByb2R1Y3RFdmVudChkYXRhKTtcclxuICAgICAgfSlcclxuICAgIH0pXHJcblxyXG4gICAgJCgnLnByb2R1Y3QtdGFibGUnKS5vbignY2xpY2snLCAnLmJ0bi1hZG1pbi1kZWxldGUnLCBlID0+IHtcclxuICAgICAgY29uc3QgaWQgPSAkKGUudGFyZ2V0KS5kYXRhKCdpZCcpO1xyXG4gICAgICAkKCcubG9hZGVyJykuY3NzKCdkaXNwbGF5JywgJ2ZsZXgnKS5oaWRlKCkuZmFkZUluKCk7XHJcbiAgICAgICQuYWpheCh7XHJcbiAgICAgICAgdHlwZTogJ0RFTEVURScsXHJcbiAgICAgICAgdXJsOiAnaHR0cHM6Ly9mdW5pdHVyZS1zdG9yZS5oZXJva3VhcHAuY29tL3YxL2FwaS9wcm9kdWN0cycsXHJcbiAgICAgICAgZGF0YToge1xyXG4gICAgICAgICAgcHJvZHVjdElEOiBpZFxyXG4gICAgICAgIH1cclxuICAgICAgfSkuZG9uZSgoKSA9PiB7XHJcbiAgICAgICAgYWxlcnQoJ8SQw6MgeMOzYSEnKTtcclxuICAgICAgICAkKGUudGFyZ2V0KS5jbG9zZXN0KCd0cicpLnJlbW92ZSgpO1xyXG4gICAgICAgICQoJy5sb2FkZXInKS5mYWRlT3V0KCk7XHJcbiAgICAgIH0pLmZhaWwoKGVycikgPT4ge1xyXG4gICAgICAgIGFsZXJ0KGVyci5yZXNwb25zZVRleHQpO1xyXG4gICAgICB9KVxyXG4gICAgfSlcclxuXHJcbiAgICAkKCcjYWRkUHJvZHVjdEJ0bicpLmNsaWNrKCgpID0+IHtcclxuICAgICAgJCgnI21vZGFsJykuc2hvdygpO1xyXG4gICAgICAkKCdib2R5JykuY3NzKCdvdmVyZmxvdycsICdoaWRkZW4nKTtcclxuICAgIH0pXHJcbiAgICAkKCcuY2xvc2UtbW9kYWwnKS5jbGljaygoKSA9PiB7XHJcbiAgICAgICQoJy5tb2RhbCcpLmhpZGUoKTtcclxuICAgICAgJCgnYm9keScpLmNzcygnb3ZlcmZsb3cnLCAnYXV0bycpO1xyXG4gICAgfSk7XHJcbiAgICAkKCcjdXBkYXRlUm9sZScpLmNsaWNrKCgpID0+IHtcclxuICAgICAgJCgnI21vZGFsLWFjY291bnQnKS5zaG93KCk7XHJcbiAgICAgICQoJ2JvZHknKS5jc3MoJ292ZXJmbG93JywgJ2hpZGRlbicpO1xyXG4gICAgfSlcclxuXHJcbiAgICAkKCcjZWRpdEFqYXgnKS5jbGljaygoZSkgPT4ge1xyXG4gICAgICBjb25zdCBpZEVkaXQgPSAkKGUudGFyZ2V0KS5kYXRhKCdpZCcpO1xyXG4gICAgICBjb25zdCBkYXRhID0gdGhpcy5nZXRJbmZvRWRpdChpZEVkaXQpO1xyXG4gICAgICBsZXQgZm9ybURhdGEgPSBuZXcgRm9ybURhdGEoKTtcclxuICAgICAgZm9yIChsZXQga2V5IGluIGRhdGEpIHtcclxuICAgICAgICBmb3JtRGF0YS5hcHBlbmQoa2V5LCBkYXRhW2tleV0pO1xyXG4gICAgICB9XHJcbiAgICAgIGZvcm1EYXRhLmRlbGV0ZSgnaW1hZ2VzJyk7XHJcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZGF0YS5pbWFnZXMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICBmb3JtRGF0YS5hcHBlbmQoJ2ltYWdlcycsIGRhdGEuaW1hZ2VzW2ldKVxyXG4gICAgICB9XHJcbiAgICAgICQuYWpheCh7XHJcbiAgICAgICAgdXJsOiAnaHR0cHM6Ly9mdW5pdHVyZS1zdG9yZS5oZXJva3VhcHAuY29tL3YxL2FwaS9wcm9kdWN0cycsXHJcbiAgICAgICAgcHJvY2Vzc0RhdGE6IGZhbHNlLFxyXG4gICAgICAgIGNvbnRlbnRUeXBlOiBmYWxzZSxcclxuICAgICAgICB0eXBlOiAnUFVUJyxcclxuICAgICAgICBkYXRhOiBmb3JtRGF0YVxyXG4gICAgICB9KS5kb25lKGRhdGEgPT4ge1xyXG4gICAgICAgICQoJy5tb2RhbCcpLmhpZGUoKTtcclxuICAgICAgICAkKCdib2R5JykuY3NzKCdvdmVyZmxvdycsICdhdXRvJyk7XHJcbiAgICAgIH0pLmZhaWwoZXJyID0+IHtcclxuICAgICAgICBhbGVydChlcnIucmVzcG9uc2VUZXh0KTtcclxuICAgICAgfSlcclxuICAgIH0pXHJcblxyXG4gICAgJCgnI2xldHNBZGRBUHJvZHVjdCcpLmNsaWNrKChlKSA9PiB7XHJcbiAgICAgIGNvbnN0IGRhdGEgPSB0aGlzLmdldE5ld1Byb2R1Y3RJbmZvKCk7XHJcbiAgICAgIGxldCBmb3JtRGF0YSA9IG5ldyBGb3JtRGF0YSgpO1xyXG4gICAgICBmb3IgKGxldCBrZXkgaW4gZGF0YSkge1xyXG4gICAgICAgIGZvcm1EYXRhLmFwcGVuZChrZXksIGRhdGFba2V5XSk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGZvcm1EYXRhLmRlbGV0ZSgnaW1hZ2VzJyk7XHJcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZGF0YS5pbWFnZXMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICBmb3JtRGF0YS5hcHBlbmQoJ2ltYWdlcycsIGRhdGEuaW1hZ2VzW2ldKVxyXG4gICAgICB9XHJcbiAgICAgICQuYWpheCh7XHJcbiAgICAgICAgdXJsOiAnaHR0cHM6Ly9mdW5pdHVyZS1zdG9yZS5oZXJva3VhcHAuY29tL3YxL2FwaS9wcm9kdWN0cycsXHJcbiAgICAgICAgcHJvY2Vzc0RhdGE6IGZhbHNlLFxyXG4gICAgICAgIGNvbnRlbnRUeXBlOiBmYWxzZSxcclxuICAgICAgICB0eXBlOiAnUE9TVCcsXHJcbiAgICAgICAgZGF0YTogZm9ybURhdGFcclxuICAgICAgfSkuZG9uZShkYXRhID0+IHtcclxuICAgICAgICAkKCcubW9kYWwnKS5oaWRlKCk7XHJcbiAgICAgICAgJCgnYm9keScpLmNzcygnb3ZlcmZsb3cnLCAnYXV0bycpO1xyXG4gICAgICB9KS5mYWlsKGVyciA9PiB7XHJcbiAgICAgICAgYWxlcnQoZXJyLnJlc3BvbnNlVGV4dCk7XHJcbiAgICAgIH0pXHJcbiAgICB9KVxyXG5cclxuICAgICQoJyNsZXRzVXBkYXRlUm9sZScpLmNsaWNrKCgpID0+IHtcclxuICAgICAgJC5hamF4KHtcclxuICAgICAgICB1cmw6ICdodHRwczovL2Z1bml0dXJlLXN0b3JlLmhlcm9rdWFwcC5jb20vdjEvYXBpL3VzZXIvcm9sZScsXHJcbiAgICAgICAgZGF0YToge1xyXG4gICAgICAgICAgZW1haWw6ICQoJyN1cGRhdGVSb2xlT3ZlcmxheSAjZW1haWxGb3JSb2xlVXBkYXRlJykudmFsKCksXHJcbiAgICAgICAgICByb2xlOiAkKCcjdXBkYXRlUm9sZU92ZXJsYXkgI3JvbGVGb3JSb2xlVXBkYXRlJykudmFsKClcclxuICAgICAgICB9LFxyXG4gICAgICAgIHR5cGU6ICdQVVQnXHJcbiAgICAgIH0pLmRvbmUoZGF0YSA9PiB7XHJcbiAgICAgICAgJCgnLm1vZGFsJykuaGlkZSgpO1xyXG4gICAgICAgICQoJ2JvZHknKS5jc3MoJ292ZXJmbG93JywgJ2F1dG8nKTtcclxuICAgICAgICBhbGVydCgnZG9uZScpO1xyXG4gICAgICAgICQoJy5tb2RhbCcpLmhpZGUoKTtcclxuICAgICAgICAkKCdib2R5JykuY3NzKCdvdmVyZmxvdycsICdhdXRvJyk7XHJcbiAgICAgIH0pLmZhaWwoZXJyID0+IHtcclxuICAgICAgICBhbGVydCgnU29tZXRoaW5nIHdlbnQgd3JvbmcnKTtcclxuICAgICAgfSlcclxuICAgIH0pXHJcbiAgfSxcclxuICBpbWFnZXNQaWNrZXI6IGZ1bmN0aW9uKCkge1xyXG4gICAgbGV0IGltZ0RlbGV0ZUFyciA9IFtdO1xyXG4gICAgJCgnLmltZy11cGxvYWQtY29udGFpbmVyJykub24oJ2NsaWNrJywgJy5pbWctd3JhcHBlcicsIGUgPT4ge1xyXG4gICAgICBjb25zdCBfdGhpcyA9IGUudGFyZ2V0O1xyXG4gICAgICAkKF90aGlzKS5wYXJlbnQoKS50b2dnbGVDbGFzcygnc2VsZWN0ZWQnKTtcclxuICAgIH0pXHJcbiAgfSxcclxuICBlZGl0UHJvZHVjdEV2ZW50OiBmdW5jdGlvbihwcm9kdWN0KSB7XHJcbiAgICB0aGlzLnNldEluZm9FZGl0KHByb2R1Y3QpO1xyXG4gIH0sXHJcbiAgc2V0SW5mb0VkaXQ6IGZ1bmN0aW9uKHByb2R1Y3QpIHtcclxuICAgIGNvbnN0IGlkTW9kYWwgPSAnI21vZGFsLWVkaXQnO1xyXG4gICAgJChpZE1vZGFsKS5maW5kKCcuaW1nLXVwbG9hZC1jb250YWluZXInKS5odG1sKCcnKTtcclxuICAgIHByb2R1Y3QuaW1hZ2VzLmZvckVhY2goZWxlbWVudCA9PiB7XHJcbiAgICAgIGNvbnN0IHRodW1ibmFpbEhUTUwgPSBgPGRpdiBjbGFzcz1cImltZy13cmFwcGVyXCI+PGltZyBzcmM9XCIkeyBlbGVtZW50IH1cIiBhbHQ9XCJcIj48L2Rpdj5gO1xyXG4gICAgICAkKGlkTW9kYWwpLmZpbmQoJy5pbWctdXBsb2FkLWNvbnRhaW5lcicpLmFwcGVuZCh0aHVtYm5haWxIVE1MKTtcclxuXHJcbiAgICB9KTtcclxuXHJcbiAgICAkKGlkTW9kYWwpLmZpbmQoJ2lucHV0W25hbWU9XCJjb2xvcl9lZGl0UHJvZHVjdFwiXScpLmVhY2goKGluZGV4LCBlbGVtZW50KSA9PiB7XHJcbiAgICAgIGlmIChwcm9kdWN0LmNvbG9ycy5zb21lKGUgPT4gZS5faWQgPT09ICQoZWxlbWVudCkucGFyZW50KCkuZGF0YSgnaWQnKSkpIHtcclxuICAgICAgICAkKGVsZW1lbnQpLnByb3AoJ2NoZWNrZWQnLCB0cnVlKTtcclxuICAgICAgfVxyXG4gICAgICBlbHNlICQoZWxlbWVudCkucHJvcCgnY2hlY2tlZCcsIGZhbHNlKTtcclxuICAgIH0pO1xyXG5cclxuICAgICQoaWRNb2RhbCkuZmluZCgnLmZvcm0tY2hlY2staW5wdXQnKS5lYWNoKChpbmRleCwgZWxlbWVudCkgPT4ge1xyXG4gICAgICBpZiAocHJvZHVjdC5jYXRlZ29yaWVzLmluY2x1ZGVzKCQoZWxlbWVudCkudmFsKCkpKSB7XHJcbiAgICAgICAgJChlbGVtZW50KS5wcm9wKCdjaGVja2VkJywgdHJ1ZSk7XHJcbiAgICAgIH1cclxuICAgICAgZWxzZSAgJChlbGVtZW50KS5wcm9wKCdjaGVja2VkJywgZmFsc2UpO1xyXG4gICAgfSlcclxuXHJcbiAgICAkKGlkTW9kYWwpLmZpbmQoJy5wcm9kTmFtZUlucHV0JykudmFsKHByb2R1Y3QubmFtZSk7XHJcbiAgICAkKGlkTW9kYWwpLmZpbmQoJy5jdXJyUHJpY2VJbnB1dCcpLnZhbChwcm9kdWN0LnByaWNlKTtcclxuICAgICQoaWRNb2RhbCkuZmluZCgnLm9sZFByaWNlSW5wdXQnKS52YWwocHJvZHVjdC5vbGRQcmljZSk7XHJcbiAgICB0aW55bWNlLmdldCgkKGlkTW9kYWwpLmZpbmQoJ3RleHRhcmVhJykuYXR0cignaWQnKSkuc2V0Q29udGVudChwcm9kdWN0LmRlc2NyaXB0aW9uKTtcclxuICAgICQoaWRNb2RhbCkuZmluZCgnLnByZXNlbnQtaW1nJykuYXR0cignc3JjJywgcHJvZHVjdC50aHVtYm5haWwpO1xyXG4gIH0sXHJcbiAgZ2V0SW5mb0VkaXQ6IGZ1bmN0aW9uKGlkKSB7XHJcbiAgICBjb25zdCBpZE1vZGFsID0gJyNtb2RhbC1lZGl0JztcclxuICAgIGxldCBjYXRlZ29yaWVzID0gW107XHJcbiAgICAkKGlkTW9kYWwpLmZpbmQoJy5mb3JtLWNoZWNrLWlucHV0JykuZWFjaCgoaW5kZXgsIGVsZW1lbnQpID0+IHtcclxuICAgICAgaWYgKCQoZWxlbWVudCkucHJvcCgnY2hlY2tlZCcpKSB7XHJcbiAgICAgICAgY2F0ZWdvcmllcy5wdXNoKCQoZWxlbWVudCkudmFsKCkpO1xyXG4gICAgICB9XHJcbiAgICB9KVxyXG4gICAgbGV0IGNvbG9ycyA9IFtdO1xyXG4gICAgaWYgKCQoJ2lucHV0W25hbWU9XCJjb2xvcl9lZGl0UHJvZHVjdFwiXTpjaGVja2VkJykubGVuZ3RoKSB7XHJcbiAgICAgIEFycmF5LmZyb20oJCgnaW5wdXRbbmFtZT1cImNvbG9yX2VkaXRQcm9kdWN0XCJdOmNoZWNrZWQnKSkuZm9yRWFjaChjaGVja0NvbG9yID0+IHtcclxuICAgICAgICBjb2xvcnMucHVzaCgkKGNoZWNrQ29sb3IpLnBhcmVudCgpLmRhdGEoJ2lkJykpO1xyXG4gICAgICB9KVxyXG4gICAgfVxyXG4gICAgbGV0IGRlbGV0ZUltYWdlQXJyID0gW107XHJcbiAgICAkKGlkTW9kYWwpLmZpbmQoJy5pbWctd3JhcHBlci5zZWxlY3RlZCcpLmVhY2goKGluZGV4LCBlbGVtZW50KSA9PiB7XHJcbiAgICAgIGRlbGV0ZUltYWdlQXJyLnB1c2goJChlbGVtZW50KS5jaGlsZHJlbigpLmF0dHIoJ3NyYycpKTtcclxuICAgIH0pXHJcbiAgICBjb25zdCBmb3JtRGF0YSA9IHtcclxuICAgICAgcHJvZHVjdElEOiBpZCxcclxuICAgICAgY29sb3JzOiBKU09OLnN0cmluZ2lmeShjb2xvcnMpLFxyXG4gICAgICB0aHVtYm5haWw6ICQoJy5hdmF0YXJGaWxlVXBsb2FkJylbMF0uZmlsZXNbMF0sXHJcbiAgICAgIG5hbWU6ICQoaWRNb2RhbCkuZmluZCgnLnByb2ROYW1lSW5wdXQnKS52YWwoKSxcclxuICAgICAgZGVsZXRlZEltYWdlczogSlNPTi5zdHJpbmdpZnkoZGVsZXRlSW1hZ2VBcnIpLFxyXG4gICAgICBwcmljZTogJChpZE1vZGFsKS5maW5kKCcuY3VyclByaWNlSW5wdXQnKS52YWwoKSxcclxuICAgICAgb2xkUHJpY2U6ICQoaWRNb2RhbCkuZmluZCgnLm9sZFByaWNlSW5wdXQnKS52YWwoKSxcclxuICAgICAgZGVzY3JpcHRpb246IHRpbnltY2UuZ2V0KCQoaWRNb2RhbCkuZmluZCgndGV4dGFyZWEnKS5hdHRyKCdpZCcpKS5nZXRDb250ZW50KCksXHJcbiAgICAgIGNhdGVnb3JpZXM6IEpTT04uc3RyaW5naWZ5KGNhdGVnb3JpZXMpLFxyXG4gICAgICBpbWFnZXM6ICQoJy50aHVtbmFpbEZpbGVVcGxvYWQnKVswXS5maWxlc1xyXG4gICAgfTtcclxuICAgIHJldHVybiBmb3JtRGF0YTtcclxuICB9LFxyXG4gIGdldE5ld1Byb2R1Y3RJbmZvOiBmdW5jdGlvbigpIHtcclxuICAgIGNvbnN0IGlkTW9kYWwgPSAnI21vZGFsJztcclxuICAgIGxldCBjYXRlZ29yaWVzID0gW107XHJcbiAgICAkKGlkTW9kYWwpLmZpbmQoJy5mb3JtLWNoZWNrLWlucHV0JykuZWFjaCgoaW5kZXgsIGVsZW1lbnQpID0+IHtcclxuICAgICAgaWYgKCQoZWxlbWVudCkucHJvcCgnY2hlY2tlZCcpKSB7XHJcbiAgICAgICAgY2F0ZWdvcmllcy5wdXNoKCQoZWxlbWVudCkudmFsKCkpO1xyXG4gICAgICB9XHJcbiAgICB9KVxyXG4gICAgbGV0IGNvbG9ycyA9IFtdO1xyXG4gICAgaWYgKCQoJ2lucHV0W25hbWU9XCJjb2xvcl9hZGRQcm9kdWN0XCJdOmNoZWNrZWQnKS5sZW5ndGgpIHtcclxuICAgICAgQXJyYXkuZnJvbSgkKCdpbnB1dFtuYW1lPVwiY29sb3JfYWRkUHJvZHVjdFwiXTpjaGVja2VkJykpLmZvckVhY2goY2hlY2tDb2xvciA9PiB7XHJcbiAgICAgICAgY29sb3JzLnB1c2goJChjaGVja0NvbG9yKS5wYXJlbnQoKS5kYXRhKCdpZCcpKTtcclxuICAgICAgfSlcclxuICAgIH1cclxuICAgIGNvbnN0IGZvcm1EYXRhID0ge1xyXG4gICAgICBjb2xvcnM6IEpTT04uc3RyaW5naWZ5KGNvbG9ycyksXHJcbiAgICAgIHRodW1ibmFpbDogJCgnLmFkZF90aHVtbmFpbFVwbG9hZCcpWzBdLmZpbGVzWzBdLFxyXG4gICAgICBuYW1lOiAkKGlkTW9kYWwpLmZpbmQoJy5wcm9kTmFtZUlucHV0JykudmFsKCksXHJcbiAgICAgIHByaWNlOiAkKGlkTW9kYWwpLmZpbmQoJy5jdXJyUHJpY2VJbnB1dCcpLnZhbCgpLFxyXG4gICAgICBvbGRQcmljZTogJChpZE1vZGFsKS5maW5kKCcub2xkUHJpY2VJbnB1dCcpLnZhbCgpLFxyXG4gICAgICBkZXNjcmlwdGlvbjogdGlueW1jZS5nZXQoJChpZE1vZGFsKS5maW5kKCd0ZXh0YXJlYScpLmF0dHIoJ2lkJykpLmdldENvbnRlbnQoKSxcclxuICAgICAgY2F0ZWdvcmllczogSlNPTi5zdHJpbmdpZnkoY2F0ZWdvcmllcyksXHJcbiAgICAgIGltYWdlczogJCgnLmFkZF9pbWFnZXNVcGxvYWQnKVswXS5maWxlc1xyXG4gICAgfTtcclxuICAgIHJldHVybiBmb3JtRGF0YTtcclxuICB9LFxyXG4gIHRhYmxlSGFuZGxlOiBmdW5jdGlvbigpIHtcclxuICAgICQoZnVuY3Rpb24oKSB7XHJcbiAgICAgIHZhciBvblNhbXBsZVJlc2l6ZWQgPSBmdW5jdGlvbihlKSB7XHJcbiAgICAgICAgdmFyIHRhYmxlID0gJChlLmN1cnJlbnRUYXJnZXQpOyAvL3JlZmVyZW5jZSB0byB0aGUgcmVzaXplZCB0YWJsZVxyXG4gICAgICB9O1xyXG5cclxuICAgICAgJChcInRhYmxlXCIpLmNvbFJlc2l6YWJsZSh7XHJcbiAgICAgICAgbGl2ZURyYWc6IHRydWUsXHJcbiAgICAgICAgZHJhZ2dpbmdDbGFzczogXCJkcmFnZ2luZ1wiLFxyXG4gICAgICAgIG9uUmVzaXplOiBvblNhbXBsZVJlc2l6ZWRcclxuICAgICAgfSk7XHJcblxyXG4gICAgfSk7XHJcbiAgfSxcclxuICBjYXRlZ29yaWVzSGFuZGxlOiBmdW5jdGlvbigpIHtcclxuICAgIGNvbnN0IHVybEFQSSA9ICdodHRwczovL2Z1bml0dXJlLXN0b3JlLmhlcm9rdWFwcC5jb20vdjEvYXBpL2NhdGVnb3JpZXMnO1xyXG4gICAgLy8gY29uc3QgdXJsQVBJID0gJ2h0dHA6Ly9sb2NhbGhvc3Q6OTAwMC92MS9hcGkvY2F0ZWdvcmllcyc7XHJcbiAgICBsZXQgY3VycmVudElEQ2F0ZWdvcnk7XHJcbiAgICAkKCcjbGV0c0FkZENhdGVnb3J5JykuY2xpY2soKCkgPT4ge1xyXG4gICAgICBjb25zdCBjYXRlZ29yeU5hbWUgPSAkKCcjaW5wdXQtY2F0ZWdvcnknKS52YWwoKTtcclxuICAgICAgaWYgKGNhdGVnb3J5TmFtZS5sZW5ndGgpIHtcclxuICAgICAgICAkLmFqYXgoe1xyXG4gICAgICAgICAgdHlwZTogJ1BPU1QnLFxyXG4gICAgICAgICAgdXJsOiB1cmxBUEksXHJcbiAgICAgICAgICBkYXRhOiB7XHJcbiAgICAgICAgICAgIG5hbWU6IGNhdGVnb3J5TmFtZVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0pLmRvbmUoKCkgPT4ge1xyXG4gICAgICAgICAgYWxlcnQoJ0RvbmUhJyk7XHJcbiAgICAgICAgICAkKCcubW9kYWwnKS5oaWRlKCk7XHJcbiAgICAgICAgICAkKCdib2R5JykuY3NzKCdvdmVyZmxvdycsICdhdXRvJyk7XHJcbiAgICAgICAgICBBRE1JTi5yZWZyZXNoQ2F0ZWdvcnkoKTtcclxuICAgICAgICB9KS5mYWlsKGVyciA9PiB7XHJcbiAgICAgICAgICBjb25zb2xlLmxvZyhlcnIucmVzcG9uc2VUZXh0KTtcclxuICAgICAgICB9KVxyXG4gICAgICB9XHJcbiAgICB9KVxyXG5cclxuICAgICQoJy5jYXRlZ29yaWVzLXRhYmxlJykub24oJ2NsaWNrJywgJy5idG4tYWRtaW4tZWRpdCcsIChlKSA9PiB7XHJcbiAgICAgIGNvbnN0IHRoaXNDYXRlZ29yeU5hbWUgPSAkKGUudGFyZ2V0KS5wYXJlbnQoKS5wcmV2KCkudGV4dCgpO1xyXG4gICAgICBjb25zb2xlLmxvZyh0aGlzQ2F0ZWdvcnlOYW1lKVxyXG4gICAgICBjdXJyZW50SURDYXRlZ29yeSA9ICQoZS50YXJnZXQpLmRhdGEoJ2lkJyk7XHJcbiAgICAgICQoJyNpbnB1dC1jYXRlZ29yeS1lZGl0JykudmFsKHRoaXNDYXRlZ29yeU5hbWUpO1xyXG4gICAgfSlcclxuXHJcbiAgICAkKCcuY2F0ZWdvcmllcy10YWJsZScpLm9uKCdjbGljaycsICcuYnRuLWFkbWluLWRlbGV0ZScsIChlKSA9PiB7XHJcbiAgICAgIGNvbnN0IGlkID0gJChlLnRhcmdldCkuZGF0YSgnaWQnKTtcclxuICAgICAgJC5hamF4KHtcclxuICAgICAgICB0eXBlOiAnREVMRVRFJyxcclxuICAgICAgICB1cmw6IHVybEFQSSxcclxuICAgICAgICBkYXRhOiB7XHJcbiAgICAgICAgICBfaWQ6IGlkXHJcbiAgICAgICAgfVxyXG4gICAgICB9KS5kb25lKCgpID0+IHtcclxuICAgICAgICBhbGVydCgnRGVsZXRlZCEnKTtcclxuICAgICAgICAkKCcubW9kYWwnKS5oaWRlKCk7XHJcbiAgICAgICAgJCgnYm9keScpLmNzcygnb3ZlcmZsb3cnLCAnYXV0bycpO1xyXG4gICAgICAgIEFETUlOLnJlZnJlc2hDYXRlZ29yeSgpO1xyXG4gICAgICB9KS5mYWlsKGVyciA9PiB7XHJcbiAgICAgICAgYWxlcnQoSlNPTi5wYXJzZShlcnIucmVzcG9uc2VUZXh0KS5tc2cpO1xyXG5cclxuICAgICAgfSlcclxuICAgIH0pXHJcblxyXG4gICAgJCgnI2xldHNFZGl0Q2F0ZWdvcnknKS5jbGljaygoZSkgPT4ge1xyXG4gICAgICBjb25zdCBfdGhpcyA9IGUudGFyZ2V0O1xyXG4gICAgICBjb25zdCBpZCA9IGN1cnJlbnRJRENhdGVnb3J5O1xyXG4gICAgICBjb25zdCBjYXRlZ29yeU5hbWUgPSAkKCcjaW5wdXQtY2F0ZWdvcnktZWRpdCcpLnZhbCgpO1xyXG4gICAgICAkLmFqYXgoe1xyXG4gICAgICAgIHR5cGU6ICdQVVQnLFxyXG4gICAgICAgIHVybDogdXJsQVBJLFxyXG4gICAgICAgIGRhdGE6IHtcclxuICAgICAgICAgIF9pZDogaWQsXHJcbiAgICAgICAgICBuYW1lOiBjYXRlZ29yeU5hbWVcclxuICAgICAgICB9XHJcbiAgICAgIH0pLmRvbmUoKCkgPT4ge1xyXG4gICAgICAgIGFsZXJ0KCdEb25lIScpO1xyXG4gICAgICAgICQoJy5tb2RhbCcpLmhpZGUoKTtcclxuICAgICAgICAkKCdib2R5JykuY3NzKCdvdmVyZmxvdycsICdhdXRvJyk7XHJcbiAgICAgICAgQURNSU4ucmVmcmVzaENhdGVnb3J5KCk7XHJcbiAgICAgIH0pLmZhaWwoZXJyID0+IHtcclxuICAgICAgICBjb25zb2xlLmxvZyhlcnIucmVzcG9uc2VUZXh0KTtcclxuICAgICAgfSlcclxuICAgIH0pXHJcbiAgfSxcclxuICBvcGVuUG9wdXA6IGZ1bmN0aW9uKCkge1xyXG4gICAgJChkb2N1bWVudCkub24oJ2NsaWNrJywgJy5vcGVuUG9wdXAnLCAoZSkgPT4ge1xyXG4gICAgICBjb25zdCBzZWxlY3RvciA9ICQoZS50YXJnZXQpLmRhdGEoJ3BvcHVwJyk7XHJcbiAgICAgICQoc2VsZWN0b3IpLnNob3coKTtcclxuICAgICAgJCgnYm9keScpLmNzcygnb3ZlcmZsb3cnLCAnaGlkZGVuJyk7XHJcbiAgICB9KVxyXG4gIH0sXHJcbiAgY2xvc2VQb3B1cDogZnVuY3Rpb24oKSB7XHJcbiAgICAkKGRvY3VtZW50KS5vbignY2xpY2snLCAnLmNsb3NlLW1vZGFsJywgKCkgPT4ge1xyXG4gICAgICAkKCcubW9kYWwnKS5oaWRlKCk7XHJcbiAgICAgICQoJ2JvZHknKS5jc3MoJ292ZXJmbG93JywgJ2F1dG8nKTtcclxuICAgIH0pO1xyXG4gIH0sXHJcbiAgcmVmcmVzaENhdGVnb3J5OiBmdW5jdGlvbigpIHtcclxuICAgICQoJy5jYXRlZ29yaWVzLXRhYmxlIHRib2R5JykuZW1wdHkoKTtcclxuICAgICQuYWpheCh7XHJcbiAgICAgIHR5cGU6ICdHRVQnLFxyXG4gICAgICB1cmw6ICdodHRwczovL2Z1bml0dXJlLXN0b3JlLmhlcm9rdWFwcC5jb20vdjEvYXBpL2NhdGVnb3JpZXMnXHJcbiAgICB9KS5kb25lKGRhdGEgPT4ge1xyXG4gICAgICBsZXQgY2F0ZWdvcmllc0hUTUwgPSAnJztcclxuICAgICAgZGF0YS5mb3JFYWNoKChjYXRlZ29yeSwgaW5kZXgpID0+IHtcclxuICAgICAgICBjYXRlZ29yaWVzSFRNTCArPSBgXHJcbiAgICAgICAgPHRyPlxyXG4gICAgICAgICAgPHRkPiR7IGluZGV4ICsgMSB9PC90ZD5cclxuICAgICAgICAgIDx0ZD4keyBjYXRlZ29yeS5uYW1lIH08L3RkPlxyXG4gICAgICAgICAgPHRkPlxyXG4gICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJidG4tYWRtaW4gYnRuLWFkbWluLWVkaXQgb3BlblBvcHVwXCIgZGF0YS1wb3B1cD1cIiNtb2RhbEVkaXRDYXRlZ29yeVwiIGRhdGEtaWQ9XCIkeyBjYXRlZ29yeVsnX2lkJ10gfVwiPlPhu61hPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImJ0bi1hZG1pbiBidG4tYWRtaW4tZGVsZXRlXCIgZGF0YS1pZD1cIiR7IGNhdGVnb3J5WydfaWQnXSB9XCI+WMOzYTwvYnV0dG9uPlxyXG4gICAgICAgICAgPC90ZD5cclxuICAgICAgICA8L3RyPmA7XHJcbiAgICAgIH0pXHJcbiAgICAgICQoJy5jYXRlZ29yaWVzLXRhYmxlIHRib2R5JykuYXBwZW5kKGNhdGVnb3JpZXNIVE1MKTtcclxuICAgIH0pLmZhaWwoZXJyID0+IHtcclxuICAgICAgY29uc29sZS5sb2coZXJyLnJlc3BvbnNlVGV4dCk7XHJcbiAgICB9KVxyXG4gIH1cclxufVxyXG5cclxuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcIkRPTUNvbnRlbnRMb2FkZWRcIiwgZnVuY3Rpb24oKSB7XHJcbiAgaWYgKCQoJy5wYWdlLWFkbWluJykubGVuZ3RoKSB7XHJcbiAgICBBRE1JTi5pbml0KCk7XHJcbiAgICBBRE1JTi5yZWZyZXNoQ2F0ZWdvcnkoKTtcclxuICB9XHJcbn0pOyIsIi8qIGpRdWVyeSBlbGV2YXRlWm9vbSAzLjAuOCAtIERlbW8ncyBhbmQgZG9jdW1lbnRhdGlvbjogLSB3d3cuZWxldmF0ZXdlYi5jby51ay9pbWFnZS16b29tIC0gQ29weXJpZ2h0IChjKSAyMDEzIEFuZHJldyBFYWRlcyAtIHd3dy5lbGV2YXRld2ViLmNvLnVrIC0gRHVhbCBsaWNlbnNlZCB1bmRlciB0aGUgTEdQTCBsaWNlbnNlcy4gLSBodHRwOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL01JVF9MaWNlbnNlIC0gaHR0cDovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9HTlVfR2VuZXJhbF9QdWJsaWNfTGljZW5zZSAqL1xyXG5cImZ1bmN0aW9uXCIhPT10eXBlb2YgT2JqZWN0LmNyZWF0ZSYmKE9iamVjdC5jcmVhdGU9ZnVuY3Rpb24oZCl7ZnVuY3Rpb24gaCgpe31oLnByb3RvdHlwZT1kO3JldHVybiBuZXcgaH0pO1xyXG4oZnVuY3Rpb24oZCxoLGwsbSl7dmFyIGs9e2luaXQ6ZnVuY3Rpb24oYixhKXt2YXIgYz10aGlzO2MuZWxlbT1hO2MuJGVsZW09ZChhKTtjLmltYWdlU3JjPWMuJGVsZW0uZGF0YShcInpvb20taW1hZ2VcIik/Yy4kZWxlbS5kYXRhKFwiem9vbS1pbWFnZVwiKTpjLiRlbGVtLmF0dHIoXCJzcmNcIik7Yy5vcHRpb25zPWQuZXh0ZW5kKHt9LGQuZm4uZWxldmF0ZVpvb20ub3B0aW9ucyxiKTtjLm9wdGlvbnMudGludCYmKGMub3B0aW9ucy5sZW5zQ29sb3VyPVwibm9uZVwiLGMub3B0aW9ucy5sZW5zT3BhY2l0eT1cIjFcIik7XCJpbm5lclwiPT1jLm9wdGlvbnMuem9vbVR5cGUmJihjLm9wdGlvbnMuc2hvd0xlbnM9ITEpO2MuJGVsZW0ucGFyZW50KCkucmVtb3ZlQXR0cihcInRpdGxlXCIpLnJlbW92ZUF0dHIoXCJhbHRcIik7Yy56b29tSW1hZ2U9Yy5pbWFnZVNyYztjLnJlZnJlc2goMSk7ZChcIiNcIitjLm9wdGlvbnMuZ2FsbGVyeStcIiBhXCIpLmNsaWNrKGZ1bmN0aW9uKGEpe2Mub3B0aW9ucy5nYWxsZXJ5QWN0aXZlQ2xhc3MmJlxyXG4oZChcIiNcIitjLm9wdGlvbnMuZ2FsbGVyeStcIiBhXCIpLnJlbW92ZUNsYXNzKGMub3B0aW9ucy5nYWxsZXJ5QWN0aXZlQ2xhc3MpLGQodGhpcykuYWRkQ2xhc3MoYy5vcHRpb25zLmdhbGxlcnlBY3RpdmVDbGFzcykpO2EucHJldmVudERlZmF1bHQoKTtkKHRoaXMpLmRhdGEoXCJ6b29tLWltYWdlXCIpP2Muem9vbUltYWdlUHJlPWQodGhpcykuZGF0YShcInpvb20taW1hZ2VcIik6Yy56b29tSW1hZ2VQcmU9ZCh0aGlzKS5kYXRhKFwiaW1hZ2VcIik7Yy5zd2FwdGhlaW1hZ2UoZCh0aGlzKS5kYXRhKFwiaW1hZ2VcIiksYy56b29tSW1hZ2VQcmUpO3JldHVybiExfSl9LHJlZnJlc2g6ZnVuY3Rpb24oYil7dmFyIGE9dGhpcztzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7YS5mZXRjaChhLmltYWdlU3JjKX0sYnx8YS5vcHRpb25zLnJlZnJlc2gpfSxmZXRjaDpmdW5jdGlvbihiKXt2YXIgYT10aGlzLGM9bmV3IEltYWdlO2Mub25sb2FkPWZ1bmN0aW9uKCl7YS5sYXJnZVdpZHRoPWMud2lkdGg7YS5sYXJnZUhlaWdodD1cclxuYy5oZWlnaHQ7YS5zdGFydFpvb20oKTthLmN1cnJlbnRJbWFnZT1hLmltYWdlU3JjO2Eub3B0aW9ucy5vblpvb21lZEltYWdlTG9hZGVkKGEuJGVsZW0pfTtjLnNyYz1ifSxzdGFydFpvb206ZnVuY3Rpb24oKXt2YXIgYj10aGlzO2IubnpXaWR0aD1iLiRlbGVtLndpZHRoKCk7Yi5uekhlaWdodD1iLiRlbGVtLmhlaWdodCgpO2IuaXNXaW5kb3dBY3RpdmU9ITE7Yi5pc0xlbnNBY3RpdmU9ITE7Yi5pc1RpbnRBY3RpdmU9ITE7Yi5vdmVyV2luZG93PSExO2Iub3B0aW9ucy5pbWFnZUNyb3NzZmFkZSYmKGIuem9vbVdyYXA9Yi4kZWxlbS53cmFwKCc8ZGl2IHN0eWxlPVwiaGVpZ2h0OicrYi5uekhlaWdodCtcInB4O3dpZHRoOlwiK2IubnpXaWR0aCsncHg7XCIgY2xhc3M9XCJ6b29tV3JhcHBlclwiIC8+JyksYi4kZWxlbS5jc3MoXCJwb3NpdGlvblwiLFwiYWJzb2x1dGVcIikpO2Iuem9vbUxvY2s9MTtiLnNjcm9sbGluZ0xvY2s9ITE7Yi5jaGFuZ2VCZ1NpemU9ITE7Yi5jdXJyZW50Wm9vbUxldmVsPWIub3B0aW9ucy56b29tTGV2ZWw7XHJcbmIubnpPZmZzZXQ9Yi4kZWxlbS5vZmZzZXQoKTtiLndpZHRoUmF0aW89Yi5sYXJnZVdpZHRoL2IuY3VycmVudFpvb21MZXZlbC9iLm56V2lkdGg7Yi5oZWlnaHRSYXRpbz1iLmxhcmdlSGVpZ2h0L2IuY3VycmVudFpvb21MZXZlbC9iLm56SGVpZ2h0O1wid2luZG93XCI9PWIub3B0aW9ucy56b29tVHlwZSYmKGIuem9vbVdpbmRvd1N0eWxlPVwib3ZlcmZsb3c6IGhpZGRlbjtiYWNrZ3JvdW5kLXBvc2l0aW9uOiAwcHggMHB4O3RleHQtYWxpZ246Y2VudGVyO2JhY2tncm91bmQtY29sb3I6IFwiK1N0cmluZyhiLm9wdGlvbnMuem9vbVdpbmRvd0JnQ29sb3VyKStcIjt3aWR0aDogXCIrU3RyaW5nKGIub3B0aW9ucy56b29tV2luZG93V2lkdGgpK1wicHg7aGVpZ2h0OiBcIitTdHJpbmcoYi5vcHRpb25zLnpvb21XaW5kb3dIZWlnaHQpK1wicHg7ZmxvYXQ6IGxlZnQ7YmFja2dyb3VuZC1zaXplOiBcIitiLmxhcmdlV2lkdGgvYi5jdXJyZW50Wm9vbUxldmVsK1wicHggXCIrYi5sYXJnZUhlaWdodC9iLmN1cnJlbnRab29tTGV2ZWwrXHJcblwicHg7ZGlzcGxheTogbm9uZTt6LWluZGV4OjEwMDtib3JkZXI6IFwiK1N0cmluZyhiLm9wdGlvbnMuYm9yZGVyU2l6ZSkrXCJweCBzb2xpZCBcIitiLm9wdGlvbnMuYm9yZGVyQ29sb3VyK1wiO2JhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7cG9zaXRpb246IGFic29sdXRlO1wiKTtpZihcImlubmVyXCI9PWIub3B0aW9ucy56b29tVHlwZSl7dmFyIGE9Yi4kZWxlbS5jc3MoXCJib3JkZXItbGVmdC13aWR0aFwiKTtiLnpvb21XaW5kb3dTdHlsZT1cIm92ZXJmbG93OiBoaWRkZW47bWFyZ2luLWxlZnQ6IFwiK1N0cmluZyhhKStcIjttYXJnaW4tdG9wOiBcIitTdHJpbmcoYSkrXCI7YmFja2dyb3VuZC1wb3NpdGlvbjogMHB4IDBweDt3aWR0aDogXCIrU3RyaW5nKGIubnpXaWR0aCkrXCJweDtoZWlnaHQ6IFwiK1N0cmluZyhiLm56SGVpZ2h0KStcInB4O2Zsb2F0OiBsZWZ0O2Rpc3BsYXk6IG5vbmU7Y3Vyc29yOlwiK2Iub3B0aW9ucy5jdXJzb3IrXCI7cHggc29saWQgXCIrYi5vcHRpb25zLmJvcmRlckNvbG91citcIjtiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O3Bvc2l0aW9uOiBhYnNvbHV0ZTtcIn1cIndpbmRvd1wiPT1cclxuYi5vcHRpb25zLnpvb21UeXBlJiYobGVuc0hlaWdodD1iLm56SGVpZ2h0PGIub3B0aW9ucy56b29tV2luZG93V2lkdGgvYi53aWR0aFJhdGlvP2IubnpIZWlnaHQ6U3RyaW5nKGIub3B0aW9ucy56b29tV2luZG93SGVpZ2h0L2IuaGVpZ2h0UmF0aW8pLGxlbnNXaWR0aD1iLmxhcmdlV2lkdGg8Yi5vcHRpb25zLnpvb21XaW5kb3dXaWR0aD9iLm56V2lkdGg6Yi5vcHRpb25zLnpvb21XaW5kb3dXaWR0aC9iLndpZHRoUmF0aW8sYi5sZW5zU3R5bGU9XCJiYWNrZ3JvdW5kLXBvc2l0aW9uOiAwcHggMHB4O3dpZHRoOiBcIitTdHJpbmcoYi5vcHRpb25zLnpvb21XaW5kb3dXaWR0aC9iLndpZHRoUmF0aW8pK1wicHg7aGVpZ2h0OiBcIitTdHJpbmcoYi5vcHRpb25zLnpvb21XaW5kb3dIZWlnaHQvYi5oZWlnaHRSYXRpbykrXCJweDtmbG9hdDogcmlnaHQ7ZGlzcGxheTogbm9uZTtvdmVyZmxvdzogaGlkZGVuO3otaW5kZXg6IDk5OTstd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWigwKTtvcGFjaXR5OlwiK1xyXG5iLm9wdGlvbnMubGVuc09wYWNpdHkrXCI7ZmlsdGVyOiBhbHBoYShvcGFjaXR5ID0gXCIrMTAwKmIub3B0aW9ucy5sZW5zT3BhY2l0eStcIik7IHpvb206MTt3aWR0aDpcIitsZW5zV2lkdGgrXCJweDtoZWlnaHQ6XCIrbGVuc0hlaWdodCtcInB4O2JhY2tncm91bmQtY29sb3I6XCIrYi5vcHRpb25zLmxlbnNDb2xvdXIrXCI7Y3Vyc29yOlwiK2Iub3B0aW9ucy5jdXJzb3IrXCI7Ym9yZGVyOiBcIitiLm9wdGlvbnMubGVuc0JvcmRlclNpemUrXCJweCBzb2xpZCBcIitiLm9wdGlvbnMubGVuc0JvcmRlckNvbG91citcIjtiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O3Bvc2l0aW9uOiBhYnNvbHV0ZTtcIik7Yi50aW50U3R5bGU9XCJkaXNwbGF5OiBibG9jaztwb3NpdGlvbjogYWJzb2x1dGU7YmFja2dyb3VuZC1jb2xvcjogXCIrYi5vcHRpb25zLnRpbnRDb2xvdXIrXCI7ZmlsdGVyOmFscGhhKG9wYWNpdHk9MCk7b3BhY2l0eTogMDt3aWR0aDogXCIrYi5ueldpZHRoK1wicHg7aGVpZ2h0OiBcIitiLm56SGVpZ2h0K1wicHg7XCI7XHJcbmIubGVuc1JvdW5kPVwiXCI7XCJsZW5zXCI9PWIub3B0aW9ucy56b29tVHlwZSYmKGIubGVuc1N0eWxlPVwiYmFja2dyb3VuZC1wb3NpdGlvbjogMHB4IDBweDtmbG9hdDogbGVmdDtkaXNwbGF5OiBub25lO2JvcmRlcjogXCIrU3RyaW5nKGIub3B0aW9ucy5ib3JkZXJTaXplKStcInB4IHNvbGlkIFwiK2Iub3B0aW9ucy5ib3JkZXJDb2xvdXIrXCI7d2lkdGg6XCIrU3RyaW5nKGIub3B0aW9ucy5sZW5zU2l6ZSkrXCJweDtoZWlnaHQ6XCIrU3RyaW5nKGIub3B0aW9ucy5sZW5zU2l6ZSkrXCJweDtiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O3Bvc2l0aW9uOiBhYnNvbHV0ZTtcIik7XCJyb3VuZFwiPT1iLm9wdGlvbnMubGVuc1NoYXBlJiYoYi5sZW5zUm91bmQ9XCJib3JkZXItdG9wLWxlZnQtcmFkaXVzOiBcIitTdHJpbmcoYi5vcHRpb25zLmxlbnNTaXplLzIrYi5vcHRpb25zLmJvcmRlclNpemUpK1wicHg7Ym9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IFwiK1N0cmluZyhiLm9wdGlvbnMubGVuc1NpemUvMitiLm9wdGlvbnMuYm9yZGVyU2l6ZSkrXHJcblwicHg7Ym9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogXCIrU3RyaW5nKGIub3B0aW9ucy5sZW5zU2l6ZS8yK2Iub3B0aW9ucy5ib3JkZXJTaXplKStcInB4O2JvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiBcIitTdHJpbmcoYi5vcHRpb25zLmxlbnNTaXplLzIrYi5vcHRpb25zLmJvcmRlclNpemUpK1wicHg7XCIpO2Iuem9vbUNvbnRhaW5lcj1kKCc8ZGl2IGNsYXNzPVwiem9vbUNvbnRhaW5lclwiIHN0eWxlPVwiLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVooMCk7cG9zaXRpb246YWJzb2x1dGU7bGVmdDonK2IubnpPZmZzZXQubGVmdCtcInB4O3RvcDpcIitiLm56T2Zmc2V0LnRvcCtcInB4O2hlaWdodDpcIitiLm56SGVpZ2h0K1wicHg7d2lkdGg6XCIrYi5ueldpZHRoKydweDtcIj48L2Rpdj4nKTtkKFwiYm9keVwiKS5hcHBlbmQoYi56b29tQ29udGFpbmVyKTtiLm9wdGlvbnMuY29udGFpbkxlbnNab29tJiZcImxlbnNcIj09Yi5vcHRpb25zLnpvb21UeXBlJiZiLnpvb21Db250YWluZXIuY3NzKFwib3ZlcmZsb3dcIixcclxuXCJoaWRkZW5cIik7XCJpbm5lclwiIT1iLm9wdGlvbnMuem9vbVR5cGUmJihiLnpvb21MZW5zPWQoXCI8ZGl2IGNsYXNzPSd6b29tTGVucycgc3R5bGU9J1wiK2IubGVuc1N0eWxlK2IubGVuc1JvdW5kK1wiJz4mbmJzcDs8L2Rpdj5cIikuYXBwZW5kVG8oYi56b29tQ29udGFpbmVyKS5jbGljayhmdW5jdGlvbigpe2IuJGVsZW0udHJpZ2dlcihcImNsaWNrXCIpfSksYi5vcHRpb25zLnRpbnQmJihiLnRpbnRDb250YWluZXI9ZChcIjxkaXYvPlwiKS5hZGRDbGFzcyhcInRpbnRDb250YWluZXJcIiksYi56b29tVGludD1kKFwiPGRpdiBjbGFzcz0nem9vbVRpbnQnIHN0eWxlPSdcIitiLnRpbnRTdHlsZStcIic+PC9kaXY+XCIpLGIuem9vbUxlbnMud3JhcChiLnRpbnRDb250YWluZXIpLGIuem9vbVRpbnRjc3M9Yi56b29tTGVucy5hZnRlcihiLnpvb21UaW50KSxiLnpvb21UaW50SW1hZ2U9ZCgnPGltZyBzdHlsZT1cInBvc2l0aW9uOiBhYnNvbHV0ZTsgbGVmdDogMHB4OyB0b3A6IDBweDsgbWF4LXdpZHRoOiBub25lOyB3aWR0aDogJytcclxuYi5ueldpZHRoK1wicHg7IGhlaWdodDogXCIrYi5uekhlaWdodCsncHg7XCIgc3JjPVwiJytiLmltYWdlU3JjKydcIj4nKS5hcHBlbmRUbyhiLnpvb21MZW5zKS5jbGljayhmdW5jdGlvbigpe2IuJGVsZW0udHJpZ2dlcihcImNsaWNrXCIpfSkpKTtpc05hTihiLm9wdGlvbnMuem9vbVdpbmRvd1Bvc2l0aW9uKT9iLnpvb21XaW5kb3c9ZChcIjxkaXYgc3R5bGU9J3otaW5kZXg6OTk5O2xlZnQ6XCIrYi53aW5kb3dPZmZzZXRMZWZ0K1wicHg7dG9wOlwiK2Iud2luZG93T2Zmc2V0VG9wK1wicHg7XCIrYi56b29tV2luZG93U3R5bGUrXCInIGNsYXNzPSd6b29tV2luZG93Jz4mbmJzcDs8L2Rpdj5cIikuYXBwZW5kVG8oXCJib2R5XCIpLmNsaWNrKGZ1bmN0aW9uKCl7Yi4kZWxlbS50cmlnZ2VyKFwiY2xpY2tcIil9KTpiLnpvb21XaW5kb3c9ZChcIjxkaXYgc3R5bGU9J3otaW5kZXg6OTk5O2xlZnQ6XCIrYi53aW5kb3dPZmZzZXRMZWZ0K1wicHg7dG9wOlwiK2Iud2luZG93T2Zmc2V0VG9wK1wicHg7XCIrYi56b29tV2luZG93U3R5bGUrXHJcblwiJyBjbGFzcz0nem9vbVdpbmRvdyc+Jm5ic3A7PC9kaXY+XCIpLmFwcGVuZFRvKGIuem9vbUNvbnRhaW5lcikuY2xpY2soZnVuY3Rpb24oKXtiLiRlbGVtLnRyaWdnZXIoXCJjbGlja1wiKX0pO2Iuem9vbVdpbmRvd0NvbnRhaW5lcj1kKFwiPGRpdi8+XCIpLmFkZENsYXNzKFwiem9vbVdpbmRvd0NvbnRhaW5lclwiKS5jc3MoXCJ3aWR0aFwiLGIub3B0aW9ucy56b29tV2luZG93V2lkdGgpO2Iuem9vbVdpbmRvdy53cmFwKGIuem9vbVdpbmRvd0NvbnRhaW5lcik7XCJsZW5zXCI9PWIub3B0aW9ucy56b29tVHlwZSYmYi56b29tTGVucy5jc3Moe2JhY2tncm91bmRJbWFnZTpcInVybCgnXCIrYi5pbWFnZVNyYytcIicpXCJ9KTtcIndpbmRvd1wiPT1iLm9wdGlvbnMuem9vbVR5cGUmJmIuem9vbVdpbmRvdy5jc3Moe2JhY2tncm91bmRJbWFnZTpcInVybCgnXCIrYi5pbWFnZVNyYytcIicpXCJ9KTtcImlubmVyXCI9PWIub3B0aW9ucy56b29tVHlwZSYmYi56b29tV2luZG93LmNzcyh7YmFja2dyb3VuZEltYWdlOlwidXJsKCdcIitiLmltYWdlU3JjK1xyXG5cIicpXCJ9KTtiLiRlbGVtLmJpbmQoXCJ0b3VjaG1vdmVcIixmdW5jdGlvbihhKXthLnByZXZlbnREZWZhdWx0KCk7Yi5zZXRQb3NpdGlvbihhLm9yaWdpbmFsRXZlbnQudG91Y2hlc1swXXx8YS5vcmlnaW5hbEV2ZW50LmNoYW5nZWRUb3VjaGVzWzBdKX0pO2Iuem9vbUNvbnRhaW5lci5iaW5kKFwidG91Y2htb3ZlXCIsZnVuY3Rpb24oYSl7XCJpbm5lclwiPT1iLm9wdGlvbnMuem9vbVR5cGUmJmIuc2hvd0hpZGVXaW5kb3coXCJzaG93XCIpO2EucHJldmVudERlZmF1bHQoKTtiLnNldFBvc2l0aW9uKGEub3JpZ2luYWxFdmVudC50b3VjaGVzWzBdfHxhLm9yaWdpbmFsRXZlbnQuY2hhbmdlZFRvdWNoZXNbMF0pfSk7Yi56b29tQ29udGFpbmVyLmJpbmQoXCJ0b3VjaGVuZFwiLGZ1bmN0aW9uKGEpe2Iuc2hvd0hpZGVXaW5kb3coXCJoaWRlXCIpO2Iub3B0aW9ucy5zaG93TGVucyYmYi5zaG93SGlkZUxlbnMoXCJoaWRlXCIpO2Iub3B0aW9ucy50aW50JiZcImlubmVyXCIhPWIub3B0aW9ucy56b29tVHlwZSYmYi5zaG93SGlkZVRpbnQoXCJoaWRlXCIpfSk7XHJcbmIuJGVsZW0uYmluZChcInRvdWNoZW5kXCIsZnVuY3Rpb24oYSl7Yi5zaG93SGlkZVdpbmRvdyhcImhpZGVcIik7Yi5vcHRpb25zLnNob3dMZW5zJiZiLnNob3dIaWRlTGVucyhcImhpZGVcIik7Yi5vcHRpb25zLnRpbnQmJlwiaW5uZXJcIiE9Yi5vcHRpb25zLnpvb21UeXBlJiZiLnNob3dIaWRlVGludChcImhpZGVcIil9KTtiLm9wdGlvbnMuc2hvd0xlbnMmJihiLnpvb21MZW5zLmJpbmQoXCJ0b3VjaG1vdmVcIixmdW5jdGlvbihhKXthLnByZXZlbnREZWZhdWx0KCk7Yi5zZXRQb3NpdGlvbihhLm9yaWdpbmFsRXZlbnQudG91Y2hlc1swXXx8YS5vcmlnaW5hbEV2ZW50LmNoYW5nZWRUb3VjaGVzWzBdKX0pLGIuem9vbUxlbnMuYmluZChcInRvdWNoZW5kXCIsZnVuY3Rpb24oYSl7Yi5zaG93SGlkZVdpbmRvdyhcImhpZGVcIik7Yi5vcHRpb25zLnNob3dMZW5zJiZiLnNob3dIaWRlTGVucyhcImhpZGVcIik7Yi5vcHRpb25zLnRpbnQmJlwiaW5uZXJcIiE9Yi5vcHRpb25zLnpvb21UeXBlJiZiLnNob3dIaWRlVGludChcImhpZGVcIil9KSk7XHJcbmIuJGVsZW0uYmluZChcIm1vdXNlbW92ZVwiLGZ1bmN0aW9uKGEpeyExPT1iLm92ZXJXaW5kb3cmJmIuc2V0RWxlbWVudHMoXCJzaG93XCIpO2lmKGIubGFzdFghPT1hLmNsaWVudFh8fGIubGFzdFkhPT1hLmNsaWVudFkpYi5zZXRQb3NpdGlvbihhKSxiLmN1cnJlbnRMb2M9YTtiLmxhc3RYPWEuY2xpZW50WDtiLmxhc3RZPWEuY2xpZW50WX0pO2Iuem9vbUNvbnRhaW5lci5iaW5kKFwibW91c2Vtb3ZlXCIsZnVuY3Rpb24oYSl7ITE9PWIub3ZlcldpbmRvdyYmYi5zZXRFbGVtZW50cyhcInNob3dcIik7aWYoYi5sYXN0WCE9PWEuY2xpZW50WHx8Yi5sYXN0WSE9PWEuY2xpZW50WSliLnNldFBvc2l0aW9uKGEpLGIuY3VycmVudExvYz1hO2IubGFzdFg9YS5jbGllbnRYO2IubGFzdFk9YS5jbGllbnRZfSk7XCJpbm5lclwiIT1iLm9wdGlvbnMuem9vbVR5cGUmJmIuem9vbUxlbnMuYmluZChcIm1vdXNlbW92ZVwiLGZ1bmN0aW9uKGEpe2lmKGIubGFzdFghPT1hLmNsaWVudFh8fGIubGFzdFkhPT1hLmNsaWVudFkpYi5zZXRQb3NpdGlvbihhKSxcclxuYi5jdXJyZW50TG9jPWE7Yi5sYXN0WD1hLmNsaWVudFg7Yi5sYXN0WT1hLmNsaWVudFl9KTtiLm9wdGlvbnMudGludCYmXCJpbm5lclwiIT1iLm9wdGlvbnMuem9vbVR5cGUmJmIuem9vbVRpbnQuYmluZChcIm1vdXNlbW92ZVwiLGZ1bmN0aW9uKGEpe2lmKGIubGFzdFghPT1hLmNsaWVudFh8fGIubGFzdFkhPT1hLmNsaWVudFkpYi5zZXRQb3NpdGlvbihhKSxiLmN1cnJlbnRMb2M9YTtiLmxhc3RYPWEuY2xpZW50WDtiLmxhc3RZPWEuY2xpZW50WX0pO1wiaW5uZXJcIj09Yi5vcHRpb25zLnpvb21UeXBlJiZiLnpvb21XaW5kb3cuYmluZChcIm1vdXNlbW92ZVwiLGZ1bmN0aW9uKGEpe2lmKGIubGFzdFghPT1hLmNsaWVudFh8fGIubGFzdFkhPT1hLmNsaWVudFkpYi5zZXRQb3NpdGlvbihhKSxiLmN1cnJlbnRMb2M9YTtiLmxhc3RYPWEuY2xpZW50WDtiLmxhc3RZPWEuY2xpZW50WX0pO2Iuem9vbUNvbnRhaW5lci5hZGQoYi4kZWxlbSkubW91c2VlbnRlcihmdW5jdGlvbigpeyExPT1iLm92ZXJXaW5kb3cmJlxyXG5iLnNldEVsZW1lbnRzKFwic2hvd1wiKX0pLm1vdXNlbGVhdmUoZnVuY3Rpb24oKXtiLnNjcm9sbExvY2t8fGIuc2V0RWxlbWVudHMoXCJoaWRlXCIpfSk7XCJpbm5lclwiIT1iLm9wdGlvbnMuem9vbVR5cGUmJmIuem9vbVdpbmRvdy5tb3VzZWVudGVyKGZ1bmN0aW9uKCl7Yi5vdmVyV2luZG93PSEwO2Iuc2V0RWxlbWVudHMoXCJoaWRlXCIpfSkubW91c2VsZWF2ZShmdW5jdGlvbigpe2Iub3ZlcldpbmRvdz0hMX0pO2IubWluWm9vbUxldmVsPWIub3B0aW9ucy5taW5ab29tTGV2ZWw/Yi5vcHRpb25zLm1pblpvb21MZXZlbDoyKmIub3B0aW9ucy5zY3JvbGxab29tSW5jcmVtZW50O2Iub3B0aW9ucy5zY3JvbGxab29tJiZiLnpvb21Db250YWluZXIuYWRkKGIuJGVsZW0pLmJpbmQoXCJtb3VzZXdoZWVsIERPTU1vdXNlU2Nyb2xsIE1vek1vdXNlUGl4ZWxTY3JvbGxcIixmdW5jdGlvbihhKXtiLnNjcm9sbExvY2s9ITA7Y2xlYXJUaW1lb3V0KGQuZGF0YSh0aGlzLFwidGltZXJcIikpO2QuZGF0YSh0aGlzLFwidGltZXJcIixcclxuc2V0VGltZW91dChmdW5jdGlvbigpe2Iuc2Nyb2xsTG9jaz0hMX0sMjUwKSk7dmFyIGU9YS5vcmlnaW5hbEV2ZW50LndoZWVsRGVsdGF8fC0xKmEub3JpZ2luYWxFdmVudC5kZXRhaWw7YS5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKTthLnN0b3BQcm9wYWdhdGlvbigpO2EucHJldmVudERlZmF1bHQoKTswPGUvMTIwP2IuY3VycmVudFpvb21MZXZlbD49Yi5taW5ab29tTGV2ZWwmJmIuY2hhbmdlWm9vbUxldmVsKGIuY3VycmVudFpvb21MZXZlbC1iLm9wdGlvbnMuc2Nyb2xsWm9vbUluY3JlbWVudCk6Yi5vcHRpb25zLm1heFpvb21MZXZlbD9iLmN1cnJlbnRab29tTGV2ZWw8PWIub3B0aW9ucy5tYXhab29tTGV2ZWwmJmIuY2hhbmdlWm9vbUxldmVsKHBhcnNlRmxvYXQoYi5jdXJyZW50Wm9vbUxldmVsKStiLm9wdGlvbnMuc2Nyb2xsWm9vbUluY3JlbWVudCk6Yi5jaGFuZ2Vab29tTGV2ZWwocGFyc2VGbG9hdChiLmN1cnJlbnRab29tTGV2ZWwpK2Iub3B0aW9ucy5zY3JvbGxab29tSW5jcmVtZW50KTtcclxucmV0dXJuITF9KX0sc2V0RWxlbWVudHM6ZnVuY3Rpb24oYil7aWYoIXRoaXMub3B0aW9ucy56b29tRW5hYmxlZClyZXR1cm4hMTtcInNob3dcIj09YiYmdGhpcy5pc1dpbmRvd1NldCYmKFwiaW5uZXJcIj09dGhpcy5vcHRpb25zLnpvb21UeXBlJiZ0aGlzLnNob3dIaWRlV2luZG93KFwic2hvd1wiKSxcIndpbmRvd1wiPT10aGlzLm9wdGlvbnMuem9vbVR5cGUmJnRoaXMuc2hvd0hpZGVXaW5kb3coXCJzaG93XCIpLHRoaXMub3B0aW9ucy5zaG93TGVucyYmdGhpcy5zaG93SGlkZUxlbnMoXCJzaG93XCIpLHRoaXMub3B0aW9ucy50aW50JiZcImlubmVyXCIhPXRoaXMub3B0aW9ucy56b29tVHlwZSYmdGhpcy5zaG93SGlkZVRpbnQoXCJzaG93XCIpKTtcImhpZGVcIj09YiYmKFwid2luZG93XCI9PXRoaXMub3B0aW9ucy56b29tVHlwZSYmdGhpcy5zaG93SGlkZVdpbmRvdyhcImhpZGVcIiksdGhpcy5vcHRpb25zLnRpbnR8fHRoaXMuc2hvd0hpZGVXaW5kb3coXCJoaWRlXCIpLHRoaXMub3B0aW9ucy5zaG93TGVucyYmdGhpcy5zaG93SGlkZUxlbnMoXCJoaWRlXCIpLFxyXG50aGlzLm9wdGlvbnMudGludCYmdGhpcy5zaG93SGlkZVRpbnQoXCJoaWRlXCIpKX0sc2V0UG9zaXRpb246ZnVuY3Rpb24oYil7aWYoIXRoaXMub3B0aW9ucy56b29tRW5hYmxlZClyZXR1cm4hMTt0aGlzLm56SGVpZ2h0PXRoaXMuJGVsZW0uaGVpZ2h0KCk7dGhpcy5ueldpZHRoPXRoaXMuJGVsZW0ud2lkdGgoKTt0aGlzLm56T2Zmc2V0PXRoaXMuJGVsZW0ub2Zmc2V0KCk7dGhpcy5vcHRpb25zLnRpbnQmJlwiaW5uZXJcIiE9dGhpcy5vcHRpb25zLnpvb21UeXBlJiYodGhpcy56b29tVGludC5jc3Moe3RvcDowfSksdGhpcy56b29tVGludC5jc3Moe2xlZnQ6MH0pKTt0aGlzLm9wdGlvbnMucmVzcG9uc2l2ZSYmIXRoaXMub3B0aW9ucy5zY3JvbGxab29tJiZ0aGlzLm9wdGlvbnMuc2hvd0xlbnMmJihsZW5zSGVpZ2h0PXRoaXMubnpIZWlnaHQ8dGhpcy5vcHRpb25zLnpvb21XaW5kb3dXaWR0aC90aGlzLndpZHRoUmF0aW8/dGhpcy5uekhlaWdodDpTdHJpbmcodGhpcy5vcHRpb25zLnpvb21XaW5kb3dIZWlnaHQvXHJcbnRoaXMuaGVpZ2h0UmF0aW8pLGxlbnNXaWR0aD10aGlzLmxhcmdlV2lkdGg8dGhpcy5vcHRpb25zLnpvb21XaW5kb3dXaWR0aD90aGlzLm56V2lkdGg6dGhpcy5vcHRpb25zLnpvb21XaW5kb3dXaWR0aC90aGlzLndpZHRoUmF0aW8sdGhpcy53aWR0aFJhdGlvPXRoaXMubGFyZ2VXaWR0aC90aGlzLm56V2lkdGgsdGhpcy5oZWlnaHRSYXRpbz10aGlzLmxhcmdlSGVpZ2h0L3RoaXMubnpIZWlnaHQsXCJsZW5zXCIhPXRoaXMub3B0aW9ucy56b29tVHlwZSYmKGxlbnNIZWlnaHQ9dGhpcy5uekhlaWdodDx0aGlzLm9wdGlvbnMuem9vbVdpbmRvd1dpZHRoL3RoaXMud2lkdGhSYXRpbz90aGlzLm56SGVpZ2h0OlN0cmluZyh0aGlzLm9wdGlvbnMuem9vbVdpbmRvd0hlaWdodC90aGlzLmhlaWdodFJhdGlvKSxsZW5zV2lkdGg9dGhpcy5vcHRpb25zLnpvb21XaW5kb3dXaWR0aDx0aGlzLm9wdGlvbnMuem9vbVdpbmRvd1dpZHRoP3RoaXMubnpXaWR0aDp0aGlzLm9wdGlvbnMuem9vbVdpbmRvd1dpZHRoL1xyXG50aGlzLndpZHRoUmF0aW8sdGhpcy56b29tTGVucy5jc3MoXCJ3aWR0aFwiLGxlbnNXaWR0aCksdGhpcy56b29tTGVucy5jc3MoXCJoZWlnaHRcIixsZW5zSGVpZ2h0KSx0aGlzLm9wdGlvbnMudGludCYmKHRoaXMuem9vbVRpbnRJbWFnZS5jc3MoXCJ3aWR0aFwiLHRoaXMubnpXaWR0aCksdGhpcy56b29tVGludEltYWdlLmNzcyhcImhlaWdodFwiLHRoaXMubnpIZWlnaHQpKSksXCJsZW5zXCI9PXRoaXMub3B0aW9ucy56b29tVHlwZSYmdGhpcy56b29tTGVucy5jc3Moe3dpZHRoOlN0cmluZyh0aGlzLm9wdGlvbnMubGVuc1NpemUpK1wicHhcIixoZWlnaHQ6U3RyaW5nKHRoaXMub3B0aW9ucy5sZW5zU2l6ZSkrXCJweFwifSkpO3RoaXMuem9vbUNvbnRhaW5lci5jc3Moe3RvcDp0aGlzLm56T2Zmc2V0LnRvcH0pO3RoaXMuem9vbUNvbnRhaW5lci5jc3Moe2xlZnQ6dGhpcy5uek9mZnNldC5sZWZ0fSk7dGhpcy5tb3VzZUxlZnQ9cGFyc2VJbnQoYi5wYWdlWC10aGlzLm56T2Zmc2V0LmxlZnQpO3RoaXMubW91c2VUb3A9XHJcbnBhcnNlSW50KGIucGFnZVktdGhpcy5uek9mZnNldC50b3ApO1wid2luZG93XCI9PXRoaXMub3B0aW9ucy56b29tVHlwZSYmKHRoaXMuRXRvcHBvcz10aGlzLm1vdXNlVG9wPHRoaXMuem9vbUxlbnMuaGVpZ2h0KCkvMix0aGlzLkVib3Bwb3M9dGhpcy5tb3VzZVRvcD50aGlzLm56SGVpZ2h0LXRoaXMuem9vbUxlbnMuaGVpZ2h0KCkvMi0yKnRoaXMub3B0aW9ucy5sZW5zQm9yZGVyU2l6ZSx0aGlzLkVsb3Bwb3M9dGhpcy5tb3VzZUxlZnQ8MCt0aGlzLnpvb21MZW5zLndpZHRoKCkvMix0aGlzLkVyb3Bwb3M9dGhpcy5tb3VzZUxlZnQ+dGhpcy5ueldpZHRoLXRoaXMuem9vbUxlbnMud2lkdGgoKS8yLTIqdGhpcy5vcHRpb25zLmxlbnNCb3JkZXJTaXplKTtcImlubmVyXCI9PXRoaXMub3B0aW9ucy56b29tVHlwZSYmKHRoaXMuRXRvcHBvcz10aGlzLm1vdXNlVG9wPHRoaXMubnpIZWlnaHQvMi90aGlzLmhlaWdodFJhdGlvLHRoaXMuRWJvcHBvcz10aGlzLm1vdXNlVG9wPnRoaXMubnpIZWlnaHQtXHJcbnRoaXMubnpIZWlnaHQvMi90aGlzLmhlaWdodFJhdGlvLHRoaXMuRWxvcHBvcz10aGlzLm1vdXNlTGVmdDwwK3RoaXMubnpXaWR0aC8yL3RoaXMud2lkdGhSYXRpbyx0aGlzLkVyb3Bwb3M9dGhpcy5tb3VzZUxlZnQ+dGhpcy5ueldpZHRoLXRoaXMubnpXaWR0aC8yL3RoaXMud2lkdGhSYXRpby0yKnRoaXMub3B0aW9ucy5sZW5zQm9yZGVyU2l6ZSk7MD49dGhpcy5tb3VzZUxlZnR8fDA+dGhpcy5tb3VzZVRvcHx8dGhpcy5tb3VzZUxlZnQ+dGhpcy5ueldpZHRofHx0aGlzLm1vdXNlVG9wPnRoaXMubnpIZWlnaHQ/dGhpcy5zZXRFbGVtZW50cyhcImhpZGVcIik6KHRoaXMub3B0aW9ucy5zaG93TGVucyYmKHRoaXMubGVuc0xlZnRQb3M9U3RyaW5nKHRoaXMubW91c2VMZWZ0LXRoaXMuem9vbUxlbnMud2lkdGgoKS8yKSx0aGlzLmxlbnNUb3BQb3M9U3RyaW5nKHRoaXMubW91c2VUb3AtdGhpcy56b29tTGVucy5oZWlnaHQoKS8yKSksdGhpcy5FdG9wcG9zJiYodGhpcy5sZW5zVG9wUG9zPTApLFxyXG50aGlzLkVsb3Bwb3MmJih0aGlzLnRpbnRwb3M9dGhpcy5sZW5zTGVmdFBvcz10aGlzLndpbmRvd0xlZnRQb3M9MCksXCJ3aW5kb3dcIj09dGhpcy5vcHRpb25zLnpvb21UeXBlJiYodGhpcy5FYm9wcG9zJiYodGhpcy5sZW5zVG9wUG9zPU1hdGgubWF4KHRoaXMubnpIZWlnaHQtdGhpcy56b29tTGVucy5oZWlnaHQoKS0yKnRoaXMub3B0aW9ucy5sZW5zQm9yZGVyU2l6ZSwwKSksdGhpcy5Fcm9wcG9zJiYodGhpcy5sZW5zTGVmdFBvcz10aGlzLm56V2lkdGgtdGhpcy56b29tTGVucy53aWR0aCgpLTIqdGhpcy5vcHRpb25zLmxlbnNCb3JkZXJTaXplKSksXCJpbm5lclwiPT10aGlzLm9wdGlvbnMuem9vbVR5cGUmJih0aGlzLkVib3Bwb3MmJih0aGlzLmxlbnNUb3BQb3M9TWF0aC5tYXgodGhpcy5uekhlaWdodC0yKnRoaXMub3B0aW9ucy5sZW5zQm9yZGVyU2l6ZSwwKSksdGhpcy5Fcm9wcG9zJiYodGhpcy5sZW5zTGVmdFBvcz10aGlzLm56V2lkdGgtdGhpcy5ueldpZHRoLTIqdGhpcy5vcHRpb25zLmxlbnNCb3JkZXJTaXplKSksXHJcblwibGVuc1wiPT10aGlzLm9wdGlvbnMuem9vbVR5cGUmJih0aGlzLndpbmRvd0xlZnRQb3M9U3RyaW5nKC0xKigoYi5wYWdlWC10aGlzLm56T2Zmc2V0LmxlZnQpKnRoaXMud2lkdGhSYXRpby10aGlzLnpvb21MZW5zLndpZHRoKCkvMikpLHRoaXMud2luZG93VG9wUG9zPVN0cmluZygtMSooKGIucGFnZVktdGhpcy5uek9mZnNldC50b3ApKnRoaXMuaGVpZ2h0UmF0aW8tdGhpcy56b29tTGVucy5oZWlnaHQoKS8yKSksdGhpcy56b29tTGVucy5jc3Moe2JhY2tncm91bmRQb3NpdGlvbjp0aGlzLndpbmRvd0xlZnRQb3MrXCJweCBcIit0aGlzLndpbmRvd1RvcFBvcytcInB4XCJ9KSx0aGlzLmNoYW5nZUJnU2l6ZSYmKHRoaXMubnpIZWlnaHQ+dGhpcy5ueldpZHRoPyhcImxlbnNcIj09dGhpcy5vcHRpb25zLnpvb21UeXBlJiZ0aGlzLnpvb21MZW5zLmNzcyh7XCJiYWNrZ3JvdW5kLXNpemVcIjp0aGlzLmxhcmdlV2lkdGgvdGhpcy5uZXd2YWx1ZWhlaWdodCtcInB4IFwiK3RoaXMubGFyZ2VIZWlnaHQvdGhpcy5uZXd2YWx1ZWhlaWdodCtcclxuXCJweFwifSksdGhpcy56b29tV2luZG93LmNzcyh7XCJiYWNrZ3JvdW5kLXNpemVcIjp0aGlzLmxhcmdlV2lkdGgvdGhpcy5uZXd2YWx1ZWhlaWdodCtcInB4IFwiK3RoaXMubGFyZ2VIZWlnaHQvdGhpcy5uZXd2YWx1ZWhlaWdodCtcInB4XCJ9KSk6KFwibGVuc1wiPT10aGlzLm9wdGlvbnMuem9vbVR5cGUmJnRoaXMuem9vbUxlbnMuY3NzKHtcImJhY2tncm91bmQtc2l6ZVwiOnRoaXMubGFyZ2VXaWR0aC90aGlzLm5ld3ZhbHVld2lkdGgrXCJweCBcIit0aGlzLmxhcmdlSGVpZ2h0L3RoaXMubmV3dmFsdWV3aWR0aCtcInB4XCJ9KSx0aGlzLnpvb21XaW5kb3cuY3NzKHtcImJhY2tncm91bmQtc2l6ZVwiOnRoaXMubGFyZ2VXaWR0aC90aGlzLm5ld3ZhbHVld2lkdGgrXCJweCBcIit0aGlzLmxhcmdlSGVpZ2h0L3RoaXMubmV3dmFsdWV3aWR0aCtcInB4XCJ9KSksdGhpcy5jaGFuZ2VCZ1NpemU9ITEpLHRoaXMuc2V0V2luZG93UG9zdGl0aW9uKGIpKSx0aGlzLm9wdGlvbnMudGludCYmXCJpbm5lclwiIT10aGlzLm9wdGlvbnMuem9vbVR5cGUmJlxyXG50aGlzLnNldFRpbnRQb3NpdGlvbihiKSxcIndpbmRvd1wiPT10aGlzLm9wdGlvbnMuem9vbVR5cGUmJnRoaXMuc2V0V2luZG93UG9zdGl0aW9uKGIpLFwiaW5uZXJcIj09dGhpcy5vcHRpb25zLnpvb21UeXBlJiZ0aGlzLnNldFdpbmRvd1Bvc3RpdGlvbihiKSx0aGlzLm9wdGlvbnMuc2hvd0xlbnMmJih0aGlzLmZ1bGx3aWR0aCYmXCJsZW5zXCIhPXRoaXMub3B0aW9ucy56b29tVHlwZSYmKHRoaXMubGVuc0xlZnRQb3M9MCksdGhpcy56b29tTGVucy5jc3Moe2xlZnQ6dGhpcy5sZW5zTGVmdFBvcytcInB4XCIsdG9wOnRoaXMubGVuc1RvcFBvcytcInB4XCJ9KSkpfSxzaG93SGlkZVdpbmRvdzpmdW5jdGlvbihiKXtcInNob3dcIiE9Ynx8dGhpcy5pc1dpbmRvd0FjdGl2ZXx8KHRoaXMub3B0aW9ucy56b29tV2luZG93RmFkZUluP3RoaXMuem9vbVdpbmRvdy5zdG9wKCEwLCEwLCExKS5mYWRlSW4odGhpcy5vcHRpb25zLnpvb21XaW5kb3dGYWRlSW4pOnRoaXMuem9vbVdpbmRvdy5zaG93KCksdGhpcy5pc1dpbmRvd0FjdGl2ZT1cclxuITApO1wiaGlkZVwiPT1iJiZ0aGlzLmlzV2luZG93QWN0aXZlJiYodGhpcy5vcHRpb25zLnpvb21XaW5kb3dGYWRlT3V0P3RoaXMuem9vbVdpbmRvdy5zdG9wKCEwLCEwKS5mYWRlT3V0KHRoaXMub3B0aW9ucy56b29tV2luZG93RmFkZU91dCk6dGhpcy56b29tV2luZG93LmhpZGUoKSx0aGlzLmlzV2luZG93QWN0aXZlPSExKX0sc2hvd0hpZGVMZW5zOmZ1bmN0aW9uKGIpe1wic2hvd1wiIT1ifHx0aGlzLmlzTGVuc0FjdGl2ZXx8KHRoaXMub3B0aW9ucy5sZW5zRmFkZUluP3RoaXMuem9vbUxlbnMuc3RvcCghMCwhMCwhMSkuZmFkZUluKHRoaXMub3B0aW9ucy5sZW5zRmFkZUluKTp0aGlzLnpvb21MZW5zLnNob3coKSx0aGlzLmlzTGVuc0FjdGl2ZT0hMCk7XCJoaWRlXCI9PWImJnRoaXMuaXNMZW5zQWN0aXZlJiYodGhpcy5vcHRpb25zLmxlbnNGYWRlT3V0P3RoaXMuem9vbUxlbnMuc3RvcCghMCwhMCkuZmFkZU91dCh0aGlzLm9wdGlvbnMubGVuc0ZhZGVPdXQpOnRoaXMuem9vbUxlbnMuaGlkZSgpLFxyXG50aGlzLmlzTGVuc0FjdGl2ZT0hMSl9LHNob3dIaWRlVGludDpmdW5jdGlvbihiKXtcInNob3dcIiE9Ynx8dGhpcy5pc1RpbnRBY3RpdmV8fCh0aGlzLm9wdGlvbnMuem9vbVRpbnRGYWRlSW4/dGhpcy56b29tVGludC5jc3Moe29wYWNpdHk6dGhpcy5vcHRpb25zLnRpbnRPcGFjaXR5fSkuYW5pbWF0ZSgpLnN0b3AoITAsITApLmZhZGVJbihcInNsb3dcIik6KHRoaXMuem9vbVRpbnQuY3NzKHtvcGFjaXR5OnRoaXMub3B0aW9ucy50aW50T3BhY2l0eX0pLmFuaW1hdGUoKSx0aGlzLnpvb21UaW50LnNob3coKSksdGhpcy5pc1RpbnRBY3RpdmU9ITApO1wiaGlkZVwiPT1iJiZ0aGlzLmlzVGludEFjdGl2ZSYmKHRoaXMub3B0aW9ucy56b29tVGludEZhZGVPdXQ/dGhpcy56b29tVGludC5zdG9wKCEwLCEwKS5mYWRlT3V0KHRoaXMub3B0aW9ucy56b29tVGludEZhZGVPdXQpOnRoaXMuem9vbVRpbnQuaGlkZSgpLHRoaXMuaXNUaW50QWN0aXZlPSExKX0sc2V0TGVuc1Bvc3RpdGlvbjpmdW5jdGlvbihiKXt9LFxyXG5zZXRXaW5kb3dQb3N0aXRpb246ZnVuY3Rpb24oYil7dmFyIGE9dGhpcztpZihpc05hTihhLm9wdGlvbnMuem9vbVdpbmRvd1Bvc2l0aW9uKSlhLmV4dGVybmFsQ29udGFpbmVyPWQoXCIjXCIrYS5vcHRpb25zLnpvb21XaW5kb3dQb3NpdGlvbiksYS5leHRlcm5hbENvbnRhaW5lcldpZHRoPWEuZXh0ZXJuYWxDb250YWluZXIud2lkdGgoKSxhLmV4dGVybmFsQ29udGFpbmVySGVpZ2h0PWEuZXh0ZXJuYWxDb250YWluZXIuaGVpZ2h0KCksYS5leHRlcm5hbENvbnRhaW5lck9mZnNldD1hLmV4dGVybmFsQ29udGFpbmVyLm9mZnNldCgpLGEud2luZG93T2Zmc2V0VG9wPWEuZXh0ZXJuYWxDb250YWluZXJPZmZzZXQudG9wLGEud2luZG93T2Zmc2V0TGVmdD1hLmV4dGVybmFsQ29udGFpbmVyT2Zmc2V0LmxlZnQ7ZWxzZSBzd2l0Y2goYS5vcHRpb25zLnpvb21XaW5kb3dQb3NpdGlvbil7Y2FzZSAxOmEud2luZG93T2Zmc2V0VG9wPWEub3B0aW9ucy56b29tV2luZG93T2ZmZXR5O2Eud2luZG93T2Zmc2V0TGVmdD1cclxuK2EubnpXaWR0aDticmVhaztjYXNlIDI6YS5vcHRpb25zLnpvb21XaW5kb3dIZWlnaHQ+YS5uekhlaWdodCYmKGEud2luZG93T2Zmc2V0VG9wPS0xKihhLm9wdGlvbnMuem9vbVdpbmRvd0hlaWdodC8yLWEubnpIZWlnaHQvMiksYS53aW5kb3dPZmZzZXRMZWZ0PWEubnpXaWR0aCk7YnJlYWs7Y2FzZSAzOmEud2luZG93T2Zmc2V0VG9wPWEubnpIZWlnaHQtYS56b29tV2luZG93LmhlaWdodCgpLTIqYS5vcHRpb25zLmJvcmRlclNpemU7YS53aW5kb3dPZmZzZXRMZWZ0PWEubnpXaWR0aDticmVhaztjYXNlIDQ6YS53aW5kb3dPZmZzZXRUb3A9YS5uekhlaWdodDthLndpbmRvd09mZnNldExlZnQ9YS5ueldpZHRoO2JyZWFrO2Nhc2UgNTphLndpbmRvd09mZnNldFRvcD1hLm56SGVpZ2h0O2Eud2luZG93T2Zmc2V0TGVmdD1hLm56V2lkdGgtYS56b29tV2luZG93LndpZHRoKCktMiphLm9wdGlvbnMuYm9yZGVyU2l6ZTticmVhaztjYXNlIDY6YS5vcHRpb25zLnpvb21XaW5kb3dIZWlnaHQ+XHJcbmEubnpIZWlnaHQmJihhLndpbmRvd09mZnNldFRvcD1hLm56SGVpZ2h0LGEud2luZG93T2Zmc2V0TGVmdD0tMSooYS5vcHRpb25zLnpvb21XaW5kb3dXaWR0aC8yLWEubnpXaWR0aC8yKzIqYS5vcHRpb25zLmJvcmRlclNpemUpKTticmVhaztjYXNlIDc6YS53aW5kb3dPZmZzZXRUb3A9YS5uekhlaWdodDthLndpbmRvd09mZnNldExlZnQ9MDticmVhaztjYXNlIDg6YS53aW5kb3dPZmZzZXRUb3A9YS5uekhlaWdodDthLndpbmRvd09mZnNldExlZnQ9LTEqKGEuem9vbVdpbmRvdy53aWR0aCgpKzIqYS5vcHRpb25zLmJvcmRlclNpemUpO2JyZWFrO2Nhc2UgOTphLndpbmRvd09mZnNldFRvcD1hLm56SGVpZ2h0LWEuem9vbVdpbmRvdy5oZWlnaHQoKS0yKmEub3B0aW9ucy5ib3JkZXJTaXplO2Eud2luZG93T2Zmc2V0TGVmdD0tMSooYS56b29tV2luZG93LndpZHRoKCkrMiphLm9wdGlvbnMuYm9yZGVyU2l6ZSk7YnJlYWs7Y2FzZSAxMDphLm9wdGlvbnMuem9vbVdpbmRvd0hlaWdodD5hLm56SGVpZ2h0JiZcclxuKGEud2luZG93T2Zmc2V0VG9wPS0xKihhLm9wdGlvbnMuem9vbVdpbmRvd0hlaWdodC8yLWEubnpIZWlnaHQvMiksYS53aW5kb3dPZmZzZXRMZWZ0PS0xKihhLnpvb21XaW5kb3cud2lkdGgoKSsyKmEub3B0aW9ucy5ib3JkZXJTaXplKSk7YnJlYWs7Y2FzZSAxMTphLndpbmRvd09mZnNldFRvcD1hLm9wdGlvbnMuem9vbVdpbmRvd09mZmV0eTthLndpbmRvd09mZnNldExlZnQ9LTEqKGEuem9vbVdpbmRvdy53aWR0aCgpKzIqYS5vcHRpb25zLmJvcmRlclNpemUpO2JyZWFrO2Nhc2UgMTI6YS53aW5kb3dPZmZzZXRUb3A9LTEqKGEuem9vbVdpbmRvdy5oZWlnaHQoKSsyKmEub3B0aW9ucy5ib3JkZXJTaXplKTthLndpbmRvd09mZnNldExlZnQ9LTEqKGEuem9vbVdpbmRvdy53aWR0aCgpKzIqYS5vcHRpb25zLmJvcmRlclNpemUpO2JyZWFrO2Nhc2UgMTM6YS53aW5kb3dPZmZzZXRUb3A9LTEqKGEuem9vbVdpbmRvdy5oZWlnaHQoKSsyKmEub3B0aW9ucy5ib3JkZXJTaXplKTthLndpbmRvd09mZnNldExlZnQ9XHJcbjA7YnJlYWs7Y2FzZSAxNDphLm9wdGlvbnMuem9vbVdpbmRvd0hlaWdodD5hLm56SGVpZ2h0JiYoYS53aW5kb3dPZmZzZXRUb3A9LTEqKGEuem9vbVdpbmRvdy5oZWlnaHQoKSsyKmEub3B0aW9ucy5ib3JkZXJTaXplKSxhLndpbmRvd09mZnNldExlZnQ9LTEqKGEub3B0aW9ucy56b29tV2luZG93V2lkdGgvMi1hLm56V2lkdGgvMisyKmEub3B0aW9ucy5ib3JkZXJTaXplKSk7YnJlYWs7Y2FzZSAxNTphLndpbmRvd09mZnNldFRvcD0tMSooYS56b29tV2luZG93LmhlaWdodCgpKzIqYS5vcHRpb25zLmJvcmRlclNpemUpO2Eud2luZG93T2Zmc2V0TGVmdD1hLm56V2lkdGgtYS56b29tV2luZG93LndpZHRoKCktMiphLm9wdGlvbnMuYm9yZGVyU2l6ZTticmVhaztjYXNlIDE2OmEud2luZG93T2Zmc2V0VG9wPS0xKihhLnpvb21XaW5kb3cuaGVpZ2h0KCkrMiphLm9wdGlvbnMuYm9yZGVyU2l6ZSk7YS53aW5kb3dPZmZzZXRMZWZ0PWEubnpXaWR0aDticmVhaztkZWZhdWx0OmEud2luZG93T2Zmc2V0VG9wPVxyXG5hLm9wdGlvbnMuem9vbVdpbmRvd09mZmV0eSxhLndpbmRvd09mZnNldExlZnQ9YS5ueldpZHRofWEuaXNXaW5kb3dTZXQ9ITA7YS53aW5kb3dPZmZzZXRUb3ArPWEub3B0aW9ucy56b29tV2luZG93T2ZmZXR5O2Eud2luZG93T2Zmc2V0TGVmdCs9YS5vcHRpb25zLnpvb21XaW5kb3dPZmZldHg7YS56b29tV2luZG93LmNzcyh7dG9wOmEud2luZG93T2Zmc2V0VG9wfSk7YS56b29tV2luZG93LmNzcyh7bGVmdDphLndpbmRvd09mZnNldExlZnR9KTtcImlubmVyXCI9PWEub3B0aW9ucy56b29tVHlwZSYmKGEuem9vbVdpbmRvdy5jc3Moe3RvcDowfSksYS56b29tV2luZG93LmNzcyh7bGVmdDowfSkpO2Eud2luZG93TGVmdFBvcz1TdHJpbmcoLTEqKChiLnBhZ2VYLWEubnpPZmZzZXQubGVmdCkqYS53aWR0aFJhdGlvLWEuem9vbVdpbmRvdy53aWR0aCgpLzIpKTthLndpbmRvd1RvcFBvcz1TdHJpbmcoLTEqKChiLnBhZ2VZLWEubnpPZmZzZXQudG9wKSphLmhlaWdodFJhdGlvLWEuem9vbVdpbmRvdy5oZWlnaHQoKS9cclxuMikpO2EuRXRvcHBvcyYmKGEud2luZG93VG9wUG9zPTApO2EuRWxvcHBvcyYmKGEud2luZG93TGVmdFBvcz0wKTthLkVib3Bwb3MmJihhLndpbmRvd1RvcFBvcz0tMSooYS5sYXJnZUhlaWdodC9hLmN1cnJlbnRab29tTGV2ZWwtYS56b29tV2luZG93LmhlaWdodCgpKSk7YS5Fcm9wcG9zJiYoYS53aW5kb3dMZWZ0UG9zPS0xKihhLmxhcmdlV2lkdGgvYS5jdXJyZW50Wm9vbUxldmVsLWEuem9vbVdpbmRvdy53aWR0aCgpKSk7YS5mdWxsaGVpZ2h0JiYoYS53aW5kb3dUb3BQb3M9MCk7YS5mdWxsd2lkdGgmJihhLndpbmRvd0xlZnRQb3M9MCk7aWYoXCJ3aW5kb3dcIj09YS5vcHRpb25zLnpvb21UeXBlfHxcImlubmVyXCI9PWEub3B0aW9ucy56b29tVHlwZSkxPT1hLnpvb21Mb2NrJiYoMT49YS53aWR0aFJhdGlvJiYoYS53aW5kb3dMZWZ0UG9zPTApLDE+PWEuaGVpZ2h0UmF0aW8mJihhLndpbmRvd1RvcFBvcz0wKSksYS5sYXJnZUhlaWdodDxhLm9wdGlvbnMuem9vbVdpbmRvd0hlaWdodCYmKGEud2luZG93VG9wUG9zPVxyXG4wKSxhLmxhcmdlV2lkdGg8YS5vcHRpb25zLnpvb21XaW5kb3dXaWR0aCYmKGEud2luZG93TGVmdFBvcz0wKSxhLm9wdGlvbnMuZWFzaW5nPyhhLnhwfHwoYS54cD0wKSxhLnlwfHwoYS55cD0wKSxhLmxvb3B8fChhLmxvb3A9c2V0SW50ZXJ2YWwoZnVuY3Rpb24oKXthLnhwKz0oYS53aW5kb3dMZWZ0UG9zLWEueHApL2Eub3B0aW9ucy5lYXNpbmdBbW91bnQ7YS55cCs9KGEud2luZG93VG9wUG9zLWEueXApL2Eub3B0aW9ucy5lYXNpbmdBbW91bnQ7YS5zY3JvbGxpbmdMb2NrPyhjbGVhckludGVydmFsKGEubG9vcCksYS54cD1hLndpbmRvd0xlZnRQb3MsYS55cD1hLndpbmRvd1RvcFBvcyxhLnhwPS0xKigoYi5wYWdlWC1hLm56T2Zmc2V0LmxlZnQpKmEud2lkdGhSYXRpby1hLnpvb21XaW5kb3cud2lkdGgoKS8yKSxhLnlwPS0xKigoYi5wYWdlWS1hLm56T2Zmc2V0LnRvcCkqYS5oZWlnaHRSYXRpby1hLnpvb21XaW5kb3cuaGVpZ2h0KCkvMiksYS5jaGFuZ2VCZ1NpemUmJihhLm56SGVpZ2h0PlxyXG5hLm56V2lkdGg/KFwibGVuc1wiPT1hLm9wdGlvbnMuem9vbVR5cGUmJmEuem9vbUxlbnMuY3NzKHtcImJhY2tncm91bmQtc2l6ZVwiOmEubGFyZ2VXaWR0aC9hLm5ld3ZhbHVlaGVpZ2h0K1wicHggXCIrYS5sYXJnZUhlaWdodC9hLm5ld3ZhbHVlaGVpZ2h0K1wicHhcIn0pLGEuem9vbVdpbmRvdy5jc3Moe1wiYmFja2dyb3VuZC1zaXplXCI6YS5sYXJnZVdpZHRoL2EubmV3dmFsdWVoZWlnaHQrXCJweCBcIithLmxhcmdlSGVpZ2h0L2EubmV3dmFsdWVoZWlnaHQrXCJweFwifSkpOihcImxlbnNcIiE9YS5vcHRpb25zLnpvb21UeXBlJiZhLnpvb21MZW5zLmNzcyh7XCJiYWNrZ3JvdW5kLXNpemVcIjphLmxhcmdlV2lkdGgvYS5uZXd2YWx1ZXdpZHRoK1wicHggXCIrYS5sYXJnZUhlaWdodC9hLm5ld3ZhbHVlaGVpZ2h0K1wicHhcIn0pLGEuem9vbVdpbmRvdy5jc3Moe1wiYmFja2dyb3VuZC1zaXplXCI6YS5sYXJnZVdpZHRoL2EubmV3dmFsdWV3aWR0aCtcInB4IFwiK2EubGFyZ2VIZWlnaHQvYS5uZXd2YWx1ZXdpZHRoK1wicHhcIn0pKSxcclxuYS5jaGFuZ2VCZ1NpemU9ITEpLGEuem9vbVdpbmRvdy5jc3Moe2JhY2tncm91bmRQb3NpdGlvbjphLndpbmRvd0xlZnRQb3MrXCJweCBcIithLndpbmRvd1RvcFBvcytcInB4XCJ9KSxhLnNjcm9sbGluZ0xvY2s9ITEsYS5sb29wPSExKTooYS5jaGFuZ2VCZ1NpemUmJihhLm56SGVpZ2h0PmEubnpXaWR0aD8oXCJsZW5zXCI9PWEub3B0aW9ucy56b29tVHlwZSYmYS56b29tTGVucy5jc3Moe1wiYmFja2dyb3VuZC1zaXplXCI6YS5sYXJnZVdpZHRoL2EubmV3dmFsdWVoZWlnaHQrXCJweCBcIithLmxhcmdlSGVpZ2h0L2EubmV3dmFsdWVoZWlnaHQrXCJweFwifSksYS56b29tV2luZG93LmNzcyh7XCJiYWNrZ3JvdW5kLXNpemVcIjphLmxhcmdlV2lkdGgvYS5uZXd2YWx1ZWhlaWdodCtcInB4IFwiK2EubGFyZ2VIZWlnaHQvYS5uZXd2YWx1ZWhlaWdodCtcInB4XCJ9KSk6KFwibGVuc1wiIT1hLm9wdGlvbnMuem9vbVR5cGUmJmEuem9vbUxlbnMuY3NzKHtcImJhY2tncm91bmQtc2l6ZVwiOmEubGFyZ2VXaWR0aC9hLm5ld3ZhbHVld2lkdGgrXHJcblwicHggXCIrYS5sYXJnZUhlaWdodC9hLm5ld3ZhbHVld2lkdGgrXCJweFwifSksYS56b29tV2luZG93LmNzcyh7XCJiYWNrZ3JvdW5kLXNpemVcIjphLmxhcmdlV2lkdGgvYS5uZXd2YWx1ZXdpZHRoK1wicHggXCIrYS5sYXJnZUhlaWdodC9hLm5ld3ZhbHVld2lkdGgrXCJweFwifSkpLGEuY2hhbmdlQmdTaXplPSExKSxhLnpvb21XaW5kb3cuY3NzKHtiYWNrZ3JvdW5kUG9zaXRpb246YS54cCtcInB4IFwiK2EueXArXCJweFwifSkpfSwxNikpKTooYS5jaGFuZ2VCZ1NpemUmJihhLm56SGVpZ2h0PmEubnpXaWR0aD8oXCJsZW5zXCI9PWEub3B0aW9ucy56b29tVHlwZSYmYS56b29tTGVucy5jc3Moe1wiYmFja2dyb3VuZC1zaXplXCI6YS5sYXJnZVdpZHRoL2EubmV3dmFsdWVoZWlnaHQrXCJweCBcIithLmxhcmdlSGVpZ2h0L2EubmV3dmFsdWVoZWlnaHQrXCJweFwifSksYS56b29tV2luZG93LmNzcyh7XCJiYWNrZ3JvdW5kLXNpemVcIjphLmxhcmdlV2lkdGgvYS5uZXd2YWx1ZWhlaWdodCtcInB4IFwiK2EubGFyZ2VIZWlnaHQvXHJcbmEubmV3dmFsdWVoZWlnaHQrXCJweFwifSkpOihcImxlbnNcIj09YS5vcHRpb25zLnpvb21UeXBlJiZhLnpvb21MZW5zLmNzcyh7XCJiYWNrZ3JvdW5kLXNpemVcIjphLmxhcmdlV2lkdGgvYS5uZXd2YWx1ZXdpZHRoK1wicHggXCIrYS5sYXJnZUhlaWdodC9hLm5ld3ZhbHVld2lkdGgrXCJweFwifSksYS5sYXJnZUhlaWdodC9hLm5ld3ZhbHVld2lkdGg8YS5vcHRpb25zLnpvb21XaW5kb3dIZWlnaHQ/YS56b29tV2luZG93LmNzcyh7XCJiYWNrZ3JvdW5kLXNpemVcIjphLmxhcmdlV2lkdGgvYS5uZXd2YWx1ZXdpZHRoK1wicHggXCIrYS5sYXJnZUhlaWdodC9hLm5ld3ZhbHVld2lkdGgrXCJweFwifSk6YS56b29tV2luZG93LmNzcyh7XCJiYWNrZ3JvdW5kLXNpemVcIjphLmxhcmdlV2lkdGgvYS5uZXd2YWx1ZWhlaWdodCtcInB4IFwiK2EubGFyZ2VIZWlnaHQvYS5uZXd2YWx1ZWhlaWdodCtcInB4XCJ9KSksYS5jaGFuZ2VCZ1NpemU9ITEpLGEuem9vbVdpbmRvdy5jc3Moe2JhY2tncm91bmRQb3NpdGlvbjphLndpbmRvd0xlZnRQb3MrXHJcblwicHggXCIrYS53aW5kb3dUb3BQb3MrXCJweFwifSkpfSxzZXRUaW50UG9zaXRpb246ZnVuY3Rpb24oYil7dGhpcy5uek9mZnNldD10aGlzLiRlbGVtLm9mZnNldCgpO3RoaXMudGludHBvcz1TdHJpbmcoLTEqKGIucGFnZVgtdGhpcy5uek9mZnNldC5sZWZ0LXRoaXMuem9vbUxlbnMud2lkdGgoKS8yKSk7dGhpcy50aW50cG9zeT1TdHJpbmcoLTEqKGIucGFnZVktdGhpcy5uek9mZnNldC50b3AtdGhpcy56b29tTGVucy5oZWlnaHQoKS8yKSk7dGhpcy5FdG9wcG9zJiYodGhpcy50aW50cG9zeT0wKTt0aGlzLkVsb3Bwb3MmJih0aGlzLnRpbnRwb3M9MCk7dGhpcy5FYm9wcG9zJiYodGhpcy50aW50cG9zeT0tMSoodGhpcy5uekhlaWdodC10aGlzLnpvb21MZW5zLmhlaWdodCgpLTIqdGhpcy5vcHRpb25zLmxlbnNCb3JkZXJTaXplKSk7dGhpcy5Fcm9wcG9zJiYodGhpcy50aW50cG9zPS0xKih0aGlzLm56V2lkdGgtdGhpcy56b29tTGVucy53aWR0aCgpLTIqdGhpcy5vcHRpb25zLmxlbnNCb3JkZXJTaXplKSk7XHJcbnRoaXMub3B0aW9ucy50aW50JiYodGhpcy5mdWxsaGVpZ2h0JiYodGhpcy50aW50cG9zeT0wKSx0aGlzLmZ1bGx3aWR0aCYmKHRoaXMudGludHBvcz0wKSx0aGlzLnpvb21UaW50SW1hZ2UuY3NzKHtsZWZ0OnRoaXMudGludHBvcytcInB4XCJ9KSx0aGlzLnpvb21UaW50SW1hZ2UuY3NzKHt0b3A6dGhpcy50aW50cG9zeStcInB4XCJ9KSl9LHN3YXB0aGVpbWFnZTpmdW5jdGlvbihiLGEpe3ZhciBjPXRoaXMsZT1uZXcgSW1hZ2U7Yy5vcHRpb25zLmxvYWRpbmdJY29uJiYoYy5zcGlubmVyPWQoXCI8ZGl2IHN0eWxlPVxcXCJiYWNrZ3JvdW5kOiB1cmwoJ1wiK2Mub3B0aW9ucy5sb2FkaW5nSWNvbitcIicpIG5vLXJlcGVhdCBjZW50ZXI7aGVpZ2h0OlwiK2MubnpIZWlnaHQrXCJweDt3aWR0aDpcIitjLm56V2lkdGgrJ3B4O3otaW5kZXg6IDIwMDA7cG9zaXRpb246IGFic29sdXRlOyBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyO1wiPjwvZGl2PicpLGMuJGVsZW0uYWZ0ZXIoYy5zcGlubmVyKSk7XHJcbmMub3B0aW9ucy5vbkltYWdlU3dhcChjLiRlbGVtKTtlLm9ubG9hZD1mdW5jdGlvbigpe2MubGFyZ2VXaWR0aD1lLndpZHRoO2MubGFyZ2VIZWlnaHQ9ZS5oZWlnaHQ7Yy56b29tSW1hZ2U9YTtjLnpvb21XaW5kb3cuY3NzKHtcImJhY2tncm91bmQtc2l6ZVwiOmMubGFyZ2VXaWR0aCtcInB4IFwiK2MubGFyZ2VIZWlnaHQrXCJweFwifSk7Yy56b29tV2luZG93LmNzcyh7XCJiYWNrZ3JvdW5kLXNpemVcIjpjLmxhcmdlV2lkdGgrXCJweCBcIitjLmxhcmdlSGVpZ2h0K1wicHhcIn0pO2Muc3dhcEFjdGlvbihiLGEpfTtlLnNyYz1hfSxzd2FwQWN0aW9uOmZ1bmN0aW9uKGIsYSl7dmFyIGM9dGhpcyxlPW5ldyBJbWFnZTtlLm9ubG9hZD1mdW5jdGlvbigpe2MubnpIZWlnaHQ9ZS5oZWlnaHQ7Yy5ueldpZHRoPWUud2lkdGg7Yy5vcHRpb25zLm9uSW1hZ2VTd2FwQ29tcGxldGUoYy4kZWxlbSk7Yy5kb25lQ2FsbGJhY2soKX07ZS5zcmM9YjtjLmN1cnJlbnRab29tTGV2ZWw9Yy5vcHRpb25zLnpvb21MZXZlbDtjLm9wdGlvbnMubWF4Wm9vbUxldmVsPVxyXG4hMTtcImxlbnNcIj09Yy5vcHRpb25zLnpvb21UeXBlJiZjLnpvb21MZW5zLmNzcyh7YmFja2dyb3VuZEltYWdlOlwidXJsKCdcIithK1wiJylcIn0pO1wid2luZG93XCI9PWMub3B0aW9ucy56b29tVHlwZSYmYy56b29tV2luZG93LmNzcyh7YmFja2dyb3VuZEltYWdlOlwidXJsKCdcIithK1wiJylcIn0pO1wiaW5uZXJcIj09Yy5vcHRpb25zLnpvb21UeXBlJiZjLnpvb21XaW5kb3cuY3NzKHtiYWNrZ3JvdW5kSW1hZ2U6XCJ1cmwoJ1wiK2ErXCInKVwifSk7Yy5jdXJyZW50SW1hZ2U9YTtpZihjLm9wdGlvbnMuaW1hZ2VDcm9zc2ZhZGUpe3ZhciBmPWMuJGVsZW0sZz1mLmNsb25lKCk7Yy4kZWxlbS5hdHRyKFwic3JjXCIsYik7Yy4kZWxlbS5hZnRlcihnKTtnLnN0b3AoITApLmZhZGVPdXQoYy5vcHRpb25zLmltYWdlQ3Jvc3NmYWRlLGZ1bmN0aW9uKCl7ZCh0aGlzKS5yZW1vdmUoKX0pO2MuJGVsZW0ud2lkdGgoXCJhdXRvXCIpLnJlbW92ZUF0dHIoXCJ3aWR0aFwiKTtjLiRlbGVtLmhlaWdodChcImF1dG9cIikucmVtb3ZlQXR0cihcImhlaWdodFwiKTtcclxuZi5mYWRlSW4oYy5vcHRpb25zLmltYWdlQ3Jvc3NmYWRlKTtjLm9wdGlvbnMudGludCYmXCJpbm5lclwiIT1jLm9wdGlvbnMuem9vbVR5cGUmJihmPWMuem9vbVRpbnRJbWFnZSxnPWYuY2xvbmUoKSxjLnpvb21UaW50SW1hZ2UuYXR0cihcInNyY1wiLGEpLGMuem9vbVRpbnRJbWFnZS5hZnRlcihnKSxnLnN0b3AoITApLmZhZGVPdXQoYy5vcHRpb25zLmltYWdlQ3Jvc3NmYWRlLGZ1bmN0aW9uKCl7ZCh0aGlzKS5yZW1vdmUoKX0pLGYuZmFkZUluKGMub3B0aW9ucy5pbWFnZUNyb3NzZmFkZSksYy56b29tVGludC5jc3Moe2hlaWdodDpjLiRlbGVtLmhlaWdodCgpfSksYy56b29tVGludC5jc3Moe3dpZHRoOmMuJGVsZW0ud2lkdGgoKX0pKTtjLnpvb21Db250YWluZXIuY3NzKFwiaGVpZ2h0XCIsYy4kZWxlbS5oZWlnaHQoKSk7Yy56b29tQ29udGFpbmVyLmNzcyhcIndpZHRoXCIsYy4kZWxlbS53aWR0aCgpKTtcImlubmVyXCIhPWMub3B0aW9ucy56b29tVHlwZXx8Yy5vcHRpb25zLmNvbnN0cmFpblR5cGV8fFxyXG4oYy56b29tV3JhcC5wYXJlbnQoKS5jc3MoXCJoZWlnaHRcIixjLiRlbGVtLmhlaWdodCgpKSxjLnpvb21XcmFwLnBhcmVudCgpLmNzcyhcIndpZHRoXCIsYy4kZWxlbS53aWR0aCgpKSxjLnpvb21XaW5kb3cuY3NzKFwiaGVpZ2h0XCIsYy4kZWxlbS5oZWlnaHQoKSksYy56b29tV2luZG93LmNzcyhcIndpZHRoXCIsYy4kZWxlbS53aWR0aCgpKSl9ZWxzZSBjLiRlbGVtLmF0dHIoXCJzcmNcIixiKSxjLm9wdGlvbnMudGludCYmKGMuem9vbVRpbnRJbWFnZS5hdHRyKFwic3JjXCIsYSksYy56b29tVGludEltYWdlLmF0dHIoXCJoZWlnaHRcIixjLiRlbGVtLmhlaWdodCgpKSxjLnpvb21UaW50SW1hZ2UuY3NzKHtoZWlnaHQ6Yy4kZWxlbS5oZWlnaHQoKX0pLGMuem9vbVRpbnQuY3NzKHtoZWlnaHQ6Yy4kZWxlbS5oZWlnaHQoKX0pKSxjLnpvb21Db250YWluZXIuY3NzKFwiaGVpZ2h0XCIsYy4kZWxlbS5oZWlnaHQoKSksYy56b29tQ29udGFpbmVyLmNzcyhcIndpZHRoXCIsYy4kZWxlbS53aWR0aCgpKTtjLm9wdGlvbnMuaW1hZ2VDcm9zc2ZhZGUmJlxyXG4oYy56b29tV3JhcC5jc3MoXCJoZWlnaHRcIixjLiRlbGVtLmhlaWdodCgpKSxjLnpvb21XcmFwLmNzcyhcIndpZHRoXCIsYy4kZWxlbS53aWR0aCgpKSk7Yy5vcHRpb25zLmNvbnN0cmFpblR5cGUmJihcImhlaWdodFwiPT1jLm9wdGlvbnMuY29uc3RyYWluVHlwZSYmKGMuem9vbUNvbnRhaW5lci5jc3MoXCJoZWlnaHRcIixjLm9wdGlvbnMuY29uc3RyYWluU2l6ZSksYy56b29tQ29udGFpbmVyLmNzcyhcIndpZHRoXCIsXCJhdXRvXCIpLGMub3B0aW9ucy5pbWFnZUNyb3NzZmFkZT8oYy56b29tV3JhcC5jc3MoXCJoZWlnaHRcIixjLm9wdGlvbnMuY29uc3RyYWluU2l6ZSksYy56b29tV3JhcC5jc3MoXCJ3aWR0aFwiLFwiYXV0b1wiKSxjLmNvbnN0d2lkdGg9Yy56b29tV3JhcC53aWR0aCgpKTooYy4kZWxlbS5jc3MoXCJoZWlnaHRcIixjLm9wdGlvbnMuY29uc3RyYWluU2l6ZSksYy4kZWxlbS5jc3MoXCJ3aWR0aFwiLFwiYXV0b1wiKSxjLmNvbnN0d2lkdGg9Yy4kZWxlbS53aWR0aCgpKSxcImlubmVyXCI9PWMub3B0aW9ucy56b29tVHlwZSYmXHJcbihjLnpvb21XcmFwLnBhcmVudCgpLmNzcyhcImhlaWdodFwiLGMub3B0aW9ucy5jb25zdHJhaW5TaXplKSxjLnpvb21XcmFwLnBhcmVudCgpLmNzcyhcIndpZHRoXCIsYy5jb25zdHdpZHRoKSxjLnpvb21XaW5kb3cuY3NzKFwiaGVpZ2h0XCIsYy5vcHRpb25zLmNvbnN0cmFpblNpemUpLGMuem9vbVdpbmRvdy5jc3MoXCJ3aWR0aFwiLGMuY29uc3R3aWR0aCkpLGMub3B0aW9ucy50aW50JiYoYy50aW50Q29udGFpbmVyLmNzcyhcImhlaWdodFwiLGMub3B0aW9ucy5jb25zdHJhaW5TaXplKSxjLnRpbnRDb250YWluZXIuY3NzKFwid2lkdGhcIixjLmNvbnN0d2lkdGgpLGMuem9vbVRpbnQuY3NzKFwiaGVpZ2h0XCIsYy5vcHRpb25zLmNvbnN0cmFpblNpemUpLGMuem9vbVRpbnQuY3NzKFwid2lkdGhcIixjLmNvbnN0d2lkdGgpLGMuem9vbVRpbnRJbWFnZS5jc3MoXCJoZWlnaHRcIixjLm9wdGlvbnMuY29uc3RyYWluU2l6ZSksYy56b29tVGludEltYWdlLmNzcyhcIndpZHRoXCIsYy5jb25zdHdpZHRoKSkpLFwid2lkdGhcIj09XHJcbmMub3B0aW9ucy5jb25zdHJhaW5UeXBlJiYoYy56b29tQ29udGFpbmVyLmNzcyhcImhlaWdodFwiLFwiYXV0b1wiKSxjLnpvb21Db250YWluZXIuY3NzKFwid2lkdGhcIixjLm9wdGlvbnMuY29uc3RyYWluU2l6ZSksYy5vcHRpb25zLmltYWdlQ3Jvc3NmYWRlPyhjLnpvb21XcmFwLmNzcyhcImhlaWdodFwiLFwiYXV0b1wiKSxjLnpvb21XcmFwLmNzcyhcIndpZHRoXCIsYy5vcHRpb25zLmNvbnN0cmFpblNpemUpLGMuY29uc3RoZWlnaHQ9Yy56b29tV3JhcC5oZWlnaHQoKSk6KGMuJGVsZW0uY3NzKFwiaGVpZ2h0XCIsXCJhdXRvXCIpLGMuJGVsZW0uY3NzKFwid2lkdGhcIixjLm9wdGlvbnMuY29uc3RyYWluU2l6ZSksYy5jb25zdGhlaWdodD1jLiRlbGVtLmhlaWdodCgpKSxcImlubmVyXCI9PWMub3B0aW9ucy56b29tVHlwZSYmKGMuem9vbVdyYXAucGFyZW50KCkuY3NzKFwiaGVpZ2h0XCIsYy5jb25zdGhlaWdodCksYy56b29tV3JhcC5wYXJlbnQoKS5jc3MoXCJ3aWR0aFwiLGMub3B0aW9ucy5jb25zdHJhaW5TaXplKSxjLnpvb21XaW5kb3cuY3NzKFwiaGVpZ2h0XCIsXHJcbmMuY29uc3RoZWlnaHQpLGMuem9vbVdpbmRvdy5jc3MoXCJ3aWR0aFwiLGMub3B0aW9ucy5jb25zdHJhaW5TaXplKSksYy5vcHRpb25zLnRpbnQmJihjLnRpbnRDb250YWluZXIuY3NzKFwiaGVpZ2h0XCIsYy5jb25zdGhlaWdodCksYy50aW50Q29udGFpbmVyLmNzcyhcIndpZHRoXCIsYy5vcHRpb25zLmNvbnN0cmFpblNpemUpLGMuem9vbVRpbnQuY3NzKFwiaGVpZ2h0XCIsYy5jb25zdGhlaWdodCksYy56b29tVGludC5jc3MoXCJ3aWR0aFwiLGMub3B0aW9ucy5jb25zdHJhaW5TaXplKSxjLnpvb21UaW50SW1hZ2UuY3NzKFwiaGVpZ2h0XCIsYy5jb25zdGhlaWdodCksYy56b29tVGludEltYWdlLmNzcyhcIndpZHRoXCIsYy5vcHRpb25zLmNvbnN0cmFpblNpemUpKSkpfSxkb25lQ2FsbGJhY2s6ZnVuY3Rpb24oKXt0aGlzLm9wdGlvbnMubG9hZGluZ0ljb24mJnRoaXMuc3Bpbm5lci5oaWRlKCk7dGhpcy5uek9mZnNldD10aGlzLiRlbGVtLm9mZnNldCgpO3RoaXMubnpXaWR0aD10aGlzLiRlbGVtLndpZHRoKCk7XHJcbnRoaXMubnpIZWlnaHQ9dGhpcy4kZWxlbS5oZWlnaHQoKTt0aGlzLmN1cnJlbnRab29tTGV2ZWw9dGhpcy5vcHRpb25zLnpvb21MZXZlbDt0aGlzLndpZHRoUmF0aW89dGhpcy5sYXJnZVdpZHRoL3RoaXMubnpXaWR0aDt0aGlzLmhlaWdodFJhdGlvPXRoaXMubGFyZ2VIZWlnaHQvdGhpcy5uekhlaWdodDtcIndpbmRvd1wiPT10aGlzLm9wdGlvbnMuem9vbVR5cGUmJihsZW5zSGVpZ2h0PXRoaXMubnpIZWlnaHQ8dGhpcy5vcHRpb25zLnpvb21XaW5kb3dXaWR0aC90aGlzLndpZHRoUmF0aW8/dGhpcy5uekhlaWdodDpTdHJpbmcodGhpcy5vcHRpb25zLnpvb21XaW5kb3dIZWlnaHQvdGhpcy5oZWlnaHRSYXRpbyksbGVuc1dpZHRoPXRoaXMub3B0aW9ucy56b29tV2luZG93V2lkdGg8dGhpcy5vcHRpb25zLnpvb21XaW5kb3dXaWR0aD90aGlzLm56V2lkdGg6dGhpcy5vcHRpb25zLnpvb21XaW5kb3dXaWR0aC90aGlzLndpZHRoUmF0aW8sdGhpcy56b29tTGVucyYmKHRoaXMuem9vbUxlbnMuY3NzKFwid2lkdGhcIixcclxubGVuc1dpZHRoKSx0aGlzLnpvb21MZW5zLmNzcyhcImhlaWdodFwiLGxlbnNIZWlnaHQpKSl9LGdldEN1cnJlbnRJbWFnZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLnpvb21JbWFnZX0sZ2V0R2FsbGVyeUxpc3Q6ZnVuY3Rpb24oKXt2YXIgYj10aGlzO2IuZ2FsbGVyeWxpc3Q9W107Yi5vcHRpb25zLmdhbGxlcnk/ZChcIiNcIitiLm9wdGlvbnMuZ2FsbGVyeStcIiBhXCIpLmVhY2goZnVuY3Rpb24oKXt2YXIgYT1cIlwiO2QodGhpcykuZGF0YShcInpvb20taW1hZ2VcIik/YT1kKHRoaXMpLmRhdGEoXCJ6b29tLWltYWdlXCIpOmQodGhpcykuZGF0YShcImltYWdlXCIpJiYoYT1kKHRoaXMpLmRhdGEoXCJpbWFnZVwiKSk7YT09Yi56b29tSW1hZ2U/Yi5nYWxsZXJ5bGlzdC51bnNoaWZ0KHtocmVmOlwiXCIrYStcIlwiLHRpdGxlOmQodGhpcykuZmluZChcImltZ1wiKS5hdHRyKFwidGl0bGVcIil9KTpiLmdhbGxlcnlsaXN0LnB1c2goe2hyZWY6XCJcIithK1wiXCIsdGl0bGU6ZCh0aGlzKS5maW5kKFwiaW1nXCIpLmF0dHIoXCJ0aXRsZVwiKX0pfSk6XHJcbmIuZ2FsbGVyeWxpc3QucHVzaCh7aHJlZjpcIlwiK2Iuem9vbUltYWdlK1wiXCIsdGl0bGU6ZCh0aGlzKS5maW5kKFwiaW1nXCIpLmF0dHIoXCJ0aXRsZVwiKX0pO3JldHVybiBiLmdhbGxlcnlsaXN0fSxjaGFuZ2Vab29tTGV2ZWw6ZnVuY3Rpb24oYil7dGhpcy5zY3JvbGxpbmdMb2NrPSEwO3RoaXMubmV3dmFsdWU9cGFyc2VGbG9hdChiKS50b0ZpeGVkKDIpO25ld3ZhbHVlPXBhcnNlRmxvYXQoYikudG9GaXhlZCgyKTttYXhoZWlnaHRuZXd2YWx1ZT10aGlzLmxhcmdlSGVpZ2h0Lyh0aGlzLm9wdGlvbnMuem9vbVdpbmRvd0hlaWdodC90aGlzLm56SGVpZ2h0KnRoaXMubnpIZWlnaHQpO21heHdpZHRodG5ld3ZhbHVlPXRoaXMubGFyZ2VXaWR0aC8odGhpcy5vcHRpb25zLnpvb21XaW5kb3dXaWR0aC90aGlzLm56V2lkdGgqdGhpcy5ueldpZHRoKTtcImlubmVyXCIhPXRoaXMub3B0aW9ucy56b29tVHlwZSYmKG1heGhlaWdodG5ld3ZhbHVlPD1uZXd2YWx1ZT8odGhpcy5oZWlnaHRSYXRpbz10aGlzLmxhcmdlSGVpZ2h0L1xyXG5tYXhoZWlnaHRuZXd2YWx1ZS90aGlzLm56SGVpZ2h0LHRoaXMubmV3dmFsdWVoZWlnaHQ9bWF4aGVpZ2h0bmV3dmFsdWUsdGhpcy5mdWxsaGVpZ2h0PSEwKToodGhpcy5oZWlnaHRSYXRpbz10aGlzLmxhcmdlSGVpZ2h0L25ld3ZhbHVlL3RoaXMubnpIZWlnaHQsdGhpcy5uZXd2YWx1ZWhlaWdodD1uZXd2YWx1ZSx0aGlzLmZ1bGxoZWlnaHQ9ITEpLG1heHdpZHRodG5ld3ZhbHVlPD1uZXd2YWx1ZT8odGhpcy53aWR0aFJhdGlvPXRoaXMubGFyZ2VXaWR0aC9tYXh3aWR0aHRuZXd2YWx1ZS90aGlzLm56V2lkdGgsdGhpcy5uZXd2YWx1ZXdpZHRoPW1heHdpZHRodG5ld3ZhbHVlLHRoaXMuZnVsbHdpZHRoPSEwKToodGhpcy53aWR0aFJhdGlvPXRoaXMubGFyZ2VXaWR0aC9uZXd2YWx1ZS90aGlzLm56V2lkdGgsdGhpcy5uZXd2YWx1ZXdpZHRoPW5ld3ZhbHVlLHRoaXMuZnVsbHdpZHRoPSExKSxcImxlbnNcIj09dGhpcy5vcHRpb25zLnpvb21UeXBlJiYobWF4aGVpZ2h0bmV3dmFsdWU8PW5ld3ZhbHVlP1xyXG4odGhpcy5mdWxsd2lkdGg9ITAsdGhpcy5uZXd2YWx1ZXdpZHRoPW1heGhlaWdodG5ld3ZhbHVlKToodGhpcy53aWR0aFJhdGlvPXRoaXMubGFyZ2VXaWR0aC9uZXd2YWx1ZS90aGlzLm56V2lkdGgsdGhpcy5uZXd2YWx1ZXdpZHRoPW5ld3ZhbHVlLHRoaXMuZnVsbHdpZHRoPSExKSkpO1wiaW5uZXJcIj09dGhpcy5vcHRpb25zLnpvb21UeXBlJiYobWF4aGVpZ2h0bmV3dmFsdWU9cGFyc2VGbG9hdCh0aGlzLmxhcmdlSGVpZ2h0L3RoaXMubnpIZWlnaHQpLnRvRml4ZWQoMiksbWF4d2lkdGh0bmV3dmFsdWU9cGFyc2VGbG9hdCh0aGlzLmxhcmdlV2lkdGgvdGhpcy5ueldpZHRoKS50b0ZpeGVkKDIpLG5ld3ZhbHVlPm1heGhlaWdodG5ld3ZhbHVlJiYobmV3dmFsdWU9bWF4aGVpZ2h0bmV3dmFsdWUpLG5ld3ZhbHVlPm1heHdpZHRodG5ld3ZhbHVlJiYobmV3dmFsdWU9bWF4d2lkdGh0bmV3dmFsdWUpLG1heGhlaWdodG5ld3ZhbHVlPD1uZXd2YWx1ZT8odGhpcy5oZWlnaHRSYXRpbz10aGlzLmxhcmdlSGVpZ2h0L1xyXG5uZXd2YWx1ZS90aGlzLm56SGVpZ2h0LHRoaXMubmV3dmFsdWVoZWlnaHQ9bmV3dmFsdWU+bWF4aGVpZ2h0bmV3dmFsdWU/bWF4aGVpZ2h0bmV3dmFsdWU6bmV3dmFsdWUsdGhpcy5mdWxsaGVpZ2h0PSEwKToodGhpcy5oZWlnaHRSYXRpbz10aGlzLmxhcmdlSGVpZ2h0L25ld3ZhbHVlL3RoaXMubnpIZWlnaHQsdGhpcy5uZXd2YWx1ZWhlaWdodD1uZXd2YWx1ZT5tYXhoZWlnaHRuZXd2YWx1ZT9tYXhoZWlnaHRuZXd2YWx1ZTpuZXd2YWx1ZSx0aGlzLmZ1bGxoZWlnaHQ9ITEpLG1heHdpZHRodG5ld3ZhbHVlPD1uZXd2YWx1ZT8odGhpcy53aWR0aFJhdGlvPXRoaXMubGFyZ2VXaWR0aC9uZXd2YWx1ZS90aGlzLm56V2lkdGgsdGhpcy5uZXd2YWx1ZXdpZHRoPW5ld3ZhbHVlPm1heHdpZHRodG5ld3ZhbHVlP21heHdpZHRodG5ld3ZhbHVlOm5ld3ZhbHVlLHRoaXMuZnVsbHdpZHRoPSEwKToodGhpcy53aWR0aFJhdGlvPXRoaXMubGFyZ2VXaWR0aC9uZXd2YWx1ZS90aGlzLm56V2lkdGgsdGhpcy5uZXd2YWx1ZXdpZHRoPVxyXG5uZXd2YWx1ZSx0aGlzLmZ1bGx3aWR0aD0hMSkpO3NjcmNvbnRpbnVlPSExO1wiaW5uZXJcIj09dGhpcy5vcHRpb25zLnpvb21UeXBlJiYodGhpcy5ueldpZHRoPnRoaXMubnpIZWlnaHQmJih0aGlzLm5ld3ZhbHVld2lkdGg8PW1heHdpZHRodG5ld3ZhbHVlP3NjcmNvbnRpbnVlPSEwOihzY3Jjb250aW51ZT0hMSx0aGlzLmZ1bGx3aWR0aD10aGlzLmZ1bGxoZWlnaHQ9ITApKSx0aGlzLm56SGVpZ2h0PnRoaXMubnpXaWR0aCYmKHRoaXMubmV3dmFsdWV3aWR0aDw9bWF4d2lkdGh0bmV3dmFsdWU/c2NyY29udGludWU9ITA6KHNjcmNvbnRpbnVlPSExLHRoaXMuZnVsbHdpZHRoPXRoaXMuZnVsbGhlaWdodD0hMCkpKTtcImlubmVyXCIhPXRoaXMub3B0aW9ucy56b29tVHlwZSYmKHNjcmNvbnRpbnVlPSEwKTtzY3Jjb250aW51ZSYmKHRoaXMuem9vbUxvY2s9MCx0aGlzLmNoYW5nZVpvb209ITAsdGhpcy5vcHRpb25zLnpvb21XaW5kb3dIZWlnaHQvdGhpcy5oZWlnaHRSYXRpbzw9dGhpcy5uekhlaWdodCYmXHJcbih0aGlzLmN1cnJlbnRab29tTGV2ZWw9dGhpcy5uZXd2YWx1ZWhlaWdodCxcImxlbnNcIiE9dGhpcy5vcHRpb25zLnpvb21UeXBlJiZcImlubmVyXCIhPXRoaXMub3B0aW9ucy56b29tVHlwZSYmKHRoaXMuY2hhbmdlQmdTaXplPSEwLHRoaXMuem9vbUxlbnMuY3NzKHtoZWlnaHQ6U3RyaW5nKHRoaXMub3B0aW9ucy56b29tV2luZG93SGVpZ2h0L3RoaXMuaGVpZ2h0UmF0aW8pK1wicHhcIn0pKSxcImxlbnNcIj09dGhpcy5vcHRpb25zLnpvb21UeXBlfHxcImlubmVyXCI9PXRoaXMub3B0aW9ucy56b29tVHlwZSkmJih0aGlzLmNoYW5nZUJnU2l6ZT0hMCksdGhpcy5vcHRpb25zLnpvb21XaW5kb3dXaWR0aC90aGlzLndpZHRoUmF0aW88PXRoaXMubnpXaWR0aCYmKFwiaW5uZXJcIiE9dGhpcy5vcHRpb25zLnpvb21UeXBlJiZ0aGlzLm5ld3ZhbHVld2lkdGg+dGhpcy5uZXd2YWx1ZWhlaWdodCYmKHRoaXMuY3VycmVudFpvb21MZXZlbD10aGlzLm5ld3ZhbHVld2lkdGgpLFwibGVuc1wiIT10aGlzLm9wdGlvbnMuem9vbVR5cGUmJlxyXG5cImlubmVyXCIhPXRoaXMub3B0aW9ucy56b29tVHlwZSYmKHRoaXMuY2hhbmdlQmdTaXplPSEwLHRoaXMuem9vbUxlbnMuY3NzKHt3aWR0aDpTdHJpbmcodGhpcy5vcHRpb25zLnpvb21XaW5kb3dXaWR0aC90aGlzLndpZHRoUmF0aW8pK1wicHhcIn0pKSxcImxlbnNcIj09dGhpcy5vcHRpb25zLnpvb21UeXBlfHxcImlubmVyXCI9PXRoaXMub3B0aW9ucy56b29tVHlwZSkmJih0aGlzLmNoYW5nZUJnU2l6ZT0hMCksXCJpbm5lclwiPT10aGlzLm9wdGlvbnMuem9vbVR5cGUmJih0aGlzLmNoYW5nZUJnU2l6ZT0hMCx0aGlzLm56V2lkdGg+dGhpcy5uekhlaWdodCYmKHRoaXMuY3VycmVudFpvb21MZXZlbD10aGlzLm5ld3ZhbHVld2lkdGgpLHRoaXMubnpIZWlnaHQ+dGhpcy5ueldpZHRoJiYodGhpcy5jdXJyZW50Wm9vbUxldmVsPXRoaXMubmV3dmFsdWV3aWR0aCkpKTt0aGlzLnNldFBvc2l0aW9uKHRoaXMuY3VycmVudExvYyl9LGNsb3NlQWxsOmZ1bmN0aW9uKCl7c2VsZi56b29tV2luZG93JiZzZWxmLnpvb21XaW5kb3cuaGlkZSgpO1xyXG5zZWxmLnpvb21MZW5zJiZzZWxmLnpvb21MZW5zLmhpZGUoKTtzZWxmLnpvb21UaW50JiZzZWxmLnpvb21UaW50LmhpZGUoKX0sY2hhbmdlU3RhdGU6ZnVuY3Rpb24oYil7XCJlbmFibGVcIj09YiYmKHRoaXMub3B0aW9ucy56b29tRW5hYmxlZD0hMCk7XCJkaXNhYmxlXCI9PWImJih0aGlzLm9wdGlvbnMuem9vbUVuYWJsZWQ9ITEpfX07ZC5mbi5lbGV2YXRlWm9vbT1mdW5jdGlvbihiKXtyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCl7dmFyIGE9T2JqZWN0LmNyZWF0ZShrKTthLmluaXQoYix0aGlzKTtkLmRhdGEodGhpcyxcImVsZXZhdGVab29tXCIsYSl9KX07ZC5mbi5lbGV2YXRlWm9vbS5vcHRpb25zPXt6b29tQWN0aXZhdGlvbjpcImhvdmVyXCIsem9vbUVuYWJsZWQ6ITAscHJlbG9hZGluZzoxLHpvb21MZXZlbDoxLHNjcm9sbFpvb206ITEsc2Nyb2xsWm9vbUluY3JlbWVudDowLjEsbWluWm9vbUxldmVsOiExLG1heFpvb21MZXZlbDohMSxlYXNpbmc6ITEsZWFzaW5nQW1vdW50OjEyLGxlbnNTaXplOjIwMCxcclxuem9vbVdpbmRvd1dpZHRoOjQwMCx6b29tV2luZG93SGVpZ2h0OjQwMCx6b29tV2luZG93T2ZmZXR4OjAsem9vbVdpbmRvd09mZmV0eTowLHpvb21XaW5kb3dQb3NpdGlvbjoxLHpvb21XaW5kb3dCZ0NvbG91cjpcIiNmZmZcIixsZW5zRmFkZUluOiExLGxlbnNGYWRlT3V0OiExLGRlYnVnOiExLHpvb21XaW5kb3dGYWRlSW46ITEsem9vbVdpbmRvd0ZhZGVPdXQ6ITEsem9vbVdpbmRvd0Fsd2F5c1Nob3c6ITEsem9vbVRpbnRGYWRlSW46ITEsem9vbVRpbnRGYWRlT3V0OiExLGJvcmRlclNpemU6NCxzaG93TGVuczohMCxib3JkZXJDb2xvdXI6XCIjODg4XCIsbGVuc0JvcmRlclNpemU6MSxsZW5zQm9yZGVyQ29sb3VyOlwiIzAwMFwiLGxlbnNTaGFwZTpcInNxdWFyZVwiLHpvb21UeXBlOlwid2luZG93XCIsY29udGFpbkxlbnNab29tOiExLGxlbnNDb2xvdXI6XCJ3aGl0ZVwiLGxlbnNPcGFjaXR5OjAuNCxsZW5zem9vbTohMSx0aW50OiExLHRpbnRDb2xvdXI6XCIjMzMzXCIsdGludE9wYWNpdHk6MC40LGdhbGxlcnk6ITEsXHJcbmdhbGxlcnlBY3RpdmVDbGFzczpcInpvb21HYWxsZXJ5QWN0aXZlXCIsaW1hZ2VDcm9zc2ZhZGU6ITEsY29uc3RyYWluVHlwZTohMSxjb25zdHJhaW5TaXplOiExLGxvYWRpbmdJY29uOiExLGN1cnNvcjpcImRlZmF1bHRcIixyZXNwb25zaXZlOiEwLG9uQ29tcGxldGU6ZC5ub29wLG9uWm9vbWVkSW1hZ2VMb2FkZWQ6ZnVuY3Rpb24oKXt9LG9uSW1hZ2VTd2FwOmQubm9vcCxvbkltYWdlU3dhcENvbXBsZXRlOmQubm9vcH19KShqUXVlcnksd2luZG93LGRvY3VtZW50KTsiLCJjb25zdCBTVE9SRSA9IHtcclxuICAgIGFwaVVSTDogJ2h0dHBzOi8vZnVuaXR1cmUtc3RvcmUuaGVyb2t1YXBwLmNvbS92MS9hcGkvcHJvZHVjdHMnLFxyXG4gICAgZmlsdGVyUGFyYW06IHtcclxuICAgICAgICBjYXRlZ29yaWVzOiAnJyxcclxuICAgICAgICBjb2xvcnM6IFtdLFxyXG4gICAgICAgIG1pblByaWNlOiBudWxsLFxyXG4gICAgICAgIG1heFByaWNlOiBudWxsXHJcbiAgICB9LFxyXG4gICAgbG9hZGVyOiB7XHJcbiAgICAgICAgc2hvdzogKCkgPT4ge1xyXG4gICAgICAgICAgICAkKCcubG9hZGVyJykuY3NzKCdkaXNwbGF5JywgJ2ZsZXgnKS5oaWRlKCkuZmFkZUluKCk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBoaWRlOiAoKSA9PiB7XHJcbiAgICAgICAgICAgICQoJy5sb2FkZXInKS5mYWRlT3V0KCk7XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIGluaXQ6IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgIHRoaXMuaW5pdFNsaWRlKCk7XHJcbiAgICAgICAgdGhpcy5zaG93QmlnUHJvZHVjdFRodW1iKCk7XHJcbiAgICAgICAgdGhpcy5hZGRUb0NhcnRFdmVudCgpO1xyXG4gICAgICAgIHRoaXMucG9wdXBIYW5kbGUoKTtcclxuICAgICAgICB0aGlzLmJ1dHRvbkhhbmRsZSgpO1xyXG4gICAgICAgIHRoaXMuYWNjb3JkaW9uQ2F0ZWdvcnkoKTtcclxuICAgICAgICB0aGlzLmZpbHRlclByb2R1Y3QoKTtcclxuICAgICAgICB0aGlzLnNvcnRIYW5kbGUoKTtcclxuICAgICAgICB0aGlzLnNlYXJjaEhhbmRsZSgpO1xyXG4gICAgfSxcclxuICAgIGluaXRTbGlkZTogZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgJCgnLnNsaWRlJykuc2xpY2soe1xyXG4gICAgICAgICAgICBhcnJvd3M6IGZhbHNlLFxyXG4gICAgICAgICAgICBkb3RzOiB0cnVlLFxyXG4gICAgICAgICAgICBhdXRvcGxheTogdHJ1ZSxcclxuICAgICAgICAgICAgYXV0b3BsYXlTcGVlZDogMjAwMCxcclxuICAgICAgICAgICAgcHJldkFycm93OiAnPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3M9XCJzbGljay1wcmV2XCI+PGkgY2xhc3M9XCJmYXMgZmEtYXJyb3ctbGVmdFwiPjwvaT48L2J1dHRvbj4nLFxyXG4gICAgICAgICAgICBuZXh0QXJyb3c6ICc8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBjbGFzcz1cInNsaWNrLW5leHRcIj48aSBjbGFzcz1cImZhcyBmYS1hcnJvdy1yaWdodFwiPjwvaT48L2J1dHRvbj4nXHJcbiAgICAgICAgfSlcclxuXHJcbiAgICAgICAgJCgnI3NtYWxsUGljcycpLnNsaWNrKHtcclxuICAgICAgICAgICAgc2xpZGVzVG9TaG93OiA0LFxyXG4gICAgICAgICAgICBhcnJvd3M6IGZhbHNlLFxyXG4gICAgICAgICAgICBkb3RzOiBmYWxzZSxcclxuICAgICAgICAgICAgaW5maW5pdGU6IGZhbHNlLFxyXG4gICAgICAgICAgICBmb2N1c09uU2VsZWN0OiB0cnVlLFxyXG4gICAgICAgICAgICBwcmV2QXJyb3c6ICc8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBjbGFzcz1cInNsaWNrLXByZXZcIj48aSBjbGFzcz1cImZhcyBmYS1jaGV2cm9uLWxlZnRcIj48L2k+PC9idXR0b24+JyxcclxuICAgICAgICAgICAgbmV4dEFycm93OiAnPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3M9XCJzbGljay1uZXh0XCI+PGkgY2xhc3M9XCJmYXMgZmEtY2hldnJvbi1yaWdodFwiPjwvaT48L2J1dHRvbj4nXHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgJCgnI290aGVyUHJvZHVjdHMnKS5zbGljayh7XHJcbiAgICAgICAgICAgIHNsaWRlc1RvU2hvdzogNSxcclxuICAgICAgICAgICAgc2xpZGVzVG9TY3JvbGw6IDIsXHJcbiAgICAgICAgICAgIGFycm93czogdHJ1ZSxcclxuICAgICAgICAgICAgZG90czogZmFsc2UsXHJcbiAgICAgICAgICAgIGluZmluaXRlOiB0cnVlLFxyXG4gICAgICAgICAgICBmb2N1c09uU2VsZWN0OiB0cnVlLFxyXG4gICAgICAgICAgICBwcmV2QXJyb3c6ICc8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBjbGFzcz1cInNsaWNrLXByZXZcIj48aSBjbGFzcz1cImZhcyBmYS1jaGV2cm9uLWxlZnRcIj48L2k+PC9idXR0b24+JyxcclxuICAgICAgICAgICAgbmV4dEFycm93OiAnPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3M9XCJzbGljay1uZXh0XCI+PGkgY2xhc3M9XCJmYXMgZmEtY2hldnJvbi1yaWdodFwiPjwvaT48L2J1dHRvbj4nLFxyXG4gICAgICAgICAgICByZXNwb25zaXZlOiBbe1xyXG4gICAgICAgICAgICAgICAgYnJlYWtwb2ludDogNzY4LFxyXG4gICAgICAgICAgICAgICAgc2V0dGluZ3M6IHtcclxuICAgICAgICAgICAgICAgICAgICBzbGlkZXNUb1Nob3c6IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgc2xpZGVzVG9TY3JvbGw6IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgY2VudGVyTW9kZTogdHJ1ZSxcclxuICAgICAgICAgICAgICAgICAgICBpbmZpbml0ZTogdHJ1ZVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XVxyXG4gICAgICAgIH0pO1xyXG4gICAgfSxcclxuICAgIGluaXRab29tUHJvZHVjdDogZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgJCgnLnpvb20tdmlldycpLmVsZXZhdGVab29tKHtcclxuICAgICAgICAgICAgem9vbVR5cGU6ICdpbm5lcicsXHJcbiAgICAgICAgICAgIGN1cnNvcjogJ3pvb20taW4nXHJcbiAgICAgICAgfSk7XHJcbiAgICB9LFxyXG4gICAgc2hvd0JpZ1Byb2R1Y3RUaHVtYjogZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgY29uc3Qgc3JjRGVmYXVsdCA9ICQoJyNzbWFsbFBpY3MgLmRlZmF1bHQnKS5hdHRyKCdzcmMnKTtcclxuICAgICAgICBjb25zdCB6b29tRGVmYXVsdCA9ICQoJyNzbWFsbFBpY3MgLmRlZmF1bHQnKS5kYXRhKCd6b29tLWltYWdlJyk7XHJcbiAgICAgICAgem9vbURlZmF1bHQgJiYgU1RPUkUuaW5pdFpvb21Qcm9kdWN0KCk7XHJcbiAgICAgICAgJCgnI2JpZ1BpY3MgLnpvb20tdmlldycpLmF0dHIoJ3NyYycsIHNyY0RlZmF1bHQpO1xyXG4gICAgICAgICQoJyNiaWdQaWNzIC56b29tLXZpZXcnKS5kYXRhKCd6b29tLWltYWdlJywgem9vbURlZmF1bHQpO1xyXG4gICAgICAgICQoJyNzbWFsbFBpY3MgLnNsaWNrLXNsaWRlOmZpcnN0LWNoaWxkJykuYWRkQ2xhc3MoJ2FjdGl2ZScpO1xyXG5cclxuICAgICAgICAkKCcjc21hbGxQaWNzJykub24oJ2NsaWNrJywgJy5zbGljay1zbGlkZScsIGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAkKCcjc21hbGxQaWNzIC5zbGljay1zbGlkZS5hY3RpdmUnKS5yZW1vdmVDbGFzcygnYWN0aXZlJyk7XHJcbiAgICAgICAgICAgICQodGhpcykuYWRkQ2xhc3MoJ2FjdGl2ZScpO1xyXG4gICAgICAgICAgICAkKCcjYmlnUGljcyAuem9vbS12aWV3JykuYXR0cignc3JjJywgJCh0aGlzKS5hdHRyKCdzcmMnKSk7XHJcbiAgICAgICAgICAgIGlmICgkKHdpbmRvdykud2lkdGgoKSA+IDc2OCkge1xyXG4gICAgICAgICAgICAgICAgJCgnI2JpZ1BpY3MgLnpvb20tdmlldycpLmRhdGEoJ3pvb20taW1hZ2UnLCAkKHRoaXMpLmRhdGEoJ3pvb20taW1hZ2UnKSk7XHJcbiAgICAgICAgICAgICAgICAkKHRoaXMpLmRhdGEoJ3pvb20taW1hZ2UnKSA/IFNUT1JFLmluaXRab29tUHJvZHVjdCgpIDogJCgnLnpvb21Db250YWluZXInKS5oaWRlKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KVxyXG4gICAgfSxcclxuICAgIGFkZFRvQ2FydEV2ZW50OiBmdW5jdGlvbigpIHtcclxuICAgICAgICAkKCcjYWRkVG9DYXJ0JykuY2xpY2soKGUpID0+IHtcclxuICAgICAgICAgICAgJCgnLnBvcHVwJykuZmFkZUluKCk7XHJcbiAgICAgICAgfSlcclxuICAgIH0sXHJcbiAgICBwb3B1cEhhbmRsZTogZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgJCgnLnBvcHVwX19jbG9zZScpLmNsaWNrKGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAkKCcucG9wdXAnKS5mYWRlT3V0KCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9LFxyXG4gICAgYnV0dG9uSGFuZGxlOiBmdW5jdGlvbigpIHtcclxuICAgICAgICAkKCcjcGF5LXByb2Nlc3MnKS5jbGljayhmdW5jdGlvbihlKSB7XHJcbiAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICB9KVxyXG4gICAgICAgICQoJy5tZW51LWJ0bicpLmNsaWNrKGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAkKCcubmF2YmFyX19saXN0Jykuc2xpZGVUb2dnbGUoKTtcclxuICAgICAgICB9KVxyXG4gICAgICAgICQoJyNjb250aW51ZVNob3BwaW5nJykuY2xpY2soKCkgPT4ge1xyXG4gICAgICAgICAgICAkKCcucG9wdXAnKS5oaWRlKCk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIGlmICgkKHdpbmRvdykud2lkdGgoKSA8IDc2OCkge1xyXG4gICAgICAgICAgICAkKCcubmF2YmFyX19saW5rLmhhcy1jaGlsZCcpLmNsaWNrKGZ1bmN0aW9uKGUpIHtcclxuICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICAgICAgICAgICQodGhpcykubmV4dCgpLnNsaWRlVG9nZ2xlKCk7XHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIGFjY29yZGlvbkNhdGVnb3J5OiBmdW5jdGlvbigpIHtcclxuICAgICAgICBpZiAoJCh3aW5kb3cpLndpZHRoKCkgPCA3NjgpIHtcclxuICAgICAgICAgICAgJCgnLmNhdGVnb3J5X190aXRsZScpLm9uKCdjbGljaycsIGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAgICAgJCh0aGlzKS5uZXh0KCcuY2F0ZWdvcnlfX2NvbnRhaW5lcicpLnRvZ2dsZSgpO1xyXG4gICAgICAgICAgICAgICAgJCh0aGlzKS50b2dnbGVDbGFzcygnZXhwYW5kJyk7XHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIGdlbmVyYXRlSFRNTFByb2R1Y3Q6IGZ1bmN0aW9uKHByb2R1Y3QpIHtcclxuICAgICAgICBjb25zdCBodG1sUHJvZHVjdCA9IGA8ZGl2IGNsYXNzPVwiY29sLW1kLTQgcHJvZHVjdFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxmaWd1cmU+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9XCIvcHJvZHVjdHMvJHsgcHJvZHVjdC5faWQgfVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz1cInByb2R1Y3RfX2ltYWdlXCIgc3JjPVwiJHsgcHJvZHVjdC50aHVtYm5haWwgfVwiIGFsdD1cIlwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxmaWdjYXB0aW9uIGNsYXNzPVwicHJvZHVjdF9faW5mbyB0ZXh0LWNlbnRlclwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9XCJwcm9kdWN0X19uYW1lXCI+JHsgcHJvZHVjdC5uYW1lIH08L3A+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz1cInByb2R1Y3RfX29sZC1wcmljZVwiPiR7IHByb2R1Y3Qub2xkUHJpY2UgfHwgJyZuYnNwOycgfTwvcD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPVwicHJvZHVjdF9fcHJpY2VcIj4keyAgcHJvZHVjdC5wcmljZSB9PC9wPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2ZpZ2NhcHRpb24+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9maWd1cmU+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInRleHQtY2VudGVyXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9XCIvcHJvZHVjdHMvJHsgcHJvZHVjdC5faWQgfVwiIGNsYXNzPVwiYnRuIGJ0bi0yXCIgaWQ9XCIkeyBwcm9kdWN0Ll9pZCB9XCI+TVVBIE5HQVk8L2E+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5gO1xyXG4gICAgICAgICQoJy5wcm9kdWN0LWxpc3Q+LnJvdycpLmFwcGVuZChodG1sUHJvZHVjdCk7XHJcbiAgICB9LFxyXG4gICAgZmlsdGVyUHJvZHVjdDogZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgJCgnLmNhdGVnb3J5X19saXN0Jykub24oJ2NsaWNrJywgJy5jYXRlZ29yeV9faXRlbScsIChlKSA9PiB7XHJcbiAgICAgICAgICAgIGNvbnN0IF90aGlzID0gZS50YXJnZXQ7XHJcbiAgICAgICAgICAgICQoJy5jYXRlZ29yeV9faXRlbS5hY3RpdmUnKS5yZW1vdmVDbGFzcygnYWN0aXZlJyk7XHJcbiAgICAgICAgICAgICQoX3RoaXMpLmFkZENsYXNzKCdhY3RpdmUnKTtcclxuICAgICAgICAgICAgdGhpcy5nZXRGaWx0ZXJQYXJhbSgpO1xyXG4gICAgICAgICAgICB0aGlzLmZpbHRlclByb2R1Y3RBSkFYKCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgJCgnaW5wdXRbbmFtZT1cImNvbG9yXCJdJykub24oJ2NoYW5nZScsIChlKSA9PiB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmdldEZpbHRlclBhcmFtKCk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmZpbHRlclByb2R1Y3RBSkFYKCk7XHJcbiAgICAgICAgICAgIH0pLFxyXG4gICAgICAgICAgICAkKCcjcHJpY2VGaWx0ZXInKS5jbGljayhlID0+IHtcclxuICAgICAgICAgICAgICAgIHRoaXMuZ2V0RmlsdGVyUGFyYW0oKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuZmlsdGVyUHJvZHVjdEFKQVgoKTtcclxuICAgICAgICAgICAgfSlcclxuICAgIH0sXHJcbiAgICBnZXRGaWx0ZXJQYXJhbTogZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgdGhpcy5maWx0ZXJQYXJhbS5jYXRlZ29yaWVzID0gJCgnLmNhdGVnb3J5X19pdGVtLmFjdGl2ZScpLnRleHQoKSAhPT0gJ1ThuqV0IGPhuqMnID8gJCgnLmNhdGVnb3J5X19pdGVtLmFjdGl2ZScpLnRleHQoKSA6ICcnO1xyXG4gICAgICAgIHRoaXMuZmlsdGVyUGFyYW0uY29sb3JzID0gW107XHJcbiAgICAgICAgaWYgKCQoJ2lucHV0W25hbWU9XCJjb2xvclwiXTpjaGVja2VkJykubGVuZ3RoKSB7XHJcbiAgICAgICAgICAgIEFycmF5LmZyb20oJCgnaW5wdXRbbmFtZT1cImNvbG9yXCJdOmNoZWNrZWQnKSkuZm9yRWFjaChjaGVja0NvbG9yID0+IHtcclxuICAgICAgICAgICAgICAgIHRoaXMuZmlsdGVyUGFyYW0uY29sb3JzLnB1c2goJChjaGVja0NvbG9yKS5wYXJlbnQoKS5kYXRhKCdjb2xvcicpKTtcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5maWx0ZXJQYXJhbS5taW5QcmljZSA9ICQoJyNtaW5QcmljZScpLnZhbCgpO1xyXG4gICAgICAgIHRoaXMuZmlsdGVyUGFyYW0ubWF4UHJpY2UgPSAkKCcjbWF4UHJpY2UnKS52YWwoKTtcclxuICAgIH0sXHJcbiAgICBmaWx0ZXJQcm9kdWN0QUpBWDogZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgdGhpcy5sb2FkZXIuc2hvdygpO1xyXG4gICAgICAgICQuYWpheCh7XHJcbiAgICAgICAgICAgIHVybDogdGhpcy5hcGlVUkwsXHJcbiAgICAgICAgICAgIGRhdGE6IHRoaXMuZmlsdGVyUGFyYW1cclxuICAgICAgICB9KS5kb25lKGRhdGEgPT4ge1xyXG4gICAgICAgICAgICBpZiAoZGF0YS5sZW5ndGgpIHtcclxuICAgICAgICAgICAgICAgICQoJy5wcm9kdWN0LWxpc3Q+LnJvdycpLmh0bWwoJycpO1xyXG4gICAgICAgICAgICAgICAgZGF0YS5mb3JFYWNoKHByb2R1Y3QgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZ2VuZXJhdGVIVE1MUHJvZHVjdChwcm9kdWN0KTtcclxuICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAkKCcucHJvZHVjdC1saXN0Pi5yb3cnKS5odG1sKCcnKTtcclxuICAgICAgICAgICAgICAgICQoJy5wcm9kdWN0LWxpc3Q+LnJvdycpLmFwcGVuZCgnPHAgY2xhc3M9XCJtbC0zXCI+S2jDtG5nIHTDrG0gdGjhuqV5IHPhuqNuIHBo4bqpbTwvcD4nKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aGlzLmxvYWRlci5oaWRlKCk7XHJcbiAgICAgICAgfSlcclxuICAgIH0sXHJcbiAgICBzb3J0SGFuZGxlOiBmdW5jdGlvbigpIHtcclxuICAgICAgICAkKCcjc29ydCcpLmNoYW5nZShlID0+IHtcclxuICAgICAgICAgICAgY29uc3QgX3RoaXMgPSBlLnRhcmdldDtcclxuICAgICAgICAgICAgY29uc3QgdHlwZVNvcnQgPSAkKF90aGlzKS5maW5kKGBvcHRpb246c2VsZWN0ZWRgKS5kYXRhKCd0eXBlJyk7XHJcbiAgICAgICAgICAgIGNvbnN0IHBhcmFtID0gJChfdGhpcykudmFsKCk7XHJcbiAgICAgICAgICAgIHRoaXMuc29ydEFKQVgodHlwZVNvcnQsIHBhcmFtKTtcclxuICAgICAgICB9KVxyXG4gICAgfSxcclxuICAgIHNvcnRBSkFYOiBmdW5jdGlvbih0eXBlU29ydCwgcGFyYW0pIHtcclxuICAgICAgICB0aGlzLmxvYWRlci5zaG93KCk7XHJcbiAgICAgICAgbGV0IGRhdGFBSkFYID0ge307XHJcbiAgICAgICAgaWYgKHR5cGVTb3J0KSB7XHJcbiAgICAgICAgICAgIGRhdGFBSkFYW3R5cGVTb3J0XSA9IHBhcmFtO1xyXG4gICAgICAgIH1cclxuICAgICAgICAkLmFqYXgoe1xyXG4gICAgICAgICAgICB1cmw6IHRoaXMuYXBpVVJMLFxyXG4gICAgICAgICAgICBkYXRhOiBkYXRhQUpBWFxyXG4gICAgICAgIH0pLmRvbmUoZGF0YSA9PiB7XHJcbiAgICAgICAgICAgIGlmIChkYXRhLmxlbmd0aCkge1xyXG4gICAgICAgICAgICAgICAgJCgnLnByb2R1Y3QtbGlzdD4ucm93JykuaHRtbCgnJyk7XHJcbiAgICAgICAgICAgICAgICBkYXRhLmZvckVhY2gocHJvZHVjdCA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5nZW5lcmF0ZUhUTUxQcm9kdWN0KHByb2R1Y3QpO1xyXG4gICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgdGhpcy5sb2FkZXIuaGlkZSgpO1xyXG4gICAgICAgIH0pXHJcbiAgICB9LFxyXG4gICAgc2VhcmNoSGFuZGxlOiBmdW5jdGlvbigpIHtcclxuICAgICAgICAkKCcjc2VhcmNoQnRuJykuY2xpY2soZSA9PiB7XHJcbiAgICAgICAgICAgIGNvbnN0IHNlYXJjaEtleSA9ICQoJy5zZWFyY2gnKS52YWwoKTtcclxuICAgICAgICAgICAgdGhpcy5zZWFyY2hBSkFYKHNlYXJjaEtleSk7XHJcbiAgICAgICAgfSlcclxuICAgIH0sXHJcbiAgICBzZWFyY2hBSkFYOiBmdW5jdGlvbihzZWFyY2hLZXkpIHtcclxuICAgICAgICB0aGlzLmxvYWRlci5zaG93KCk7XHJcbiAgICAgICAgJC5hamF4KHtcclxuICAgICAgICAgICAgdXJsOiB0aGlzLmFwaVVSTCxcclxuICAgICAgICAgICAgZGF0YToge1xyXG4gICAgICAgICAgICAgICAgc2VhcmNoS2V5OiBzZWFyY2hLZXlcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pLmRvbmUoZGF0YSA9PiB7XHJcbiAgICAgICAgICAgIGlmIChkYXRhLmxlbmd0aCkge1xyXG4gICAgICAgICAgICAgICAgJCgnLnByb2R1Y3QtbGlzdD4ucm93JykuaHRtbCgnJyk7XHJcbiAgICAgICAgICAgICAgICBkYXRhLmZvckVhY2gocHJvZHVjdCA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5nZW5lcmF0ZUhUTUxQcm9kdWN0KHByb2R1Y3QpO1xyXG4gICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICQoJy5wcm9kdWN0LWxpc3Q+LnJvdycpLmh0bWwoJycpO1xyXG4gICAgICAgICAgICAgICAgJCgnLnByb2R1Y3QtbGlzdD4ucm93JykuYXBwZW5kKCc8cCBjbGFzcz1cIm1sLTNcIj5LaMO0bmcgdMOsbSB0aOG6pXkgc+G6o24gcGjhuqltPC9wPicpO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICB0aGlzLmxvYWRlci5oaWRlKCk7XHJcbiAgICAgICAgfSlcclxuICAgIH1cclxufVxyXG5cclxuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcIkRPTUNvbnRlbnRMb2FkZWRcIiwgZnVuY3Rpb24oKSB7XHJcbiAgICBTVE9SRS5pbml0KCk7XHJcbn0pOyJdfQ==
