const ADMIN = {
  init: function () {
    this.tabHandle();
    this.toggleDashBoard();
    this.initEditor();
    this.buttonHandle();
    this.imagesPicker();
    this.tableHandle();
  },
  tabHandle: function () {
    $('.manager__item').on('click', e => {
      const _this = e.target;
      if (!$(_this).hasClass('active')) {
        $('.manager__item').removeClass('active');
        $('.main-content.active').removeClass('active');
        $(_this).addClass('active');
        $(`.main-content[data-mapping="${$(_this).find('span').text()}"`).addClass('active');
      }
      console.log('object');
      this.tableHandle();
    });
  },
  toggleDashBoard: function () {
    $('#toggle-dashboard').click(e => {
      const _this = e.target;
      $(_this).toggleClass('active');
      if (!$(_this).hasClass('active')) {
        $('.sidebar').css('margin-left', '-200px');
        $('.main').css('margin-left', '0');
      } else {
        $('.sidebar').css('margin-left', '0');
        $('.main').css('margin-left', '200px');
      }
    });
  },
  initEditor: function () {
    tinymce.init({
      selector: 'textarea',
      height: 500,
      plugins: ["advlist autolink lists link image charmap print preview anchor", "searchreplace visualblocks code fullscreen", "insertdatetime media table contextmenu paste imagetools wordcount"],
      menubar: false,
      toolbar: "insertfile undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image",
      content_css: ['//fonts.googleapis.com/css?family=Lato:300,300i,400,400i', '//www.tinymce.com/css/codepen.min.css']
    });
  },
  buttonHandle: function () {
    $('.product-table').on('click', '.btn-admin-edit', e => {
      const idEdit = e.target.getAttribute('data-id');
      $('#modal-edit').show();
      $('body').css('overflow', 'hidden');
      $('#editAjax').data('id', idEdit);
      $.ajax({
        type: 'GET',
        url: `http://localhost:9000/v1/api/products/${idEdit}`
      }).done(data => {
        // console.log(data)
        this.editProductEvent(data);
      });
    });
    $('#addProductBtn').click(() => {
      $('#modal').show();
      $('body').css('overflow', 'hidden');
    });
    $('.close-modal').click(() => {
      $('.modal').hide();
      $('body').css('overflow', 'auto');
    });
    $('#updateRole').click(() => {
      $('#modal-account').show();
      $('body').css('overflow', 'hidden');
    });

    $('#editAjax').click(e => {
      const idEdit = $(e.target).data('id');
      const data = this.getInfoEdit(idEdit);
      let formData = new FormData();
      for (let key in data) {
        formData.append(key, data[key]);
      }
      $.ajax({
        url: 'http://localhost:9000/v1/api/products',
        processData: false,
        contentType: false,
        type: 'PUT',
        data: formData
      }).done(data => {
        $('.modal').hide();
        $('body').css('overflow', 'auto');
      }).fail(err => {
        console.log(err);
      });
    });
    $('#letsUpdateRole').click(() => {
      let apiURL = 'https://funiture-store.herokuapp.com/v1/api/user/role';
      $.ajax({
        url: apiURL,
        data: {
          email: $('#updateRoleOverlay #emailForRoleUpdate').val(),
          role: $('#updateRoleOverlay #roleForRoleUpdate').val()
        },
        type: 'PUT'
      }).done(data => {
        $('.modal').hide();
        $('body').css('overflow', 'auto');
        alert('done');
        $('.modal').hide();
        $('body').css('overflow', 'auto');
      }).fail(err => {
        alert('Something went wrong');
      });
    });
  },
  imagesPicker: function () {
    let imgDeleteArr = [];
    $('.img-upload-container').on('click', '.img-wrapper', e => {
      const _this = e.target;
      $(_this).parent().toggleClass('selected');
    });
  },
  editProductEvent: function (product) {
    this.setInfoEdit(product);
  },
  setInfoEdit: function (product) {
    const idModal = '#modal-edit';
    $(idModal).find('.img-upload-container').html('');
    product.images.forEach(element => {
      const thumbnailHTML = `<div class="img-wrapper"><img src="${element}" alt=""></div>`;
      $(idModal).find('.img-upload-container').append(thumbnailHTML);
    });

    $(idModal).find('.form-check-input').each((index, element) => {
      if (product.categories.includes($(element).val())) {
        $(element).prop('checked', true);
      }
    });

    $(idModal).find('.prodNameInput').val(product.name);
    $(idModal).find('.currPriceInput').val(product.price);
    $(idModal).find('.oldPriceInput').val(product.oldPrice);
    tinymce.get($(idModal).find('textarea').attr('id')).setContent(product.description);
    $(idModal).find('.present-img').attr('src', product.thumbnail);
  },
  getInfoEdit: function (id) {
    const idModal = '#modal-edit';
    let categories = [];
    $(idModal).find('.form-check-input').each((index, element) => {
      if ($(element).prop('checked')) {
        categories.push($(element).val());
      }
    });

    let deleteImageArr = [];
    $(idModal).find('.img-wrapper.selected').each((index, element) => {
      deleteImageArr.push($(element).children().attr('src'));
    });
    const formData = {
      productID: id,
      thumbnail: $('.avatarFileUpload')[0].files,
      name: $(idModal).find('.prodNameInput').val(),
      deletedImages: JSON.stringify(deleteImageArr),
      price: $(idModal).find('.currPriceInput').val(),
      oldPrice: $(idModal).find('.oldPriceInput').val(),
      description: tinymce.get($(idModal).find('textarea').attr('id')).getContent(),
      categories: categories,
      images: $('.thumnailFileUpload')[0].files
    };
    return formData;
  },
  requestEditServer: function () {},
  tableHandle: function () {
    $(function () {
      var onSampleResized = function (e) {
        var table = $(e.currentTarget); //reference to the resized table
      };

      $("table").colResizable({
        liveDrag: true,
        draggingClass: "dragging",
        onResize: onSampleResized
      });
    });
  }
};

document.addEventListener("DOMContentLoaded", function () {
  if ($('.page-admin').length) {
    ADMIN.init();
  }
});
/* jQuery elevateZoom 3.0.8 - Demo's and documentation: - www.elevateweb.co.uk/image-zoom - Copyright (c) 2013 Andrew Eades - www.elevateweb.co.uk - Dual licensed under the LGPL licenses. - http://en.wikipedia.org/wiki/MIT_License - http://en.wikipedia.org/wiki/GNU_General_Public_License */
"function" !== typeof Object.create && (Object.create = function (d) {
  function h() {}h.prototype = d;return new h();
});
(function (d, h, l, m) {
  var k = { init: function (b, a) {
      var c = this;c.elem = a;c.$elem = d(a);c.imageSrc = c.$elem.data("zoom-image") ? c.$elem.data("zoom-image") : c.$elem.attr("src");c.options = d.extend({}, d.fn.elevateZoom.options, b);c.options.tint && (c.options.lensColour = "none", c.options.lensOpacity = "1");"inner" == c.options.zoomType && (c.options.showLens = !1);c.$elem.parent().removeAttr("title").removeAttr("alt");c.zoomImage = c.imageSrc;c.refresh(1);d("#" + c.options.gallery + " a").click(function (a) {
        c.options.galleryActiveClass && (d("#" + c.options.gallery + " a").removeClass(c.options.galleryActiveClass), d(this).addClass(c.options.galleryActiveClass));a.preventDefault();d(this).data("zoom-image") ? c.zoomImagePre = d(this).data("zoom-image") : c.zoomImagePre = d(this).data("image");c.swaptheimage(d(this).data("image"), c.zoomImagePre);return !1;
      });
    }, refresh: function (b) {
      var a = this;setTimeout(function () {
        a.fetch(a.imageSrc);
      }, b || a.options.refresh);
    }, fetch: function (b) {
      var a = this,
          c = new Image();c.onload = function () {
        a.largeWidth = c.width;a.largeHeight = c.height;a.startZoom();a.currentImage = a.imageSrc;a.options.onZoomedImageLoaded(a.$elem);
      };c.src = b;
    }, startZoom: function () {
      var b = this;b.nzWidth = b.$elem.width();b.nzHeight = b.$elem.height();b.isWindowActive = !1;b.isLensActive = !1;b.isTintActive = !1;b.overWindow = !1;b.options.imageCrossfade && (b.zoomWrap = b.$elem.wrap('<div style="height:' + b.nzHeight + "px;width:" + b.nzWidth + 'px;" class="zoomWrapper" />'), b.$elem.css("position", "absolute"));b.zoomLock = 1;b.scrollingLock = !1;b.changeBgSize = !1;b.currentZoomLevel = b.options.zoomLevel;
      b.nzOffset = b.$elem.offset();b.widthRatio = b.largeWidth / b.currentZoomLevel / b.nzWidth;b.heightRatio = b.largeHeight / b.currentZoomLevel / b.nzHeight;"window" == b.options.zoomType && (b.zoomWindowStyle = "overflow: hidden;background-position: 0px 0px;text-align:center;background-color: " + String(b.options.zoomWindowBgColour) + ";width: " + String(b.options.zoomWindowWidth) + "px;height: " + String(b.options.zoomWindowHeight) + "px;float: left;background-size: " + b.largeWidth / b.currentZoomLevel + "px " + b.largeHeight / b.currentZoomLevel + "px;display: none;z-index:100;border: " + String(b.options.borderSize) + "px solid " + b.options.borderColour + ";background-repeat: no-repeat;position: absolute;");if ("inner" == b.options.zoomType) {
        var a = b.$elem.css("border-left-width");b.zoomWindowStyle = "overflow: hidden;margin-left: " + String(a) + ";margin-top: " + String(a) + ";background-position: 0px 0px;width: " + String(b.nzWidth) + "px;height: " + String(b.nzHeight) + "px;float: left;display: none;cursor:" + b.options.cursor + ";px solid " + b.options.borderColour + ";background-repeat: no-repeat;position: absolute;";
      }"window" == b.options.zoomType && (lensHeight = b.nzHeight < b.options.zoomWindowWidth / b.widthRatio ? b.nzHeight : String(b.options.zoomWindowHeight / b.heightRatio), lensWidth = b.largeWidth < b.options.zoomWindowWidth ? b.nzWidth : b.options.zoomWindowWidth / b.widthRatio, b.lensStyle = "background-position: 0px 0px;width: " + String(b.options.zoomWindowWidth / b.widthRatio) + "px;height: " + String(b.options.zoomWindowHeight / b.heightRatio) + "px;float: right;display: none;overflow: hidden;z-index: 999;-webkit-transform: translateZ(0);opacity:" + b.options.lensOpacity + ";filter: alpha(opacity = " + 100 * b.options.lensOpacity + "); zoom:1;width:" + lensWidth + "px;height:" + lensHeight + "px;background-color:" + b.options.lensColour + ";cursor:" + b.options.cursor + ";border: " + b.options.lensBorderSize + "px solid " + b.options.lensBorderColour + ";background-repeat: no-repeat;position: absolute;");b.tintStyle = "display: block;position: absolute;background-color: " + b.options.tintColour + ";filter:alpha(opacity=0);opacity: 0;width: " + b.nzWidth + "px;height: " + b.nzHeight + "px;";
      b.lensRound = "";"lens" == b.options.zoomType && (b.lensStyle = "background-position: 0px 0px;float: left;display: none;border: " + String(b.options.borderSize) + "px solid " + b.options.borderColour + ";width:" + String(b.options.lensSize) + "px;height:" + String(b.options.lensSize) + "px;background-repeat: no-repeat;position: absolute;");"round" == b.options.lensShape && (b.lensRound = "border-top-left-radius: " + String(b.options.lensSize / 2 + b.options.borderSize) + "px;border-top-right-radius: " + String(b.options.lensSize / 2 + b.options.borderSize) + "px;border-bottom-left-radius: " + String(b.options.lensSize / 2 + b.options.borderSize) + "px;border-bottom-right-radius: " + String(b.options.lensSize / 2 + b.options.borderSize) + "px;");b.zoomContainer = d('<div class="zoomContainer" style="-webkit-transform: translateZ(0);position:absolute;left:' + b.nzOffset.left + "px;top:" + b.nzOffset.top + "px;height:" + b.nzHeight + "px;width:" + b.nzWidth + 'px;"></div>');d("body").append(b.zoomContainer);b.options.containLensZoom && "lens" == b.options.zoomType && b.zoomContainer.css("overflow", "hidden");"inner" != b.options.zoomType && (b.zoomLens = d("<div class='zoomLens' style='" + b.lensStyle + b.lensRound + "'>&nbsp;</div>").appendTo(b.zoomContainer).click(function () {
        b.$elem.trigger("click");
      }), b.options.tint && (b.tintContainer = d("<div/>").addClass("tintContainer"), b.zoomTint = d("<div class='zoomTint' style='" + b.tintStyle + "'></div>"), b.zoomLens.wrap(b.tintContainer), b.zoomTintcss = b.zoomLens.after(b.zoomTint), b.zoomTintImage = d('<img style="position: absolute; left: 0px; top: 0px; max-width: none; width: ' + b.nzWidth + "px; height: " + b.nzHeight + 'px;" src="' + b.imageSrc + '">').appendTo(b.zoomLens).click(function () {
        b.$elem.trigger("click");
      })));isNaN(b.options.zoomWindowPosition) ? b.zoomWindow = d("<div style='z-index:999;left:" + b.windowOffsetLeft + "px;top:" + b.windowOffsetTop + "px;" + b.zoomWindowStyle + "' class='zoomWindow'>&nbsp;</div>").appendTo("body").click(function () {
        b.$elem.trigger("click");
      }) : b.zoomWindow = d("<div style='z-index:999;left:" + b.windowOffsetLeft + "px;top:" + b.windowOffsetTop + "px;" + b.zoomWindowStyle + "' class='zoomWindow'>&nbsp;</div>").appendTo(b.zoomContainer).click(function () {
        b.$elem.trigger("click");
      });b.zoomWindowContainer = d("<div/>").addClass("zoomWindowContainer").css("width", b.options.zoomWindowWidth);b.zoomWindow.wrap(b.zoomWindowContainer);"lens" == b.options.zoomType && b.zoomLens.css({ backgroundImage: "url('" + b.imageSrc + "')" });"window" == b.options.zoomType && b.zoomWindow.css({ backgroundImage: "url('" + b.imageSrc + "')" });"inner" == b.options.zoomType && b.zoomWindow.css({ backgroundImage: "url('" + b.imageSrc + "')" });b.$elem.bind("touchmove", function (a) {
        a.preventDefault();b.setPosition(a.originalEvent.touches[0] || a.originalEvent.changedTouches[0]);
      });b.zoomContainer.bind("touchmove", function (a) {
        "inner" == b.options.zoomType && b.showHideWindow("show");a.preventDefault();b.setPosition(a.originalEvent.touches[0] || a.originalEvent.changedTouches[0]);
      });b.zoomContainer.bind("touchend", function (a) {
        b.showHideWindow("hide");b.options.showLens && b.showHideLens("hide");b.options.tint && "inner" != b.options.zoomType && b.showHideTint("hide");
      });
      b.$elem.bind("touchend", function (a) {
        b.showHideWindow("hide");b.options.showLens && b.showHideLens("hide");b.options.tint && "inner" != b.options.zoomType && b.showHideTint("hide");
      });b.options.showLens && (b.zoomLens.bind("touchmove", function (a) {
        a.preventDefault();b.setPosition(a.originalEvent.touches[0] || a.originalEvent.changedTouches[0]);
      }), b.zoomLens.bind("touchend", function (a) {
        b.showHideWindow("hide");b.options.showLens && b.showHideLens("hide");b.options.tint && "inner" != b.options.zoomType && b.showHideTint("hide");
      }));
      b.$elem.bind("mousemove", function (a) {
        !1 == b.overWindow && b.setElements("show");if (b.lastX !== a.clientX || b.lastY !== a.clientY) b.setPosition(a), b.currentLoc = a;b.lastX = a.clientX;b.lastY = a.clientY;
      });b.zoomContainer.bind("mousemove", function (a) {
        !1 == b.overWindow && b.setElements("show");if (b.lastX !== a.clientX || b.lastY !== a.clientY) b.setPosition(a), b.currentLoc = a;b.lastX = a.clientX;b.lastY = a.clientY;
      });"inner" != b.options.zoomType && b.zoomLens.bind("mousemove", function (a) {
        if (b.lastX !== a.clientX || b.lastY !== a.clientY) b.setPosition(a), b.currentLoc = a;b.lastX = a.clientX;b.lastY = a.clientY;
      });b.options.tint && "inner" != b.options.zoomType && b.zoomTint.bind("mousemove", function (a) {
        if (b.lastX !== a.clientX || b.lastY !== a.clientY) b.setPosition(a), b.currentLoc = a;b.lastX = a.clientX;b.lastY = a.clientY;
      });"inner" == b.options.zoomType && b.zoomWindow.bind("mousemove", function (a) {
        if (b.lastX !== a.clientX || b.lastY !== a.clientY) b.setPosition(a), b.currentLoc = a;b.lastX = a.clientX;b.lastY = a.clientY;
      });b.zoomContainer.add(b.$elem).mouseenter(function () {
        !1 == b.overWindow && b.setElements("show");
      }).mouseleave(function () {
        b.scrollLock || b.setElements("hide");
      });"inner" != b.options.zoomType && b.zoomWindow.mouseenter(function () {
        b.overWindow = !0;b.setElements("hide");
      }).mouseleave(function () {
        b.overWindow = !1;
      });b.minZoomLevel = b.options.minZoomLevel ? b.options.minZoomLevel : 2 * b.options.scrollZoomIncrement;b.options.scrollZoom && b.zoomContainer.add(b.$elem).bind("mousewheel DOMMouseScroll MozMousePixelScroll", function (a) {
        b.scrollLock = !0;clearTimeout(d.data(this, "timer"));d.data(this, "timer", setTimeout(function () {
          b.scrollLock = !1;
        }, 250));var e = a.originalEvent.wheelDelta || -1 * a.originalEvent.detail;a.stopImmediatePropagation();a.stopPropagation();a.preventDefault();0 < e / 120 ? b.currentZoomLevel >= b.minZoomLevel && b.changeZoomLevel(b.currentZoomLevel - b.options.scrollZoomIncrement) : b.options.maxZoomLevel ? b.currentZoomLevel <= b.options.maxZoomLevel && b.changeZoomLevel(parseFloat(b.currentZoomLevel) + b.options.scrollZoomIncrement) : b.changeZoomLevel(parseFloat(b.currentZoomLevel) + b.options.scrollZoomIncrement);
        return !1;
      });
    }, setElements: function (b) {
      if (!this.options.zoomEnabled) return !1;"show" == b && this.isWindowSet && ("inner" == this.options.zoomType && this.showHideWindow("show"), "window" == this.options.zoomType && this.showHideWindow("show"), this.options.showLens && this.showHideLens("show"), this.options.tint && "inner" != this.options.zoomType && this.showHideTint("show"));"hide" == b && ("window" == this.options.zoomType && this.showHideWindow("hide"), this.options.tint || this.showHideWindow("hide"), this.options.showLens && this.showHideLens("hide"), this.options.tint && this.showHideTint("hide"));
    }, setPosition: function (b) {
      if (!this.options.zoomEnabled) return !1;this.nzHeight = this.$elem.height();this.nzWidth = this.$elem.width();this.nzOffset = this.$elem.offset();this.options.tint && "inner" != this.options.zoomType && (this.zoomTint.css({ top: 0 }), this.zoomTint.css({ left: 0 }));this.options.responsive && !this.options.scrollZoom && this.options.showLens && (lensHeight = this.nzHeight < this.options.zoomWindowWidth / this.widthRatio ? this.nzHeight : String(this.options.zoomWindowHeight / this.heightRatio), lensWidth = this.largeWidth < this.options.zoomWindowWidth ? this.nzWidth : this.options.zoomWindowWidth / this.widthRatio, this.widthRatio = this.largeWidth / this.nzWidth, this.heightRatio = this.largeHeight / this.nzHeight, "lens" != this.options.zoomType && (lensHeight = this.nzHeight < this.options.zoomWindowWidth / this.widthRatio ? this.nzHeight : String(this.options.zoomWindowHeight / this.heightRatio), lensWidth = this.options.zoomWindowWidth < this.options.zoomWindowWidth ? this.nzWidth : this.options.zoomWindowWidth / this.widthRatio, this.zoomLens.css("width", lensWidth), this.zoomLens.css("height", lensHeight), this.options.tint && (this.zoomTintImage.css("width", this.nzWidth), this.zoomTintImage.css("height", this.nzHeight))), "lens" == this.options.zoomType && this.zoomLens.css({ width: String(this.options.lensSize) + "px", height: String(this.options.lensSize) + "px" }));this.zoomContainer.css({ top: this.nzOffset.top });this.zoomContainer.css({ left: this.nzOffset.left });this.mouseLeft = parseInt(b.pageX - this.nzOffset.left);this.mouseTop = parseInt(b.pageY - this.nzOffset.top);"window" == this.options.zoomType && (this.Etoppos = this.mouseTop < this.zoomLens.height() / 2, this.Eboppos = this.mouseTop > this.nzHeight - this.zoomLens.height() / 2 - 2 * this.options.lensBorderSize, this.Eloppos = this.mouseLeft < 0 + this.zoomLens.width() / 2, this.Eroppos = this.mouseLeft > this.nzWidth - this.zoomLens.width() / 2 - 2 * this.options.lensBorderSize);"inner" == this.options.zoomType && (this.Etoppos = this.mouseTop < this.nzHeight / 2 / this.heightRatio, this.Eboppos = this.mouseTop > this.nzHeight - this.nzHeight / 2 / this.heightRatio, this.Eloppos = this.mouseLeft < 0 + this.nzWidth / 2 / this.widthRatio, this.Eroppos = this.mouseLeft > this.nzWidth - this.nzWidth / 2 / this.widthRatio - 2 * this.options.lensBorderSize);0 >= this.mouseLeft || 0 > this.mouseTop || this.mouseLeft > this.nzWidth || this.mouseTop > this.nzHeight ? this.setElements("hide") : (this.options.showLens && (this.lensLeftPos = String(this.mouseLeft - this.zoomLens.width() / 2), this.lensTopPos = String(this.mouseTop - this.zoomLens.height() / 2)), this.Etoppos && (this.lensTopPos = 0), this.Eloppos && (this.tintpos = this.lensLeftPos = this.windowLeftPos = 0), "window" == this.options.zoomType && (this.Eboppos && (this.lensTopPos = Math.max(this.nzHeight - this.zoomLens.height() - 2 * this.options.lensBorderSize, 0)), this.Eroppos && (this.lensLeftPos = this.nzWidth - this.zoomLens.width() - 2 * this.options.lensBorderSize)), "inner" == this.options.zoomType && (this.Eboppos && (this.lensTopPos = Math.max(this.nzHeight - 2 * this.options.lensBorderSize, 0)), this.Eroppos && (this.lensLeftPos = this.nzWidth - this.nzWidth - 2 * this.options.lensBorderSize)), "lens" == this.options.zoomType && (this.windowLeftPos = String(-1 * ((b.pageX - this.nzOffset.left) * this.widthRatio - this.zoomLens.width() / 2)), this.windowTopPos = String(-1 * ((b.pageY - this.nzOffset.top) * this.heightRatio - this.zoomLens.height() / 2)), this.zoomLens.css({ backgroundPosition: this.windowLeftPos + "px " + this.windowTopPos + "px" }), this.changeBgSize && (this.nzHeight > this.nzWidth ? ("lens" == this.options.zoomType && this.zoomLens.css({ "background-size": this.largeWidth / this.newvalueheight + "px " + this.largeHeight / this.newvalueheight + "px" }), this.zoomWindow.css({ "background-size": this.largeWidth / this.newvalueheight + "px " + this.largeHeight / this.newvalueheight + "px" })) : ("lens" == this.options.zoomType && this.zoomLens.css({ "background-size": this.largeWidth / this.newvaluewidth + "px " + this.largeHeight / this.newvaluewidth + "px" }), this.zoomWindow.css({ "background-size": this.largeWidth / this.newvaluewidth + "px " + this.largeHeight / this.newvaluewidth + "px" })), this.changeBgSize = !1), this.setWindowPostition(b)), this.options.tint && "inner" != this.options.zoomType && this.setTintPosition(b), "window" == this.options.zoomType && this.setWindowPostition(b), "inner" == this.options.zoomType && this.setWindowPostition(b), this.options.showLens && (this.fullwidth && "lens" != this.options.zoomType && (this.lensLeftPos = 0), this.zoomLens.css({ left: this.lensLeftPos + "px", top: this.lensTopPos + "px" })));
    }, showHideWindow: function (b) {
      "show" != b || this.isWindowActive || (this.options.zoomWindowFadeIn ? this.zoomWindow.stop(!0, !0, !1).fadeIn(this.options.zoomWindowFadeIn) : this.zoomWindow.show(), this.isWindowActive = !0);"hide" == b && this.isWindowActive && (this.options.zoomWindowFadeOut ? this.zoomWindow.stop(!0, !0).fadeOut(this.options.zoomWindowFadeOut) : this.zoomWindow.hide(), this.isWindowActive = !1);
    }, showHideLens: function (b) {
      "show" != b || this.isLensActive || (this.options.lensFadeIn ? this.zoomLens.stop(!0, !0, !1).fadeIn(this.options.lensFadeIn) : this.zoomLens.show(), this.isLensActive = !0);"hide" == b && this.isLensActive && (this.options.lensFadeOut ? this.zoomLens.stop(!0, !0).fadeOut(this.options.lensFadeOut) : this.zoomLens.hide(), this.isLensActive = !1);
    }, showHideTint: function (b) {
      "show" != b || this.isTintActive || (this.options.zoomTintFadeIn ? this.zoomTint.css({ opacity: this.options.tintOpacity }).animate().stop(!0, !0).fadeIn("slow") : (this.zoomTint.css({ opacity: this.options.tintOpacity }).animate(), this.zoomTint.show()), this.isTintActive = !0);"hide" == b && this.isTintActive && (this.options.zoomTintFadeOut ? this.zoomTint.stop(!0, !0).fadeOut(this.options.zoomTintFadeOut) : this.zoomTint.hide(), this.isTintActive = !1);
    }, setLensPostition: function (b) {},
    setWindowPostition: function (b) {
      var a = this;if (isNaN(a.options.zoomWindowPosition)) a.externalContainer = d("#" + a.options.zoomWindowPosition), a.externalContainerWidth = a.externalContainer.width(), a.externalContainerHeight = a.externalContainer.height(), a.externalContainerOffset = a.externalContainer.offset(), a.windowOffsetTop = a.externalContainerOffset.top, a.windowOffsetLeft = a.externalContainerOffset.left;else switch (a.options.zoomWindowPosition) {case 1:
          a.windowOffsetTop = a.options.zoomWindowOffety;a.windowOffsetLeft = +a.nzWidth;break;case 2:
          a.options.zoomWindowHeight > a.nzHeight && (a.windowOffsetTop = -1 * (a.options.zoomWindowHeight / 2 - a.nzHeight / 2), a.windowOffsetLeft = a.nzWidth);break;case 3:
          a.windowOffsetTop = a.nzHeight - a.zoomWindow.height() - 2 * a.options.borderSize;a.windowOffsetLeft = a.nzWidth;break;case 4:
          a.windowOffsetTop = a.nzHeight;a.windowOffsetLeft = a.nzWidth;break;case 5:
          a.windowOffsetTop = a.nzHeight;a.windowOffsetLeft = a.nzWidth - a.zoomWindow.width() - 2 * a.options.borderSize;break;case 6:
          a.options.zoomWindowHeight > a.nzHeight && (a.windowOffsetTop = a.nzHeight, a.windowOffsetLeft = -1 * (a.options.zoomWindowWidth / 2 - a.nzWidth / 2 + 2 * a.options.borderSize));break;case 7:
          a.windowOffsetTop = a.nzHeight;a.windowOffsetLeft = 0;break;case 8:
          a.windowOffsetTop = a.nzHeight;a.windowOffsetLeft = -1 * (a.zoomWindow.width() + 2 * a.options.borderSize);break;case 9:
          a.windowOffsetTop = a.nzHeight - a.zoomWindow.height() - 2 * a.options.borderSize;a.windowOffsetLeft = -1 * (a.zoomWindow.width() + 2 * a.options.borderSize);break;case 10:
          a.options.zoomWindowHeight > a.nzHeight && (a.windowOffsetTop = -1 * (a.options.zoomWindowHeight / 2 - a.nzHeight / 2), a.windowOffsetLeft = -1 * (a.zoomWindow.width() + 2 * a.options.borderSize));break;case 11:
          a.windowOffsetTop = a.options.zoomWindowOffety;a.windowOffsetLeft = -1 * (a.zoomWindow.width() + 2 * a.options.borderSize);break;case 12:
          a.windowOffsetTop = -1 * (a.zoomWindow.height() + 2 * a.options.borderSize);a.windowOffsetLeft = -1 * (a.zoomWindow.width() + 2 * a.options.borderSize);break;case 13:
          a.windowOffsetTop = -1 * (a.zoomWindow.height() + 2 * a.options.borderSize);a.windowOffsetLeft = 0;break;case 14:
          a.options.zoomWindowHeight > a.nzHeight && (a.windowOffsetTop = -1 * (a.zoomWindow.height() + 2 * a.options.borderSize), a.windowOffsetLeft = -1 * (a.options.zoomWindowWidth / 2 - a.nzWidth / 2 + 2 * a.options.borderSize));break;case 15:
          a.windowOffsetTop = -1 * (a.zoomWindow.height() + 2 * a.options.borderSize);a.windowOffsetLeft = a.nzWidth - a.zoomWindow.width() - 2 * a.options.borderSize;break;case 16:
          a.windowOffsetTop = -1 * (a.zoomWindow.height() + 2 * a.options.borderSize);a.windowOffsetLeft = a.nzWidth;break;default:
          a.windowOffsetTop = a.options.zoomWindowOffety, a.windowOffsetLeft = a.nzWidth;}a.isWindowSet = !0;a.windowOffsetTop += a.options.zoomWindowOffety;a.windowOffsetLeft += a.options.zoomWindowOffetx;a.zoomWindow.css({ top: a.windowOffsetTop });a.zoomWindow.css({ left: a.windowOffsetLeft });"inner" == a.options.zoomType && (a.zoomWindow.css({ top: 0 }), a.zoomWindow.css({ left: 0 }));a.windowLeftPos = String(-1 * ((b.pageX - a.nzOffset.left) * a.widthRatio - a.zoomWindow.width() / 2));a.windowTopPos = String(-1 * ((b.pageY - a.nzOffset.top) * a.heightRatio - a.zoomWindow.height() / 2));a.Etoppos && (a.windowTopPos = 0);a.Eloppos && (a.windowLeftPos = 0);a.Eboppos && (a.windowTopPos = -1 * (a.largeHeight / a.currentZoomLevel - a.zoomWindow.height()));a.Eroppos && (a.windowLeftPos = -1 * (a.largeWidth / a.currentZoomLevel - a.zoomWindow.width()));a.fullheight && (a.windowTopPos = 0);a.fullwidth && (a.windowLeftPos = 0);if ("window" == a.options.zoomType || "inner" == a.options.zoomType) 1 == a.zoomLock && (1 >= a.widthRatio && (a.windowLeftPos = 0), 1 >= a.heightRatio && (a.windowTopPos = 0)), a.largeHeight < a.options.zoomWindowHeight && (a.windowTopPos = 0), a.largeWidth < a.options.zoomWindowWidth && (a.windowLeftPos = 0), a.options.easing ? (a.xp || (a.xp = 0), a.yp || (a.yp = 0), a.loop || (a.loop = setInterval(function () {
        a.xp += (a.windowLeftPos - a.xp) / a.options.easingAmount;a.yp += (a.windowTopPos - a.yp) / a.options.easingAmount;a.scrollingLock ? (clearInterval(a.loop), a.xp = a.windowLeftPos, a.yp = a.windowTopPos, a.xp = -1 * ((b.pageX - a.nzOffset.left) * a.widthRatio - a.zoomWindow.width() / 2), a.yp = -1 * ((b.pageY - a.nzOffset.top) * a.heightRatio - a.zoomWindow.height() / 2), a.changeBgSize && (a.nzHeight > a.nzWidth ? ("lens" == a.options.zoomType && a.zoomLens.css({ "background-size": a.largeWidth / a.newvalueheight + "px " + a.largeHeight / a.newvalueheight + "px" }), a.zoomWindow.css({ "background-size": a.largeWidth / a.newvalueheight + "px " + a.largeHeight / a.newvalueheight + "px" })) : ("lens" != a.options.zoomType && a.zoomLens.css({ "background-size": a.largeWidth / a.newvaluewidth + "px " + a.largeHeight / a.newvalueheight + "px" }), a.zoomWindow.css({ "background-size": a.largeWidth / a.newvaluewidth + "px " + a.largeHeight / a.newvaluewidth + "px" })), a.changeBgSize = !1), a.zoomWindow.css({ backgroundPosition: a.windowLeftPos + "px " + a.windowTopPos + "px" }), a.scrollingLock = !1, a.loop = !1) : (a.changeBgSize && (a.nzHeight > a.nzWidth ? ("lens" == a.options.zoomType && a.zoomLens.css({ "background-size": a.largeWidth / a.newvalueheight + "px " + a.largeHeight / a.newvalueheight + "px" }), a.zoomWindow.css({ "background-size": a.largeWidth / a.newvalueheight + "px " + a.largeHeight / a.newvalueheight + "px" })) : ("lens" != a.options.zoomType && a.zoomLens.css({ "background-size": a.largeWidth / a.newvaluewidth + "px " + a.largeHeight / a.newvaluewidth + "px" }), a.zoomWindow.css({ "background-size": a.largeWidth / a.newvaluewidth + "px " + a.largeHeight / a.newvaluewidth + "px" })), a.changeBgSize = !1), a.zoomWindow.css({ backgroundPosition: a.xp + "px " + a.yp + "px" }));
      }, 16))) : (a.changeBgSize && (a.nzHeight > a.nzWidth ? ("lens" == a.options.zoomType && a.zoomLens.css({ "background-size": a.largeWidth / a.newvalueheight + "px " + a.largeHeight / a.newvalueheight + "px" }), a.zoomWindow.css({ "background-size": a.largeWidth / a.newvalueheight + "px " + a.largeHeight / a.newvalueheight + "px" })) : ("lens" == a.options.zoomType && a.zoomLens.css({ "background-size": a.largeWidth / a.newvaluewidth + "px " + a.largeHeight / a.newvaluewidth + "px" }), a.largeHeight / a.newvaluewidth < a.options.zoomWindowHeight ? a.zoomWindow.css({ "background-size": a.largeWidth / a.newvaluewidth + "px " + a.largeHeight / a.newvaluewidth + "px" }) : a.zoomWindow.css({ "background-size": a.largeWidth / a.newvalueheight + "px " + a.largeHeight / a.newvalueheight + "px" })), a.changeBgSize = !1), a.zoomWindow.css({ backgroundPosition: a.windowLeftPos + "px " + a.windowTopPos + "px" }));
    }, setTintPosition: function (b) {
      this.nzOffset = this.$elem.offset();this.tintpos = String(-1 * (b.pageX - this.nzOffset.left - this.zoomLens.width() / 2));this.tintposy = String(-1 * (b.pageY - this.nzOffset.top - this.zoomLens.height() / 2));this.Etoppos && (this.tintposy = 0);this.Eloppos && (this.tintpos = 0);this.Eboppos && (this.tintposy = -1 * (this.nzHeight - this.zoomLens.height() - 2 * this.options.lensBorderSize));this.Eroppos && (this.tintpos = -1 * (this.nzWidth - this.zoomLens.width() - 2 * this.options.lensBorderSize));
      this.options.tint && (this.fullheight && (this.tintposy = 0), this.fullwidth && (this.tintpos = 0), this.zoomTintImage.css({ left: this.tintpos + "px" }), this.zoomTintImage.css({ top: this.tintposy + "px" }));
    }, swaptheimage: function (b, a) {
      var c = this,
          e = new Image();c.options.loadingIcon && (c.spinner = d("<div style=\"background: url('" + c.options.loadingIcon + "') no-repeat center;height:" + c.nzHeight + "px;width:" + c.nzWidth + 'px;z-index: 2000;position: absolute; background-position: center center;"></div>'), c.$elem.after(c.spinner));
      c.options.onImageSwap(c.$elem);e.onload = function () {
        c.largeWidth = e.width;c.largeHeight = e.height;c.zoomImage = a;c.zoomWindow.css({ "background-size": c.largeWidth + "px " + c.largeHeight + "px" });c.zoomWindow.css({ "background-size": c.largeWidth + "px " + c.largeHeight + "px" });c.swapAction(b, a);
      };e.src = a;
    }, swapAction: function (b, a) {
      var c = this,
          e = new Image();e.onload = function () {
        c.nzHeight = e.height;c.nzWidth = e.width;c.options.onImageSwapComplete(c.$elem);c.doneCallback();
      };e.src = b;c.currentZoomLevel = c.options.zoomLevel;c.options.maxZoomLevel = !1;"lens" == c.options.zoomType && c.zoomLens.css({ backgroundImage: "url('" + a + "')" });"window" == c.options.zoomType && c.zoomWindow.css({ backgroundImage: "url('" + a + "')" });"inner" == c.options.zoomType && c.zoomWindow.css({ backgroundImage: "url('" + a + "')" });c.currentImage = a;if (c.options.imageCrossfade) {
        var f = c.$elem,
            g = f.clone();c.$elem.attr("src", b);c.$elem.after(g);g.stop(!0).fadeOut(c.options.imageCrossfade, function () {
          d(this).remove();
        });c.$elem.width("auto").removeAttr("width");c.$elem.height("auto").removeAttr("height");
        f.fadeIn(c.options.imageCrossfade);c.options.tint && "inner" != c.options.zoomType && (f = c.zoomTintImage, g = f.clone(), c.zoomTintImage.attr("src", a), c.zoomTintImage.after(g), g.stop(!0).fadeOut(c.options.imageCrossfade, function () {
          d(this).remove();
        }), f.fadeIn(c.options.imageCrossfade), c.zoomTint.css({ height: c.$elem.height() }), c.zoomTint.css({ width: c.$elem.width() }));c.zoomContainer.css("height", c.$elem.height());c.zoomContainer.css("width", c.$elem.width());"inner" != c.options.zoomType || c.options.constrainType || (c.zoomWrap.parent().css("height", c.$elem.height()), c.zoomWrap.parent().css("width", c.$elem.width()), c.zoomWindow.css("height", c.$elem.height()), c.zoomWindow.css("width", c.$elem.width()));
      } else c.$elem.attr("src", b), c.options.tint && (c.zoomTintImage.attr("src", a), c.zoomTintImage.attr("height", c.$elem.height()), c.zoomTintImage.css({ height: c.$elem.height() }), c.zoomTint.css({ height: c.$elem.height() })), c.zoomContainer.css("height", c.$elem.height()), c.zoomContainer.css("width", c.$elem.width());c.options.imageCrossfade && (c.zoomWrap.css("height", c.$elem.height()), c.zoomWrap.css("width", c.$elem.width()));c.options.constrainType && ("height" == c.options.constrainType && (c.zoomContainer.css("height", c.options.constrainSize), c.zoomContainer.css("width", "auto"), c.options.imageCrossfade ? (c.zoomWrap.css("height", c.options.constrainSize), c.zoomWrap.css("width", "auto"), c.constwidth = c.zoomWrap.width()) : (c.$elem.css("height", c.options.constrainSize), c.$elem.css("width", "auto"), c.constwidth = c.$elem.width()), "inner" == c.options.zoomType && (c.zoomWrap.parent().css("height", c.options.constrainSize), c.zoomWrap.parent().css("width", c.constwidth), c.zoomWindow.css("height", c.options.constrainSize), c.zoomWindow.css("width", c.constwidth)), c.options.tint && (c.tintContainer.css("height", c.options.constrainSize), c.tintContainer.css("width", c.constwidth), c.zoomTint.css("height", c.options.constrainSize), c.zoomTint.css("width", c.constwidth), c.zoomTintImage.css("height", c.options.constrainSize), c.zoomTintImage.css("width", c.constwidth))), "width" == c.options.constrainType && (c.zoomContainer.css("height", "auto"), c.zoomContainer.css("width", c.options.constrainSize), c.options.imageCrossfade ? (c.zoomWrap.css("height", "auto"), c.zoomWrap.css("width", c.options.constrainSize), c.constheight = c.zoomWrap.height()) : (c.$elem.css("height", "auto"), c.$elem.css("width", c.options.constrainSize), c.constheight = c.$elem.height()), "inner" == c.options.zoomType && (c.zoomWrap.parent().css("height", c.constheight), c.zoomWrap.parent().css("width", c.options.constrainSize), c.zoomWindow.css("height", c.constheight), c.zoomWindow.css("width", c.options.constrainSize)), c.options.tint && (c.tintContainer.css("height", c.constheight), c.tintContainer.css("width", c.options.constrainSize), c.zoomTint.css("height", c.constheight), c.zoomTint.css("width", c.options.constrainSize), c.zoomTintImage.css("height", c.constheight), c.zoomTintImage.css("width", c.options.constrainSize))));
    }, doneCallback: function () {
      this.options.loadingIcon && this.spinner.hide();this.nzOffset = this.$elem.offset();this.nzWidth = this.$elem.width();
      this.nzHeight = this.$elem.height();this.currentZoomLevel = this.options.zoomLevel;this.widthRatio = this.largeWidth / this.nzWidth;this.heightRatio = this.largeHeight / this.nzHeight;"window" == this.options.zoomType && (lensHeight = this.nzHeight < this.options.zoomWindowWidth / this.widthRatio ? this.nzHeight : String(this.options.zoomWindowHeight / this.heightRatio), lensWidth = this.options.zoomWindowWidth < this.options.zoomWindowWidth ? this.nzWidth : this.options.zoomWindowWidth / this.widthRatio, this.zoomLens && (this.zoomLens.css("width", lensWidth), this.zoomLens.css("height", lensHeight)));
    }, getCurrentImage: function () {
      return this.zoomImage;
    }, getGalleryList: function () {
      var b = this;b.gallerylist = [];b.options.gallery ? d("#" + b.options.gallery + " a").each(function () {
        var a = "";d(this).data("zoom-image") ? a = d(this).data("zoom-image") : d(this).data("image") && (a = d(this).data("image"));a == b.zoomImage ? b.gallerylist.unshift({ href: "" + a + "", title: d(this).find("img").attr("title") }) : b.gallerylist.push({ href: "" + a + "", title: d(this).find("img").attr("title") });
      }) : b.gallerylist.push({ href: "" + b.zoomImage + "", title: d(this).find("img").attr("title") });return b.gallerylist;
    }, changeZoomLevel: function (b) {
      this.scrollingLock = !0;this.newvalue = parseFloat(b).toFixed(2);newvalue = parseFloat(b).toFixed(2);maxheightnewvalue = this.largeHeight / (this.options.zoomWindowHeight / this.nzHeight * this.nzHeight);maxwidthtnewvalue = this.largeWidth / (this.options.zoomWindowWidth / this.nzWidth * this.nzWidth);"inner" != this.options.zoomType && (maxheightnewvalue <= newvalue ? (this.heightRatio = this.largeHeight / maxheightnewvalue / this.nzHeight, this.newvalueheight = maxheightnewvalue, this.fullheight = !0) : (this.heightRatio = this.largeHeight / newvalue / this.nzHeight, this.newvalueheight = newvalue, this.fullheight = !1), maxwidthtnewvalue <= newvalue ? (this.widthRatio = this.largeWidth / maxwidthtnewvalue / this.nzWidth, this.newvaluewidth = maxwidthtnewvalue, this.fullwidth = !0) : (this.widthRatio = this.largeWidth / newvalue / this.nzWidth, this.newvaluewidth = newvalue, this.fullwidth = !1), "lens" == this.options.zoomType && (maxheightnewvalue <= newvalue ? (this.fullwidth = !0, this.newvaluewidth = maxheightnewvalue) : (this.widthRatio = this.largeWidth / newvalue / this.nzWidth, this.newvaluewidth = newvalue, this.fullwidth = !1)));"inner" == this.options.zoomType && (maxheightnewvalue = parseFloat(this.largeHeight / this.nzHeight).toFixed(2), maxwidthtnewvalue = parseFloat(this.largeWidth / this.nzWidth).toFixed(2), newvalue > maxheightnewvalue && (newvalue = maxheightnewvalue), newvalue > maxwidthtnewvalue && (newvalue = maxwidthtnewvalue), maxheightnewvalue <= newvalue ? (this.heightRatio = this.largeHeight / newvalue / this.nzHeight, this.newvalueheight = newvalue > maxheightnewvalue ? maxheightnewvalue : newvalue, this.fullheight = !0) : (this.heightRatio = this.largeHeight / newvalue / this.nzHeight, this.newvalueheight = newvalue > maxheightnewvalue ? maxheightnewvalue : newvalue, this.fullheight = !1), maxwidthtnewvalue <= newvalue ? (this.widthRatio = this.largeWidth / newvalue / this.nzWidth, this.newvaluewidth = newvalue > maxwidthtnewvalue ? maxwidthtnewvalue : newvalue, this.fullwidth = !0) : (this.widthRatio = this.largeWidth / newvalue / this.nzWidth, this.newvaluewidth = newvalue, this.fullwidth = !1));scrcontinue = !1;"inner" == this.options.zoomType && (this.nzWidth > this.nzHeight && (this.newvaluewidth <= maxwidthtnewvalue ? scrcontinue = !0 : (scrcontinue = !1, this.fullwidth = this.fullheight = !0)), this.nzHeight > this.nzWidth && (this.newvaluewidth <= maxwidthtnewvalue ? scrcontinue = !0 : (scrcontinue = !1, this.fullwidth = this.fullheight = !0)));"inner" != this.options.zoomType && (scrcontinue = !0);scrcontinue && (this.zoomLock = 0, this.changeZoom = !0, this.options.zoomWindowHeight / this.heightRatio <= this.nzHeight && (this.currentZoomLevel = this.newvalueheight, "lens" != this.options.zoomType && "inner" != this.options.zoomType && (this.changeBgSize = !0, this.zoomLens.css({ height: String(this.options.zoomWindowHeight / this.heightRatio) + "px" })), "lens" == this.options.zoomType || "inner" == this.options.zoomType) && (this.changeBgSize = !0), this.options.zoomWindowWidth / this.widthRatio <= this.nzWidth && ("inner" != this.options.zoomType && this.newvaluewidth > this.newvalueheight && (this.currentZoomLevel = this.newvaluewidth), "lens" != this.options.zoomType && "inner" != this.options.zoomType && (this.changeBgSize = !0, this.zoomLens.css({ width: String(this.options.zoomWindowWidth / this.widthRatio) + "px" })), "lens" == this.options.zoomType || "inner" == this.options.zoomType) && (this.changeBgSize = !0), "inner" == this.options.zoomType && (this.changeBgSize = !0, this.nzWidth > this.nzHeight && (this.currentZoomLevel = this.newvaluewidth), this.nzHeight > this.nzWidth && (this.currentZoomLevel = this.newvaluewidth)));this.setPosition(this.currentLoc);
    }, closeAll: function () {
      self.zoomWindow && self.zoomWindow.hide();
      self.zoomLens && self.zoomLens.hide();self.zoomTint && self.zoomTint.hide();
    }, changeState: function (b) {
      "enable" == b && (this.options.zoomEnabled = !0);"disable" == b && (this.options.zoomEnabled = !1);
    } };d.fn.elevateZoom = function (b) {
    return this.each(function () {
      var a = Object.create(k);a.init(b, this);d.data(this, "elevateZoom", a);
    });
  };d.fn.elevateZoom.options = { zoomActivation: "hover", zoomEnabled: !0, preloading: 1, zoomLevel: 1, scrollZoom: !1, scrollZoomIncrement: 0.1, minZoomLevel: !1, maxZoomLevel: !1, easing: !1, easingAmount: 12, lensSize: 200,
    zoomWindowWidth: 400, zoomWindowHeight: 400, zoomWindowOffetx: 0, zoomWindowOffety: 0, zoomWindowPosition: 1, zoomWindowBgColour: "#fff", lensFadeIn: !1, lensFadeOut: !1, debug: !1, zoomWindowFadeIn: !1, zoomWindowFadeOut: !1, zoomWindowAlwaysShow: !1, zoomTintFadeIn: !1, zoomTintFadeOut: !1, borderSize: 4, showLens: !0, borderColour: "#888", lensBorderSize: 1, lensBorderColour: "#000", lensShape: "square", zoomType: "window", containLensZoom: !1, lensColour: "white", lensOpacity: 0.4, lenszoom: !1, tint: !1, tintColour: "#333", tintOpacity: 0.4, gallery: !1,
    galleryActiveClass: "zoomGalleryActive", imageCrossfade: !1, constrainType: !1, constrainSize: !1, loadingIcon: !1, cursor: "default", responsive: !0, onComplete: d.noop, onZoomedImageLoaded: function () {}, onImageSwap: d.noop, onImageSwapComplete: d.noop };
})(jQuery, window, document);
const STORE = {
    apiURL: 'https://funiture-store.herokuapp.com/v1/api/products',
    filterParam: {
        categories: '',
        colors: [],
        minPrice: null,
        maxPrice: null
    },
    loader: {
        show: () => {
            $('.loader').css('display', 'flex').hide().fadeIn();
        },
        hide: () => {
            $('.loader').fadeOut();
        }
    },
    init: function () {
        this.initSlide();
        this.showBigProductThumb();
        this.addToCartEvent();
        this.popupHandle();
        this.buttonHandle();
        this.accordionCategory();
        this.filterProduct();
        this.sortHandle();
        this.searchHandle();
    },
    initSlide: function () {
        $('.slide').slick({
            arrows: false,
            dots: true,
            autoplay: true,
            autoplaySpeed: 2000,
            prevArrow: '<button type="button" class="slick-prev"><i class="fas fa-arrow-left"></i></button>',
            nextArrow: '<button type="button" class="slick-next"><i class="fas fa-arrow-right"></i></button>'
        });

        $('#smallPics').slick({
            slidesToShow: 4,
            arrows: false,
            dots: false,
            infinite: false,
            focusOnSelect: true,
            prevArrow: '<button type="button" class="slick-prev"><i class="fas fa-chevron-left"></i></button>',
            nextArrow: '<button type="button" class="slick-next"><i class="fas fa-chevron-right"></i></button>'
        });
        $('#otherProducts').slick({
            slidesToShow: 5,
            slidesToScroll: 2,
            arrows: true,
            dots: false,
            infinite: true,
            focusOnSelect: true,
            prevArrow: '<button type="button" class="slick-prev"><i class="fas fa-chevron-left"></i></button>',
            nextArrow: '<button type="button" class="slick-next"><i class="fas fa-chevron-right"></i></button>',
            responsive: [{
                breakpoint: 768,
                settings: {
                    slidesToShow: 1,
                    slidesToScroll: 1,
                    centerMode: true,
                    infinite: true
                }
            }]
        });
    },
    initZoomProduct: function () {
        $('.zoom-view').elevateZoom({
            zoomType: 'inner',
            cursor: 'zoom-in'
        });
    },
    showBigProductThumb: function () {
        const srcDefault = $('#smallPics .default').attr('src');
        const zoomDefault = $('#smallPics .default').data('zoom-image');
        zoomDefault && STORE.initZoomProduct();
        $('#bigPics .zoom-view').attr('src', srcDefault);
        $('#bigPics .zoom-view').data('zoom-image', zoomDefault);
        $('#smallPics .slick-slide:first-child').addClass('active');

        $('#smallPics').on('click', '.slick-slide', function () {
            $('#smallPics .slick-slide.active').removeClass('active');
            $(this).addClass('active');
            $('#bigPics .zoom-view').attr('src', $(this).attr('src'));
            if ($(window).width() > 768) {
                $('#bigPics .zoom-view').data('zoom-image', $(this).data('zoom-image'));
                $(this).data('zoom-image') ? STORE.initZoomProduct() : $('.zoomContainer').hide();
            }
        });
    },
    addToCartEvent: function () {
        $('#addToCart').click(e => {
            $('.popup').fadeIn();
        });
    },
    popupHandle: function () {
        $('.popup__close').click(function () {
            $('.popup').fadeOut();
        });
    },
    buttonHandle: function () {
        $('#pay-process').click(function (e) {
            e.preventDefault();
        });
        $('.menu-btn').click(function () {
            $('.navbar__list').slideToggle();
        });
        $('#continueShopping').click(() => {
            $('.popup').hide();
        });

        if ($(window).width() < 768) {
            $('.navbar__link.has-child').click(function (e) {
                e.preventDefault();
                $(this).next().slideToggle();
            });
        }
    },
    accordionCategory: function () {
        if ($(window).width() < 768) {
            $('.category__title').on('click', function () {
                $(this).next('.category__container').toggle();
                $(this).toggleClass('expand');
            });
        }
    },
    generateHTMLProduct: function (product) {
        const htmlProduct = `<div class="col-md-4 product">
                                <figure>
                                    <a href="detail.html">
                                        <img class="product__image" src="${product.thumbnail}" alt="">
                                    </a>
                                    <figcaption class="product__info text-center">
                                        <p class="product__name">${product.name}</p>
                                        <p class="product__old-price">${product.oldPrice || '&nbsp;'}</p>
                                        <p class="product__price">${product.price}</p>
                                    </figcaption>
                                </figure>
                                <div class="text-center">
                                    <a href="detail.html" class="btn btn-2" id="${product._id}">MUA NGAY</a>
                                </div>
                            </div>`;
        $('.product-list>.row').append(htmlProduct);
    },
    filterProduct: function () {
        $('.category__list').on('click', '.category__item', e => {
            const _this = e.target;
            $('.category__item.active').removeClass('active');
            $(_this).addClass('active');
            this.getFilterParam();
            this.filterProductAJAX();
        });
        $('input[name="color"]').on('change', e => {
            this.getFilterParam();
            this.filterProductAJAX();
        }), $('#priceFilter').click(e => {
            this.getFilterParam();
            this.filterProductAJAX();
        });
    },
    getFilterParam: function () {
        this.filterParam.categories = $('.category__item.active').text() !== 'Tất cả' ? $('.category__item.active').text() : '';
        this.filterParam.colors = [];
        if ($('input[name="color"]:checked').length) {
            Array.from($('input[name="color"]:checked')).forEach(checkColor => {
                this.filterParam.colors.push($(checkColor).parent().data('color'));
            });
        }
        this.filterParam.minPrice = $('#minPrice').val();
        this.filterParam.maxPrice = $('#maxPrice').val();
    },
    filterProductAJAX: function () {
        this.loader.show();
        $.ajax({
            url: this.apiURL,
            data: this.filterParam
        }).done(data => {
            if (data.length) {
                $('.product-list>.row').html('');
                data.forEach(product => {
                    this.generateHTMLProduct(product);
                });
            } else {
                $('.product-list>.row').html('');
                $('.product-list>.row').append('<p class="ml-3">Không tìm thấy sản phẩm</p>');
            }
            this.loader.hide();
        });
    },
    sortHandle: function () {
        $('#sort').change(e => {
            const _this = e.target;
            const typeSort = $(_this).find(`option:selected`).data('type');
            const param = $(_this).val();
            this.sortAJAX(typeSort, param);
        });
    },
    sortAJAX: function (typeSort, param) {
        this.loader.show();
        let dataAJAX = {};
        if (typeSort) {
            dataAJAX[typeSort] = param;
        }
        $.ajax({
            url: this.apiURL,
            data: dataAJAX
        }).done(data => {
            if (data.length) {
                $('.product-list>.row').html('');
                data.forEach(product => {
                    this.generateHTMLProduct(product);
                });
            }

            this.loader.hide();
        });
    },
    searchHandle: function () {
        $('#searchBtn').click(e => {
            const searchKey = $('.search').val();
            this.searchAJAX(searchKey);
        });
    },
    searchAJAX: function (searchKey) {
        this.loader.show();
        $.ajax({
            url: this.apiURL,
            data: {
                searchKey: searchKey
            }
        }).done(data => {
            if (data.length) {
                $('.product-list>.row').html('');
                data.forEach(product => {
                    this.generateHTMLProduct(product);
                });
            } else {
                $('.product-list>.row').html('');
                $('.product-list>.row').append('<p class="ml-3">Không tìm thấy sản phẩm</p>');
            }

            this.loader.hide();
        });
    }
};

document.addEventListener("DOMContentLoaded", function () {
    STORE.init();
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFkbWluLmpzIiwiZWxldmF0ZVpvb20uanMiLCJtYWluLmpzIl0sIm5hbWVzIjpbIkFETUlOIiwiaW5pdCIsInRhYkhhbmRsZSIsInRvZ2dsZURhc2hCb2FyZCIsImluaXRFZGl0b3IiLCJidXR0b25IYW5kbGUiLCJpbWFnZXNQaWNrZXIiLCJ0YWJsZUhhbmRsZSIsIiQiLCJvbiIsImUiLCJfdGhpcyIsInRhcmdldCIsImhhc0NsYXNzIiwicmVtb3ZlQ2xhc3MiLCJhZGRDbGFzcyIsImZpbmQiLCJ0ZXh0IiwiY29uc29sZSIsImxvZyIsImNsaWNrIiwidG9nZ2xlQ2xhc3MiLCJjc3MiLCJ0aW55bWNlIiwic2VsZWN0b3IiLCJoZWlnaHQiLCJwbHVnaW5zIiwibWVudWJhciIsInRvb2xiYXIiLCJjb250ZW50X2NzcyIsImlkRWRpdCIsImdldEF0dHJpYnV0ZSIsInNob3ciLCJkYXRhIiwiYWpheCIsInR5cGUiLCJ1cmwiLCJkb25lIiwiZWRpdFByb2R1Y3RFdmVudCIsImhpZGUiLCJnZXRJbmZvRWRpdCIsImZvcm1EYXRhIiwiRm9ybURhdGEiLCJrZXkiLCJhcHBlbmQiLCJwcm9jZXNzRGF0YSIsImNvbnRlbnRUeXBlIiwiZmFpbCIsImVyciIsImFwaVVSTCIsImVtYWlsIiwidmFsIiwicm9sZSIsImFsZXJ0IiwiaW1nRGVsZXRlQXJyIiwicGFyZW50IiwicHJvZHVjdCIsInNldEluZm9FZGl0IiwiaWRNb2RhbCIsImh0bWwiLCJpbWFnZXMiLCJmb3JFYWNoIiwiZWxlbWVudCIsInRodW1ibmFpbEhUTUwiLCJlYWNoIiwiaW5kZXgiLCJjYXRlZ29yaWVzIiwiaW5jbHVkZXMiLCJwcm9wIiwibmFtZSIsInByaWNlIiwib2xkUHJpY2UiLCJnZXQiLCJhdHRyIiwic2V0Q29udGVudCIsImRlc2NyaXB0aW9uIiwidGh1bWJuYWlsIiwiaWQiLCJwdXNoIiwiZGVsZXRlSW1hZ2VBcnIiLCJjaGlsZHJlbiIsInByb2R1Y3RJRCIsImZpbGVzIiwiZGVsZXRlZEltYWdlcyIsIkpTT04iLCJzdHJpbmdpZnkiLCJnZXRDb250ZW50IiwicmVxdWVzdEVkaXRTZXJ2ZXIiLCJvblNhbXBsZVJlc2l6ZWQiLCJ0YWJsZSIsImN1cnJlbnRUYXJnZXQiLCJjb2xSZXNpemFibGUiLCJsaXZlRHJhZyIsImRyYWdnaW5nQ2xhc3MiLCJvblJlc2l6ZSIsImRvY3VtZW50IiwiYWRkRXZlbnRMaXN0ZW5lciIsImxlbmd0aCIsIk9iamVjdCIsImNyZWF0ZSIsImQiLCJoIiwicHJvdG90eXBlIiwibCIsIm0iLCJrIiwiYiIsImEiLCJjIiwiZWxlbSIsIiRlbGVtIiwiaW1hZ2VTcmMiLCJvcHRpb25zIiwiZXh0ZW5kIiwiZm4iLCJlbGV2YXRlWm9vbSIsInRpbnQiLCJsZW5zQ29sb3VyIiwibGVuc09wYWNpdHkiLCJ6b29tVHlwZSIsInNob3dMZW5zIiwicmVtb3ZlQXR0ciIsInpvb21JbWFnZSIsInJlZnJlc2giLCJnYWxsZXJ5IiwiZ2FsbGVyeUFjdGl2ZUNsYXNzIiwicHJldmVudERlZmF1bHQiLCJ6b29tSW1hZ2VQcmUiLCJzd2FwdGhlaW1hZ2UiLCJzZXRUaW1lb3V0IiwiZmV0Y2giLCJJbWFnZSIsIm9ubG9hZCIsImxhcmdlV2lkdGgiLCJ3aWR0aCIsImxhcmdlSGVpZ2h0Iiwic3RhcnRab29tIiwiY3VycmVudEltYWdlIiwib25ab29tZWRJbWFnZUxvYWRlZCIsInNyYyIsIm56V2lkdGgiLCJuekhlaWdodCIsImlzV2luZG93QWN0aXZlIiwiaXNMZW5zQWN0aXZlIiwiaXNUaW50QWN0aXZlIiwib3ZlcldpbmRvdyIsImltYWdlQ3Jvc3NmYWRlIiwiem9vbVdyYXAiLCJ3cmFwIiwiem9vbUxvY2siLCJzY3JvbGxpbmdMb2NrIiwiY2hhbmdlQmdTaXplIiwiY3VycmVudFpvb21MZXZlbCIsInpvb21MZXZlbCIsIm56T2Zmc2V0Iiwib2Zmc2V0Iiwid2lkdGhSYXRpbyIsImhlaWdodFJhdGlvIiwiem9vbVdpbmRvd1N0eWxlIiwiU3RyaW5nIiwiem9vbVdpbmRvd0JnQ29sb3VyIiwiem9vbVdpbmRvd1dpZHRoIiwiem9vbVdpbmRvd0hlaWdodCIsImJvcmRlclNpemUiLCJib3JkZXJDb2xvdXIiLCJjdXJzb3IiLCJsZW5zSGVpZ2h0IiwibGVuc1dpZHRoIiwibGVuc1N0eWxlIiwibGVuc0JvcmRlclNpemUiLCJsZW5zQm9yZGVyQ29sb3VyIiwidGludFN0eWxlIiwidGludENvbG91ciIsImxlbnNSb3VuZCIsImxlbnNTaXplIiwibGVuc1NoYXBlIiwiem9vbUNvbnRhaW5lciIsImxlZnQiLCJ0b3AiLCJjb250YWluTGVuc1pvb20iLCJ6b29tTGVucyIsImFwcGVuZFRvIiwidHJpZ2dlciIsInRpbnRDb250YWluZXIiLCJ6b29tVGludCIsInpvb21UaW50Y3NzIiwiYWZ0ZXIiLCJ6b29tVGludEltYWdlIiwiaXNOYU4iLCJ6b29tV2luZG93UG9zaXRpb24iLCJ6b29tV2luZG93Iiwid2luZG93T2Zmc2V0TGVmdCIsIndpbmRvd09mZnNldFRvcCIsInpvb21XaW5kb3dDb250YWluZXIiLCJiYWNrZ3JvdW5kSW1hZ2UiLCJiaW5kIiwic2V0UG9zaXRpb24iLCJvcmlnaW5hbEV2ZW50IiwidG91Y2hlcyIsImNoYW5nZWRUb3VjaGVzIiwic2hvd0hpZGVXaW5kb3ciLCJzaG93SGlkZUxlbnMiLCJzaG93SGlkZVRpbnQiLCJzZXRFbGVtZW50cyIsImxhc3RYIiwiY2xpZW50WCIsImxhc3RZIiwiY2xpZW50WSIsImN1cnJlbnRMb2MiLCJhZGQiLCJtb3VzZWVudGVyIiwibW91c2VsZWF2ZSIsInNjcm9sbExvY2siLCJtaW5ab29tTGV2ZWwiLCJzY3JvbGxab29tSW5jcmVtZW50Iiwic2Nyb2xsWm9vbSIsImNsZWFyVGltZW91dCIsIndoZWVsRGVsdGEiLCJkZXRhaWwiLCJzdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24iLCJzdG9wUHJvcGFnYXRpb24iLCJjaGFuZ2Vab29tTGV2ZWwiLCJtYXhab29tTGV2ZWwiLCJwYXJzZUZsb2F0Iiwiem9vbUVuYWJsZWQiLCJpc1dpbmRvd1NldCIsInJlc3BvbnNpdmUiLCJtb3VzZUxlZnQiLCJwYXJzZUludCIsInBhZ2VYIiwibW91c2VUb3AiLCJwYWdlWSIsIkV0b3Bwb3MiLCJFYm9wcG9zIiwiRWxvcHBvcyIsIkVyb3Bwb3MiLCJsZW5zTGVmdFBvcyIsImxlbnNUb3BQb3MiLCJ0aW50cG9zIiwid2luZG93TGVmdFBvcyIsIk1hdGgiLCJtYXgiLCJ3aW5kb3dUb3BQb3MiLCJiYWNrZ3JvdW5kUG9zaXRpb24iLCJuZXd2YWx1ZWhlaWdodCIsIm5ld3ZhbHVld2lkdGgiLCJzZXRXaW5kb3dQb3N0aXRpb24iLCJzZXRUaW50UG9zaXRpb24iLCJmdWxsd2lkdGgiLCJ6b29tV2luZG93RmFkZUluIiwic3RvcCIsImZhZGVJbiIsInpvb21XaW5kb3dGYWRlT3V0IiwiZmFkZU91dCIsImxlbnNGYWRlSW4iLCJsZW5zRmFkZU91dCIsInpvb21UaW50RmFkZUluIiwib3BhY2l0eSIsInRpbnRPcGFjaXR5IiwiYW5pbWF0ZSIsInpvb21UaW50RmFkZU91dCIsInNldExlbnNQb3N0aXRpb24iLCJleHRlcm5hbENvbnRhaW5lciIsImV4dGVybmFsQ29udGFpbmVyV2lkdGgiLCJleHRlcm5hbENvbnRhaW5lckhlaWdodCIsImV4dGVybmFsQ29udGFpbmVyT2Zmc2V0Iiwiem9vbVdpbmRvd09mZmV0eSIsInpvb21XaW5kb3dPZmZldHgiLCJmdWxsaGVpZ2h0IiwiZWFzaW5nIiwieHAiLCJ5cCIsImxvb3AiLCJzZXRJbnRlcnZhbCIsImVhc2luZ0Ftb3VudCIsImNsZWFySW50ZXJ2YWwiLCJ0aW50cG9zeSIsImxvYWRpbmdJY29uIiwic3Bpbm5lciIsIm9uSW1hZ2VTd2FwIiwic3dhcEFjdGlvbiIsIm9uSW1hZ2VTd2FwQ29tcGxldGUiLCJkb25lQ2FsbGJhY2siLCJmIiwiZyIsImNsb25lIiwicmVtb3ZlIiwiY29uc3RyYWluVHlwZSIsImNvbnN0cmFpblNpemUiLCJjb25zdHdpZHRoIiwiY29uc3RoZWlnaHQiLCJnZXRDdXJyZW50SW1hZ2UiLCJnZXRHYWxsZXJ5TGlzdCIsImdhbGxlcnlsaXN0IiwidW5zaGlmdCIsImhyZWYiLCJ0aXRsZSIsIm5ld3ZhbHVlIiwidG9GaXhlZCIsIm1heGhlaWdodG5ld3ZhbHVlIiwibWF4d2lkdGh0bmV3dmFsdWUiLCJzY3Jjb250aW51ZSIsImNoYW5nZVpvb20iLCJjbG9zZUFsbCIsInNlbGYiLCJjaGFuZ2VTdGF0ZSIsInpvb21BY3RpdmF0aW9uIiwicHJlbG9hZGluZyIsImRlYnVnIiwiem9vbVdpbmRvd0Fsd2F5c1Nob3ciLCJsZW5zem9vbSIsIm9uQ29tcGxldGUiLCJub29wIiwialF1ZXJ5Iiwid2luZG93IiwiU1RPUkUiLCJmaWx0ZXJQYXJhbSIsImNvbG9ycyIsIm1pblByaWNlIiwibWF4UHJpY2UiLCJsb2FkZXIiLCJpbml0U2xpZGUiLCJzaG93QmlnUHJvZHVjdFRodW1iIiwiYWRkVG9DYXJ0RXZlbnQiLCJwb3B1cEhhbmRsZSIsImFjY29yZGlvbkNhdGVnb3J5IiwiZmlsdGVyUHJvZHVjdCIsInNvcnRIYW5kbGUiLCJzZWFyY2hIYW5kbGUiLCJzbGljayIsImFycm93cyIsImRvdHMiLCJhdXRvcGxheSIsImF1dG9wbGF5U3BlZWQiLCJwcmV2QXJyb3ciLCJuZXh0QXJyb3ciLCJzbGlkZXNUb1Nob3ciLCJpbmZpbml0ZSIsImZvY3VzT25TZWxlY3QiLCJzbGlkZXNUb1Njcm9sbCIsImJyZWFrcG9pbnQiLCJzZXR0aW5ncyIsImNlbnRlck1vZGUiLCJpbml0Wm9vbVByb2R1Y3QiLCJzcmNEZWZhdWx0Iiwiem9vbURlZmF1bHQiLCJzbGlkZVRvZ2dsZSIsIm5leHQiLCJ0b2dnbGUiLCJnZW5lcmF0ZUhUTUxQcm9kdWN0IiwiaHRtbFByb2R1Y3QiLCJfaWQiLCJnZXRGaWx0ZXJQYXJhbSIsImZpbHRlclByb2R1Y3RBSkFYIiwiQXJyYXkiLCJmcm9tIiwiY2hlY2tDb2xvciIsImNoYW5nZSIsInR5cGVTb3J0IiwicGFyYW0iLCJzb3J0QUpBWCIsImRhdGFBSkFYIiwic2VhcmNoS2V5Iiwic2VhcmNoQUpBWCJdLCJtYXBwaW5ncyI6IkFB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QkFBS3FTLG1CQUFMLENBQXlCclMsT0FBekI7QUFDSCxpQkFGRDtBQUdILGFBTEQsTUFLTztBQUNIaEQsa0JBQUUsb0JBQUYsRUFBd0JtRCxJQUF4QixDQUE2QixFQUE3QjtBQUNBbkQsa0JBQUUsb0JBQUYsRUFBd0JvQyxNQUF4QixDQUErQiw2Q0FBL0I7QUFDSDs7QUFFRCxpQkFBS29SLE1BQUwsQ0FBWXpSLElBQVo7QUFDSCxTQWpCRDtBQWtCSDtBQXBQUyxDQUFkOztBQXVQQXdELFNBQVNDLGdCQUFULENBQTBCLGtCQUExQixFQUE4QyxZQUFXO0FBQ3JEMk4sVUFBTTFULElBQU47QUFDSCxDQUZEIiwiZmlsZSI6Im1haW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBBRE1JTiA9IHtcclxuICBpbml0OiBmdW5jdGlvbigpIHtcclxuICAgIHRoaXMudGFiSGFuZGxlKCk7XHJcbiAgICB0aGlzLnRvZ2dsZURhc2hCb2FyZCgpO1xyXG4gICAgdGhpcy5pbml0RWRpdG9yKCk7XHJcbiAgICB0aGlzLmJ1dHRvbkhhbmRsZSgpO1xyXG4gICAgdGhpcy5pbWFnZXNQaWNrZXIoKTtcclxuICAgIHRoaXMudGFibGVIYW5kbGUoKTtcclxuICB9LFxyXG4gIHRhYkhhbmRsZTogZnVuY3Rpb24oKSB7XHJcbiAgICAkKCcubWFuYWdlcl9faXRlbScpLm9uKCdjbGljaycsIChlKSA9PiB7XHJcbiAgICAgIGNvbnN0IF90aGlzID0gZS50YXJnZXQ7XHJcbiAgICAgIGlmICghJChfdGhpcykuaGFzQ2xhc3MoJ2FjdGl2ZScpKSB7XHJcbiAgICAgICAgJCgnLm1hbmFnZXJfX2l0ZW0nKS5yZW1vdmVDbGFzcygnYWN0aXZlJyk7XHJcbiAgICAgICAgJCgnLm1haW4tY29udGVudC5hY3RpdmUnKS5yZW1vdmVDbGFzcygnYWN0aXZlJyk7XHJcbiAgICAgICAgJChfdGhpcykuYWRkQ2xhc3MoJ2FjdGl2ZScpO1xyXG4gICAgICAgICQoYC5tYWluLWNvbnRlbnRbZGF0YS1tYXBwaW5nPVwiJHskKF90aGlzKS5maW5kKCdzcGFuJykudGV4dCgpfVwiYCkuYWRkQ2xhc3MoJ2FjdGl2ZScpO1xyXG4gICAgICB9XHJcbiAgICAgIGNvbnNvbGUubG9nKCdvYmplY3QnKVxyXG4gICAgICB0aGlzLnRhYmxlSGFuZGxlKCk7XHJcbiAgICB9KVxyXG4gIH0sXHJcbiAgdG9nZ2xlRGFzaEJvYXJkOiBmdW5jdGlvbigpIHtcclxuICAgICQoJyN0b2dnbGUtZGFzaGJvYXJkJykuY2xpY2soKGUpID0+IHtcclxuICAgICAgY29uc3QgX3RoaXMgPSBlLnRhcmdldDtcclxuICAgICAgJChfdGhpcykudG9nZ2xlQ2xhc3MoJ2FjdGl2ZScpO1xyXG4gICAgICBpZiAoISQoX3RoaXMpLmhhc0NsYXNzKCdhY3RpdmUnKSkge1xyXG4gICAgICAgICQoJy5zaWRlYmFyJykuY3NzKCdtYXJnaW4tbGVmdCcsICctMjAwcHgnKTtcclxuICAgICAgICAkKCcubWFpbicpLmNzcygnbWFyZ2luLWxlZnQnLCAnMCcpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgICQoJy5zaWRlYmFyJykuY3NzKCdtYXJnaW4tbGVmdCcsICcwJyk7XHJcbiAgICAgICAgJCgnLm1haW4nKS5jc3MoJ21hcmdpbi1sZWZ0JywgJzIwMHB4Jyk7XHJcbiAgICAgIH1cclxuICAgIH0pXHJcbiAgfSxcclxuICBpbml0RWRpdG9yOiBmdW5jdGlvbigpIHtcclxuICAgIHRpbnltY2UuaW5pdCh7XHJcbiAgICAgIHNlbGVjdG9yOiAndGV4dGFyZWEnLFxyXG4gICAgICBoZWlnaHQ6IDUwMCxcclxuICAgICAgcGx1Z2luczogW1xyXG4gICAgICAgIFwiYWR2bGlzdCBhdXRvbGluayBsaXN0cyBsaW5rIGltYWdlIGNoYXJtYXAgcHJpbnQgcHJldmlldyBhbmNob3JcIixcclxuICAgICAgICBcInNlYXJjaHJlcGxhY2UgdmlzdWFsYmxvY2tzIGNvZGUgZnVsbHNjcmVlblwiLFxyXG4gICAgICAgIFwiaW5zZXJ0ZGF0ZXRpbWUgbWVkaWEgdGFibGUgY29udGV4dG1lbnUgcGFzdGUgaW1hZ2V0b29scyB3b3JkY291bnRcIlxyXG4gICAgICBdLFxyXG4gICAgICBtZW51YmFyOiBmYWxzZSxcclxuICAgICAgdG9vbGJhcjogXCJpbnNlcnRmaWxlIHVuZG8gcmVkbyB8IHN0eWxlc2VsZWN0IHwgYm9sZCBpdGFsaWMgfCBhbGlnbmxlZnQgYWxpZ25jZW50ZXIgYWxpZ25yaWdodCBhbGlnbmp1c3RpZnkgfCBidWxsaXN0IG51bWxpc3Qgb3V0ZGVudCBpbmRlbnQgfCBsaW5rIGltYWdlXCIsXHJcbiAgICAgIGNvbnRlbnRfY3NzOiBbXHJcbiAgICAgICAgJy8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1MYXRvOjMwMCwzMDBpLDQwMCw0MDBpJyxcclxuICAgICAgICAnLy93d3cudGlueW1jZS5jb20vY3NzL2NvZGVwZW4ubWluLmNzcydcclxuICAgICAgXVxyXG4gICAgfSk7XHJcbiAgfSxcclxuICBidXR0b25IYW5kbGU6IGZ1bmN0aW9uKCkge1xyXG4gICAgJCgnLnByb2R1Y3QtdGFibGUnKS5vbignY2xpY2snLCAnLmJ0bi1hZG1pbi1lZGl0JywgKGUpID0+IHtcclxuICAgICAgY29uc3QgaWRFZGl0ID0gZS50YXJnZXQuZ2V0QXR0cmlidXRlKCdkYXRhLWlkJyk7XHJcbiAgICAgICQoJyNtb2RhbC1lZGl0Jykuc2hvdygpO1xyXG4gICAgICAkKCdib2R5JykuY3NzKCdvdmVyZmxvdycsICdoaWRkZW4nKTtcclxuICAgICAgJCgnI2VkaXRBamF4JykuZGF0YSgnaWQnLCBpZEVkaXQpO1xyXG4gICAgICAkLmFqYXgoe1xyXG4gICAgICAgIHR5cGU6ICdHRVQnLFxyXG4gICAgICAgIHVybDogYGh0dHA6Ly9sb2NhbGhvc3Q6OTAwMC92MS9hcGkvcHJvZHVjdHMvJHsgaWRFZGl0IH1gXHJcbiAgICAgIH0pLmRvbmUoZGF0YSA9PiB7XHJcbiAgICAgICAgLy8gY29uc29sZS5sb2coZGF0YSlcclxuICAgICAgICB0aGlzLmVkaXRQcm9kdWN0RXZlbnQoZGF0YSk7XHJcbiAgICAgIH0pXHJcbiAgICB9KVxyXG4gICAgJCgnI2FkZFByb2R1Y3RCdG4nKS5jbGljaygoKSA9PiB7XHJcbiAgICAgICQoJyNtb2RhbCcpLnNob3coKTtcclxuICAgICAgJCgnYm9keScpLmNzcygnb3ZlcmZsb3cnLCAnaGlkZGVuJyk7XHJcbiAgICB9KVxyXG4gICAgJCgnLmNsb3NlLW1vZGFsJykuY2xpY2soKCkgPT4ge1xyXG4gICAgICAkKCcubW9kYWwnKS5oaWRlKCk7XHJcbiAgICAgICQoJ2JvZHknKS5jc3MoJ292ZXJmbG93JywgJ2F1dG8nKTtcclxuICAgIH0pO1xyXG4gICAgJCgnI3VwZGF0ZVJvbGUnKS5jbGljaygoKSA9PiB7XHJcbiAgICAgICQoJyNtb2RhbC1hY2NvdW50Jykuc2hvdygpO1xyXG4gICAgICAkKCdib2R5JykuY3NzKCdvdmVyZmxvdycsICdoaWRkZW4nKTtcclxuICAgIH0pXHJcblxyXG4gICAgJCgnI2VkaXRBamF4JykuY2xpY2soKGUpID0+IHtcclxuICAgICAgY29uc3QgaWRFZGl0ID0gJChlLnRhcmdldCkuZGF0YSgnaWQnKTtcclxuICAgICAgY29uc3QgZGF0YSA9IHRoaXMuZ2V0SW5mb0VkaXQoaWRFZGl0KTtcclxuICAgICAgbGV0IGZvcm1EYXRhID0gbmV3IEZvcm1EYXRhKCk7XHJcbiAgICAgIGZvciAobGV0IGtleSBpbiBkYXRhKSB7XHJcbiAgICAgICAgZm9ybURhdGEuYXBwZW5kKGtleSwgZGF0YVtrZXldKTtcclxuICAgICAgfVxyXG4gICAgICAkLmFqYXgoe1xyXG4gICAgICAgIHVybDogJ2h0dHA6Ly9sb2NhbGhvc3Q6OTAwMC92MS9hcGkvcHJvZHVjdHMnLFxyXG4gICAgICAgIHByb2Nlc3NEYXRhOiBmYWxzZSxcclxuICAgICAgICBjb250ZW50VHlwZTogZmFsc2UsXHJcbiAgICAgICAgdHlwZTogJ1BVVCcsXHJcbiAgICAgICAgZGF0YTogZm9ybURhdGFcclxuICAgICAgfSkuZG9uZShkYXRhID0+IHtcclxuICAgICAgICAkKCcubW9kYWwnKS5oaWRlKCk7XHJcbiAgICAgICAgJCgnYm9keScpLmNzcygnb3ZlcmZsb3cnLCAnYXV0bycpO1xyXG4gICAgICB9KS5mYWlsKGVyciA9PiB7XHJcbiAgICAgICAgY29uc29sZS5sb2coZXJyKTtcclxuICAgICAgfSlcclxuXHJcbiAgICB9KVxyXG4gICAgJCgnI2xldHNVcGRhdGVSb2xlJykuY2xpY2soKCkgPT4ge1xyXG4gICAgICBsZXQgYXBpVVJMID0gJ2h0dHBzOi8vZnVuaXR1cmUtc3RvcmUuaGVyb2t1YXBwLmNvbS92MS9hcGkvdXNlci9yb2xlJ1xyXG4gICAgICAkLmFqYXgoe1xyXG4gICAgICAgIHVybDogYXBpVVJMLFxyXG4gICAgICAgIGRhdGE6IHtcclxuICAgICAgICAgIGVtYWlsOiAkKCcjdXBkYXRlUm9sZU92ZXJsYXkgI2VtYWlsRm9yUm9sZVVwZGF0ZScpLnZhbCgpLFxyXG4gICAgICAgICAgcm9sZTogJCgnI3VwZGF0ZVJvbGVPdmVybGF5ICNyb2xlRm9yUm9sZVVwZGF0ZScpLnZhbCgpXHJcbiAgICAgICAgfSxcclxuICAgICAgICB0eXBlOiAnUFVUJ1xyXG4gICAgICB9KS5kb25lKGRhdGEgPT4ge1xyXG4gICAgICAgICQoJy5tb2RhbCcpLmhpZGUoKTtcclxuICAgICAgICAkKCdib2R5JykuY3NzKCdvdmVyZmxvdycsICdhdXRvJyk7XHJcbiAgICAgICAgYWxlcnQoJ2RvbmUnKTtcclxuICAgICAgICAkKCcubW9kYWwnKS5oaWRlKCk7XHJcbiAgICAgICAgJCgnYm9keScpLmNzcygnb3ZlcmZsb3cnLCAnYXV0bycpO1xyXG4gICAgICB9KS5mYWlsKGVyciA9PiB7XHJcbiAgICAgICAgYWxlcnQoJ1NvbWV0aGluZyB3ZW50IHdyb25nJyk7XHJcbiAgICAgIH0pXHJcbiAgICB9KVxyXG4gIH0sXHJcbiAgaW1hZ2VzUGlja2VyOiBmdW5jdGlvbigpIHtcclxuICAgIGxldCBpbWdEZWxldGVBcnIgPSBbXTtcclxuICAgICQoJy5pbWctdXBsb2FkLWNvbnRhaW5lcicpLm9uKCdjbGljaycsICcuaW1nLXdyYXBwZXInLCBlID0+IHtcclxuICAgICAgY29uc3QgX3RoaXMgPSBlLnRhcmdldDtcclxuICAgICAgJChfdGhpcykucGFyZW50KCkudG9nZ2xlQ2xhc3MoJ3NlbGVjdGVkJyk7XHJcbiAgICB9KVxyXG4gIH0sXHJcbiAgZWRpdFByb2R1Y3RFdmVudDogZnVuY3Rpb24ocHJvZHVjdCkge1xyXG4gICAgdGhpcy5zZXRJbmZvRWRpdChwcm9kdWN0KTtcclxuICB9LFxyXG4gIHNldEluZm9FZGl0OiBmdW5jdGlvbihwcm9kdWN0KSB7XHJcbiAgICBjb25zdCBpZE1vZGFsID0gJyNtb2RhbC1lZGl0JztcclxuICAgICQoaWRNb2RhbCkuZmluZCgnLmltZy11cGxvYWQtY29udGFpbmVyJykuaHRtbCgnJyk7XHJcbiAgICBwcm9kdWN0LmltYWdlcy5mb3JFYWNoKGVsZW1lbnQgPT4ge1xyXG4gICAgICBjb25zdCB0aHVtYm5haWxIVE1MID0gYDxkaXYgY2xhc3M9XCJpbWctd3JhcHBlclwiPjxpbWcgc3JjPVwiJHsgZWxlbWVudCB9XCIgYWx0PVwiXCI+PC9kaXY+YDtcclxuICAgICAgJChpZE1vZGFsKS5maW5kKCcuaW1nLXVwbG9hZC1jb250YWluZXInKS5hcHBlbmQodGh1bWJuYWlsSFRNTCk7XHJcblxyXG4gICAgfSk7XHJcblxyXG4gICAgJChpZE1vZGFsKS5maW5kKCcuZm9ybS1jaGVjay1pbnB1dCcpLmVhY2goKGluZGV4LCBlbGVtZW50KSA9PiB7XHJcbiAgICAgIGlmIChwcm9kdWN0LmNhdGVnb3JpZXMuaW5jbHVkZXMoJChlbGVtZW50KS52YWwoKSkpIHtcclxuICAgICAgICAkKGVsZW1lbnQpLnByb3AoJ2NoZWNrZWQnLCB0cnVlKTtcclxuICAgICAgfVxyXG4gICAgfSlcclxuXHJcbiAgICAkKGlkTW9kYWwpLmZpbmQoJy5wcm9kTmFtZUlucHV0JykudmFsKHByb2R1Y3QubmFtZSk7XHJcbiAgICAkKGlkTW9kYWwpLmZpbmQoJy5jdXJyUHJpY2VJbnB1dCcpLnZhbChwcm9kdWN0LnByaWNlKTtcclxuICAgICQoaWRNb2RhbCkuZmluZCgnLm9sZFByaWNlSW5wdXQnKS52YWwocHJvZHVjdC5vbGRQcmljZSk7XHJcbiAgICB0aW55bWNlLmdldCgkKGlkTW9kYWwpLmZpbmQoJ3RleHRhcmVhJykuYXR0cignaWQnKSkuc2V0Q29udGVudChwcm9kdWN0LmRlc2NyaXB0aW9uKTtcclxuICAgICQoaWRNb2RhbCkuZmluZCgnLnByZXNlbnQtaW1nJykuYXR0cignc3JjJywgcHJvZHVjdC50aHVtYm5haWwpO1xyXG4gIH0sXHJcbiAgZ2V0SW5mb0VkaXQ6IGZ1bmN0aW9uKGlkKSB7XHJcbiAgICBjb25zdCBpZE1vZGFsID0gJyNtb2RhbC1lZGl0JztcclxuICAgIGxldCBjYXRlZ29yaWVzID0gW107XHJcbiAgICAkKGlkTW9kYWwpLmZpbmQoJy5mb3JtLWNoZWNrLWlucHV0JykuZWFjaCgoaW5kZXgsIGVsZW1lbnQpID0+IHtcclxuICAgICAgaWYgKCQoZWxlbWVudCkucHJvcCgnY2hlY2tlZCcpKSB7XHJcbiAgICAgICAgY2F0ZWdvcmllcy5wdXNoKCQoZWxlbWVudCkudmFsKCkpO1xyXG4gICAgICB9XHJcbiAgICB9KVxyXG5cclxuICAgIGxldCBkZWxldGVJbWFnZUFyciA9IFtdO1xyXG4gICAgJChpZE1vZGFsKS5maW5kKCcuaW1nLXdyYXBwZXIuc2VsZWN0ZWQnKS5lYWNoKChpbmRleCwgZWxlbWVudCkgPT4ge1xyXG4gICAgICBkZWxldGVJbWFnZUFyci5wdXNoKCQoZWxlbWVudCkuY2hpbGRyZW4oKS5hdHRyKCdzcmMnKSk7XHJcbiAgICB9KVxyXG4gICAgY29uc3QgZm9ybURhdGEgPSB7XHJcbiAgICAgIHByb2R1Y3RJRDogaWQsXHJcbiAgICAgIHRodW1ibmFpbDogJCgnLmF2YXRhckZpbGVVcGxvYWQnKVswXS5maWxlcyxcclxuICAgICAgbmFtZTogJChpZE1vZGFsKS5maW5kKCcucHJvZE5hbWVJbnB1dCcpLnZhbCgpLFxyXG4gICAgICBkZWxldGVkSW1hZ2VzOiBKU09OLnN0cmluZ2lmeShkZWxldGVJbWFnZUFyciksXHJcbiAgICAgIHByaWNlOiAkKGlkTW9kYWwpLmZpbmQoJy5jdXJyUHJpY2VJbnB1dCcpLnZhbCgpLFxyXG4gICAgICBvbGRQcmljZTogJChpZE1vZGFsKS5maW5kKCcub2xkUHJpY2VJbnB1dCcpLnZhbCgpLFxyXG4gICAgICBkZXNjcmlwdGlvbjogdGlueW1jZS5nZXQoJChpZE1vZGFsKS5maW5kKCd0ZXh0YXJlYScpLmF0dHIoJ2lkJykpLmdldENvbnRlbnQoKSxcclxuICAgICAgY2F0ZWdvcmllczogY2F0ZWdvcmllcyxcclxuICAgICAgaW1hZ2VzOiAkKCcudGh1bW5haWxGaWxlVXBsb2FkJylbMF0uZmlsZXNcclxuICAgIH07XHJcbiAgICByZXR1cm4gZm9ybURhdGE7XHJcbiAgfSxcclxuICByZXF1ZXN0RWRpdFNlcnZlcjogZnVuY3Rpb24oKSB7XHJcblxyXG4gIH0sXHJcbiAgdGFibGVIYW5kbGU6IGZ1bmN0aW9uKCkge1xyXG4gICAgJChmdW5jdGlvbigpIHtcclxuICAgICAgdmFyIG9uU2FtcGxlUmVzaXplZCA9IGZ1bmN0aW9uKGUpIHtcclxuICAgICAgICB2YXIgdGFibGUgPSAkKGUuY3VycmVudFRhcmdldCk7IC8vcmVmZXJlbmNlIHRvIHRoZSByZXNpemVkIHRhYmxlXHJcbiAgICAgIH07XHJcblxyXG4gICAgICAkKFwidGFibGVcIikuY29sUmVzaXphYmxlKHtcclxuICAgICAgICBsaXZlRHJhZzogdHJ1ZSxcclxuICAgICAgICBkcmFnZ2luZ0NsYXNzOiBcImRyYWdnaW5nXCIsXHJcbiAgICAgICAgb25SZXNpemU6IG9uU2FtcGxlUmVzaXplZFxyXG4gICAgICB9KTtcclxuXHJcbiAgICB9KTtcclxuICB9XHJcbn1cclxuXHJcbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJET01Db250ZW50TG9hZGVkXCIsIGZ1bmN0aW9uKCkge1xyXG4gIGlmICgkKCcucGFnZS1hZG1pbicpLmxlbmd0aCkge1xyXG4gICAgQURNSU4uaW5pdCgpO1xyXG4gIH1cclxufSk7IiwiLyogalF1ZXJ5IGVsZXZhdGVab29tIDMuMC44IC0gRGVtbydzIGFuZCBkb2N1bWVudGF0aW9uOiAtIHd3dy5lbGV2YXRld2ViLmNvLnVrL2ltYWdlLXpvb20gLSBDb3B5cmlnaHQgKGMpIDIwMTMgQW5kcmV3IEVhZGVzIC0gd3d3LmVsZXZhdGV3ZWIuY28udWsgLSBEdWFsIGxpY2Vuc2VkIHVuZGVyIHRoZSBMR1BMIGxpY2Vuc2VzLiAtIGh0dHA6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvTUlUX0xpY2Vuc2UgLSBodHRwOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0dOVV9HZW5lcmFsX1B1YmxpY19MaWNlbnNlICovXHJcblwiZnVuY3Rpb25cIiE9PXR5cGVvZiBPYmplY3QuY3JlYXRlJiYoT2JqZWN0LmNyZWF0ZT1mdW5jdGlvbihkKXtmdW5jdGlvbiBoKCl7fWgucHJvdG90eXBlPWQ7cmV0dXJuIG5ldyBofSk7XHJcbihmdW5jdGlvbihkLGgsbCxtKXt2YXIgaz17aW5pdDpmdW5jdGlvbihiLGEpe3ZhciBjPXRoaXM7Yy5lbGVtPWE7Yy4kZWxlbT1kKGEpO2MuaW1hZ2VTcmM9Yy4kZWxlbS5kYXRhKFwiem9vbS1pbWFnZVwiKT9jLiRlbGVtLmRhdGEoXCJ6b29tLWltYWdlXCIpOmMuJGVsZW0uYXR0cihcInNyY1wiKTtjLm9wdGlvbnM9ZC5leHRlbmQoe30sZC5mbi5lbGV2YXRlWm9vbS5vcHRpb25zLGIpO2Mub3B0aW9ucy50aW50JiYoYy5vcHRpb25zLmxlbnNDb2xvdXI9XCJub25lXCIsYy5vcHRpb25zLmxlbnNPcGFjaXR5PVwiMVwiKTtcImlubmVyXCI9PWMub3B0aW9ucy56b29tVHlwZSYmKGMub3B0aW9ucy5zaG93TGVucz0hMSk7Yy4kZWxlbS5wYXJlbnQoKS5yZW1vdmVBdHRyKFwidGl0bGVcIikucmVtb3ZlQXR0cihcImFsdFwiKTtjLnpvb21JbWFnZT1jLmltYWdlU3JjO2MucmVmcmVzaCgxKTtkKFwiI1wiK2Mub3B0aW9ucy5nYWxsZXJ5K1wiIGFcIikuY2xpY2soZnVuY3Rpb24oYSl7Yy5vcHRpb25zLmdhbGxlcnlBY3RpdmVDbGFzcyYmXHJcbihkKFwiI1wiK2Mub3B0aW9ucy5nYWxsZXJ5K1wiIGFcIikucmVtb3ZlQ2xhc3MoYy5vcHRpb25zLmdhbGxlcnlBY3RpdmVDbGFzcyksZCh0aGlzKS5hZGRDbGFzcyhjLm9wdGlvbnMuZ2FsbGVyeUFjdGl2ZUNsYXNzKSk7YS5wcmV2ZW50RGVmYXVsdCgpO2QodGhpcykuZGF0YShcInpvb20taW1hZ2VcIik/Yy56b29tSW1hZ2VQcmU9ZCh0aGlzKS5kYXRhKFwiem9vbS1pbWFnZVwiKTpjLnpvb21JbWFnZVByZT1kKHRoaXMpLmRhdGEoXCJpbWFnZVwiKTtjLnN3YXB0aGVpbWFnZShkKHRoaXMpLmRhdGEoXCJpbWFnZVwiKSxjLnpvb21JbWFnZVByZSk7cmV0dXJuITF9KX0scmVmcmVzaDpmdW5jdGlvbihiKXt2YXIgYT10aGlzO3NldFRpbWVvdXQoZnVuY3Rpb24oKXthLmZldGNoKGEuaW1hZ2VTcmMpfSxifHxhLm9wdGlvbnMucmVmcmVzaCl9LGZldGNoOmZ1bmN0aW9uKGIpe3ZhciBhPXRoaXMsYz1uZXcgSW1hZ2U7Yy5vbmxvYWQ9ZnVuY3Rpb24oKXthLmxhcmdlV2lkdGg9Yy53aWR0aDthLmxhcmdlSGVpZ2h0PVxyXG5jLmhlaWdodDthLnN0YXJ0Wm9vbSgpO2EuY3VycmVudEltYWdlPWEuaW1hZ2VTcmM7YS5vcHRpb25zLm9uWm9vbWVkSW1hZ2VMb2FkZWQoYS4kZWxlbSl9O2Muc3JjPWJ9LHN0YXJ0Wm9vbTpmdW5jdGlvbigpe3ZhciBiPXRoaXM7Yi5ueldpZHRoPWIuJGVsZW0ud2lkdGgoKTtiLm56SGVpZ2h0PWIuJGVsZW0uaGVpZ2h0KCk7Yi5pc1dpbmRvd0FjdGl2ZT0hMTtiLmlzTGVuc0FjdGl2ZT0hMTtiLmlzVGludEFjdGl2ZT0hMTtiLm92ZXJXaW5kb3c9ITE7Yi5vcHRpb25zLmltYWdlQ3Jvc3NmYWRlJiYoYi56b29tV3JhcD1iLiRlbGVtLndyYXAoJzxkaXYgc3R5bGU9XCJoZWlnaHQ6JytiLm56SGVpZ2h0K1wicHg7d2lkdGg6XCIrYi5ueldpZHRoKydweDtcIiBjbGFzcz1cInpvb21XcmFwcGVyXCIgLz4nKSxiLiRlbGVtLmNzcyhcInBvc2l0aW9uXCIsXCJhYnNvbHV0ZVwiKSk7Yi56b29tTG9jaz0xO2Iuc2Nyb2xsaW5nTG9jaz0hMTtiLmNoYW5nZUJnU2l6ZT0hMTtiLmN1cnJlbnRab29tTGV2ZWw9Yi5vcHRpb25zLnpvb21MZXZlbDtcclxuYi5uek9mZnNldD1iLiRlbGVtLm9mZnNldCgpO2Iud2lkdGhSYXRpbz1iLmxhcmdlV2lkdGgvYi5jdXJyZW50Wm9vbUxldmVsL2IubnpXaWR0aDtiLmhlaWdodFJhdGlvPWIubGFyZ2VIZWlnaHQvYi5jdXJyZW50Wm9vbUxldmVsL2IubnpIZWlnaHQ7XCJ3aW5kb3dcIj09Yi5vcHRpb25zLnpvb21UeXBlJiYoYi56b29tV2luZG93U3R5bGU9XCJvdmVyZmxvdzogaGlkZGVuO2JhY2tncm91bmQtcG9zaXRpb246IDBweCAwcHg7dGV4dC1hbGlnbjpjZW50ZXI7YmFja2dyb3VuZC1jb2xvcjogXCIrU3RyaW5nKGIub3B0aW9ucy56b29tV2luZG93QmdDb2xvdXIpK1wiO3dpZHRoOiBcIitTdHJpbmcoYi5vcHRpb25zLnpvb21XaW5kb3dXaWR0aCkrXCJweDtoZWlnaHQ6IFwiK1N0cmluZyhiLm9wdGlvbnMuem9vbVdpbmRvd0hlaWdodCkrXCJweDtmbG9hdDogbGVmdDtiYWNrZ3JvdW5kLXNpemU6IFwiK2IubGFyZ2VXaWR0aC9iLmN1cnJlbnRab29tTGV2ZWwrXCJweCBcIitiLmxhcmdlSGVpZ2h0L2IuY3VycmVudFpvb21MZXZlbCtcclxuXCJweDtkaXNwbGF5OiBub25lO3otaW5kZXg6MTAwO2JvcmRlcjogXCIrU3RyaW5nKGIub3B0aW9ucy5ib3JkZXJTaXplKStcInB4IHNvbGlkIFwiK2Iub3B0aW9ucy5ib3JkZXJDb2xvdXIrXCI7YmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtwb3NpdGlvbjogYWJzb2x1dGU7XCIpO2lmKFwiaW5uZXJcIj09Yi5vcHRpb25zLnpvb21UeXBlKXt2YXIgYT1iLiRlbGVtLmNzcyhcImJvcmRlci1sZWZ0LXdpZHRoXCIpO2Iuem9vbVdpbmRvd1N0eWxlPVwib3ZlcmZsb3c6IGhpZGRlbjttYXJnaW4tbGVmdDogXCIrU3RyaW5nKGEpK1wiO21hcmdpbi10b3A6IFwiK1N0cmluZyhhKStcIjtiYWNrZ3JvdW5kLXBvc2l0aW9uOiAwcHggMHB4O3dpZHRoOiBcIitTdHJpbmcoYi5ueldpZHRoKStcInB4O2hlaWdodDogXCIrU3RyaW5nKGIubnpIZWlnaHQpK1wicHg7ZmxvYXQ6IGxlZnQ7ZGlzcGxheTogbm9uZTtjdXJzb3I6XCIrYi5vcHRpb25zLmN1cnNvcitcIjtweCBzb2xpZCBcIitiLm9wdGlvbnMuYm9yZGVyQ29sb3VyK1wiO2JhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7cG9zaXRpb246IGFic29sdXRlO1wifVwid2luZG93XCI9PVxyXG5iLm9wdGlvbnMuem9vbVR5cGUmJihsZW5zSGVpZ2h0PWIubnpIZWlnaHQ8Yi5vcHRpb25zLnpvb21XaW5kb3dXaWR0aC9iLndpZHRoUmF0aW8/Yi5uekhlaWdodDpTdHJpbmcoYi5vcHRpb25zLnpvb21XaW5kb3dIZWlnaHQvYi5oZWlnaHRSYXRpbyksbGVuc1dpZHRoPWIubGFyZ2VXaWR0aDxiLm9wdGlvbnMuem9vbVdpbmRvd1dpZHRoP2IubnpXaWR0aDpiLm9wdGlvbnMuem9vbVdpbmRvd1dpZHRoL2Iud2lkdGhSYXRpbyxiLmxlbnNTdHlsZT1cImJhY2tncm91bmQtcG9zaXRpb246IDBweCAwcHg7d2lkdGg6IFwiK1N0cmluZyhiLm9wdGlvbnMuem9vbVdpbmRvd1dpZHRoL2Iud2lkdGhSYXRpbykrXCJweDtoZWlnaHQ6IFwiK1N0cmluZyhiLm9wdGlvbnMuem9vbVdpbmRvd0hlaWdodC9iLmhlaWdodFJhdGlvKStcInB4O2Zsb2F0OiByaWdodDtkaXNwbGF5OiBub25lO292ZXJmbG93OiBoaWRkZW47ei1pbmRleDogOTk5Oy13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVaKDApO29wYWNpdHk6XCIrXHJcbmIub3B0aW9ucy5sZW5zT3BhY2l0eStcIjtmaWx0ZXI6IGFscGhhKG9wYWNpdHkgPSBcIisxMDAqYi5vcHRpb25zLmxlbnNPcGFjaXR5K1wiKTsgem9vbToxO3dpZHRoOlwiK2xlbnNXaWR0aCtcInB4O2hlaWdodDpcIitsZW5zSGVpZ2h0K1wicHg7YmFja2dyb3VuZC1jb2xvcjpcIitiLm9wdGlvbnMubGVuc0NvbG91citcIjtjdXJzb3I6XCIrYi5vcHRpb25zLmN1cnNvcitcIjtib3JkZXI6IFwiK2Iub3B0aW9ucy5sZW5zQm9yZGVyU2l6ZStcInB4IHNvbGlkIFwiK2Iub3B0aW9ucy5sZW5zQm9yZGVyQ29sb3VyK1wiO2JhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7cG9zaXRpb246IGFic29sdXRlO1wiKTtiLnRpbnRTdHlsZT1cImRpc3BsYXk6IGJsb2NrO3Bvc2l0aW9uOiBhYnNvbHV0ZTtiYWNrZ3JvdW5kLWNvbG9yOiBcIitiLm9wdGlvbnMudGludENvbG91citcIjtmaWx0ZXI6YWxwaGEob3BhY2l0eT0wKTtvcGFjaXR5OiAwO3dpZHRoOiBcIitiLm56V2lkdGgrXCJweDtoZWlnaHQ6IFwiK2IubnpIZWlnaHQrXCJweDtcIjtcclxuYi5sZW5zUm91bmQ9XCJcIjtcImxlbnNcIj09Yi5vcHRpb25zLnpvb21UeXBlJiYoYi5sZW5zU3R5bGU9XCJiYWNrZ3JvdW5kLXBvc2l0aW9uOiAwcHggMHB4O2Zsb2F0OiBsZWZ0O2Rpc3BsYXk6IG5vbmU7Ym9yZGVyOiBcIitTdHJpbmcoYi5vcHRpb25zLmJvcmRlclNpemUpK1wicHggc29saWQgXCIrYi5vcHRpb25zLmJvcmRlckNvbG91citcIjt3aWR0aDpcIitTdHJpbmcoYi5vcHRpb25zLmxlbnNTaXplKStcInB4O2hlaWdodDpcIitTdHJpbmcoYi5vcHRpb25zLmxlbnNTaXplKStcInB4O2JhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7cG9zaXRpb246IGFic29sdXRlO1wiKTtcInJvdW5kXCI9PWIub3B0aW9ucy5sZW5zU2hhcGUmJihiLmxlbnNSb3VuZD1cImJvcmRlci10b3AtbGVmdC1yYWRpdXM6IFwiK1N0cmluZyhiLm9wdGlvbnMubGVuc1NpemUvMitiLm9wdGlvbnMuYm9yZGVyU2l6ZSkrXCJweDtib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogXCIrU3RyaW5nKGIub3B0aW9ucy5sZW5zU2l6ZS8yK2Iub3B0aW9ucy5ib3JkZXJTaXplKStcclxuXCJweDtib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiBcIitTdHJpbmcoYi5vcHRpb25zLmxlbnNTaXplLzIrYi5vcHRpb25zLmJvcmRlclNpemUpK1wicHg7Ym9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IFwiK1N0cmluZyhiLm9wdGlvbnMubGVuc1NpemUvMitiLm9wdGlvbnMuYm9yZGVyU2l6ZSkrXCJweDtcIik7Yi56b29tQ29udGFpbmVyPWQoJzxkaXYgY2xhc3M9XCJ6b29tQ29udGFpbmVyXCIgc3R5bGU9XCItd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWigwKTtwb3NpdGlvbjphYnNvbHV0ZTtsZWZ0OicrYi5uek9mZnNldC5sZWZ0K1wicHg7dG9wOlwiK2IubnpPZmZzZXQudG9wK1wicHg7aGVpZ2h0OlwiK2IubnpIZWlnaHQrXCJweDt3aWR0aDpcIitiLm56V2lkdGgrJ3B4O1wiPjwvZGl2PicpO2QoXCJib2R5XCIpLmFwcGVuZChiLnpvb21Db250YWluZXIpO2Iub3B0aW9ucy5jb250YWluTGVuc1pvb20mJlwibGVuc1wiPT1iLm9wdGlvbnMuem9vbVR5cGUmJmIuem9vbUNvbnRhaW5lci5jc3MoXCJvdmVyZmxvd1wiLFxyXG5cImhpZGRlblwiKTtcImlubmVyXCIhPWIub3B0aW9ucy56b29tVHlwZSYmKGIuem9vbUxlbnM9ZChcIjxkaXYgY2xhc3M9J3pvb21MZW5zJyBzdHlsZT0nXCIrYi5sZW5zU3R5bGUrYi5sZW5zUm91bmQrXCInPiZuYnNwOzwvZGl2PlwiKS5hcHBlbmRUbyhiLnpvb21Db250YWluZXIpLmNsaWNrKGZ1bmN0aW9uKCl7Yi4kZWxlbS50cmlnZ2VyKFwiY2xpY2tcIil9KSxiLm9wdGlvbnMudGludCYmKGIudGludENvbnRhaW5lcj1kKFwiPGRpdi8+XCIpLmFkZENsYXNzKFwidGludENvbnRhaW5lclwiKSxiLnpvb21UaW50PWQoXCI8ZGl2IGNsYXNzPSd6b29tVGludCcgc3R5bGU9J1wiK2IudGludFN0eWxlK1wiJz48L2Rpdj5cIiksYi56b29tTGVucy53cmFwKGIudGludENvbnRhaW5lciksYi56b29tVGludGNzcz1iLnpvb21MZW5zLmFmdGVyKGIuem9vbVRpbnQpLGIuem9vbVRpbnRJbWFnZT1kKCc8aW1nIHN0eWxlPVwicG9zaXRpb246IGFic29sdXRlOyBsZWZ0OiAwcHg7IHRvcDogMHB4OyBtYXgtd2lkdGg6IG5vbmU7IHdpZHRoOiAnK1xyXG5iLm56V2lkdGgrXCJweDsgaGVpZ2h0OiBcIitiLm56SGVpZ2h0KydweDtcIiBzcmM9XCInK2IuaW1hZ2VTcmMrJ1wiPicpLmFwcGVuZFRvKGIuem9vbUxlbnMpLmNsaWNrKGZ1bmN0aW9uKCl7Yi4kZWxlbS50cmlnZ2VyKFwiY2xpY2tcIil9KSkpO2lzTmFOKGIub3B0aW9ucy56b29tV2luZG93UG9zaXRpb24pP2Iuem9vbVdpbmRvdz1kKFwiPGRpdiBzdHlsZT0nei1pbmRleDo5OTk7bGVmdDpcIitiLndpbmRvd09mZnNldExlZnQrXCJweDt0b3A6XCIrYi53aW5kb3dPZmZzZXRUb3ArXCJweDtcIitiLnpvb21XaW5kb3dTdHlsZStcIicgY2xhc3M9J3pvb21XaW5kb3cnPiZuYnNwOzwvZGl2PlwiKS5hcHBlbmRUbyhcImJvZHlcIikuY2xpY2soZnVuY3Rpb24oKXtiLiRlbGVtLnRyaWdnZXIoXCJjbGlja1wiKX0pOmIuem9vbVdpbmRvdz1kKFwiPGRpdiBzdHlsZT0nei1pbmRleDo5OTk7bGVmdDpcIitiLndpbmRvd09mZnNldExlZnQrXCJweDt0b3A6XCIrYi53aW5kb3dPZmZzZXRUb3ArXCJweDtcIitiLnpvb21XaW5kb3dTdHlsZStcclxuXCInIGNsYXNzPSd6b29tV2luZG93Jz4mbmJzcDs8L2Rpdj5cIikuYXBwZW5kVG8oYi56b29tQ29udGFpbmVyKS5jbGljayhmdW5jdGlvbigpe2IuJGVsZW0udHJpZ2dlcihcImNsaWNrXCIpfSk7Yi56b29tV2luZG93Q29udGFpbmVyPWQoXCI8ZGl2Lz5cIikuYWRkQ2xhc3MoXCJ6b29tV2luZG93Q29udGFpbmVyXCIpLmNzcyhcIndpZHRoXCIsYi5vcHRpb25zLnpvb21XaW5kb3dXaWR0aCk7Yi56b29tV2luZG93LndyYXAoYi56b29tV2luZG93Q29udGFpbmVyKTtcImxlbnNcIj09Yi5vcHRpb25zLnpvb21UeXBlJiZiLnpvb21MZW5zLmNzcyh7YmFja2dyb3VuZEltYWdlOlwidXJsKCdcIitiLmltYWdlU3JjK1wiJylcIn0pO1wid2luZG93XCI9PWIub3B0aW9ucy56b29tVHlwZSYmYi56b29tV2luZG93LmNzcyh7YmFja2dyb3VuZEltYWdlOlwidXJsKCdcIitiLmltYWdlU3JjK1wiJylcIn0pO1wiaW5uZXJcIj09Yi5vcHRpb25zLnpvb21UeXBlJiZiLnpvb21XaW5kb3cuY3NzKHtiYWNrZ3JvdW5kSW1hZ2U6XCJ1cmwoJ1wiK2IuaW1hZ2VTcmMrXHJcblwiJylcIn0pO2IuJGVsZW0uYmluZChcInRvdWNobW92ZVwiLGZ1bmN0aW9uKGEpe2EucHJldmVudERlZmF1bHQoKTtiLnNldFBvc2l0aW9uKGEub3JpZ2luYWxFdmVudC50b3VjaGVzWzBdfHxhLm9yaWdpbmFsRXZlbnQuY2hhbmdlZFRvdWNoZXNbMF0pfSk7Yi56b29tQ29udGFpbmVyLmJpbmQoXCJ0b3VjaG1vdmVcIixmdW5jdGlvbihhKXtcImlubmVyXCI9PWIub3B0aW9ucy56b29tVHlwZSYmYi5zaG93SGlkZVdpbmRvdyhcInNob3dcIik7YS5wcmV2ZW50RGVmYXVsdCgpO2Iuc2V0UG9zaXRpb24oYS5vcmlnaW5hbEV2ZW50LnRvdWNoZXNbMF18fGEub3JpZ2luYWxFdmVudC5jaGFuZ2VkVG91Y2hlc1swXSl9KTtiLnpvb21Db250YWluZXIuYmluZChcInRvdWNoZW5kXCIsZnVuY3Rpb24oYSl7Yi5zaG93SGlkZVdpbmRvdyhcImhpZGVcIik7Yi5vcHRpb25zLnNob3dMZW5zJiZiLnNob3dIaWRlTGVucyhcImhpZGVcIik7Yi5vcHRpb25zLnRpbnQmJlwiaW5uZXJcIiE9Yi5vcHRpb25zLnpvb21UeXBlJiZiLnNob3dIaWRlVGludChcImhpZGVcIil9KTtcclxuYi4kZWxlbS5iaW5kKFwidG91Y2hlbmRcIixmdW5jdGlvbihhKXtiLnNob3dIaWRlV2luZG93KFwiaGlkZVwiKTtiLm9wdGlvbnMuc2hvd0xlbnMmJmIuc2hvd0hpZGVMZW5zKFwiaGlkZVwiKTtiLm9wdGlvbnMudGludCYmXCJpbm5lclwiIT1iLm9wdGlvbnMuem9vbVR5cGUmJmIuc2hvd0hpZGVUaW50KFwiaGlkZVwiKX0pO2Iub3B0aW9ucy5zaG93TGVucyYmKGIuem9vbUxlbnMuYmluZChcInRvdWNobW92ZVwiLGZ1bmN0aW9uKGEpe2EucHJldmVudERlZmF1bHQoKTtiLnNldFBvc2l0aW9uKGEub3JpZ2luYWxFdmVudC50b3VjaGVzWzBdfHxhLm9yaWdpbmFsRXZlbnQuY2hhbmdlZFRvdWNoZXNbMF0pfSksYi56b29tTGVucy5iaW5kKFwidG91Y2hlbmRcIixmdW5jdGlvbihhKXtiLnNob3dIaWRlV2luZG93KFwiaGlkZVwiKTtiLm9wdGlvbnMuc2hvd0xlbnMmJmIuc2hvd0hpZGVMZW5zKFwiaGlkZVwiKTtiLm9wdGlvbnMudGludCYmXCJpbm5lclwiIT1iLm9wdGlvbnMuem9vbVR5cGUmJmIuc2hvd0hpZGVUaW50KFwiaGlkZVwiKX0pKTtcclxuYi4kZWxlbS5iaW5kKFwibW91c2Vtb3ZlXCIsZnVuY3Rpb24oYSl7ITE9PWIub3ZlcldpbmRvdyYmYi5zZXRFbGVtZW50cyhcInNob3dcIik7aWYoYi5sYXN0WCE9PWEuY2xpZW50WHx8Yi5sYXN0WSE9PWEuY2xpZW50WSliLnNldFBvc2l0aW9uKGEpLGIuY3VycmVudExvYz1hO2IubGFzdFg9YS5jbGllbnRYO2IubGFzdFk9YS5jbGllbnRZfSk7Yi56b29tQ29udGFpbmVyLmJpbmQoXCJtb3VzZW1vdmVcIixmdW5jdGlvbihhKXshMT09Yi5vdmVyV2luZG93JiZiLnNldEVsZW1lbnRzKFwic2hvd1wiKTtpZihiLmxhc3RYIT09YS5jbGllbnRYfHxiLmxhc3RZIT09YS5jbGllbnRZKWIuc2V0UG9zaXRpb24oYSksYi5jdXJyZW50TG9jPWE7Yi5sYXN0WD1hLmNsaWVudFg7Yi5sYXN0WT1hLmNsaWVudFl9KTtcImlubmVyXCIhPWIub3B0aW9ucy56b29tVHlwZSYmYi56b29tTGVucy5iaW5kKFwibW91c2Vtb3ZlXCIsZnVuY3Rpb24oYSl7aWYoYi5sYXN0WCE9PWEuY2xpZW50WHx8Yi5sYXN0WSE9PWEuY2xpZW50WSliLnNldFBvc2l0aW9uKGEpLFxyXG5iLmN1cnJlbnRMb2M9YTtiLmxhc3RYPWEuY2xpZW50WDtiLmxhc3RZPWEuY2xpZW50WX0pO2Iub3B0aW9ucy50aW50JiZcImlubmVyXCIhPWIub3B0aW9ucy56b29tVHlwZSYmYi56b29tVGludC5iaW5kKFwibW91c2Vtb3ZlXCIsZnVuY3Rpb24oYSl7aWYoYi5sYXN0WCE9PWEuY2xpZW50WHx8Yi5sYXN0WSE9PWEuY2xpZW50WSliLnNldFBvc2l0aW9uKGEpLGIuY3VycmVudExvYz1hO2IubGFzdFg9YS5jbGllbnRYO2IubGFzdFk9YS5jbGllbnRZfSk7XCJpbm5lclwiPT1iLm9wdGlvbnMuem9vbVR5cGUmJmIuem9vbVdpbmRvdy5iaW5kKFwibW91c2Vtb3ZlXCIsZnVuY3Rpb24oYSl7aWYoYi5sYXN0WCE9PWEuY2xpZW50WHx8Yi5sYXN0WSE9PWEuY2xpZW50WSliLnNldFBvc2l0aW9uKGEpLGIuY3VycmVudExvYz1hO2IubGFzdFg9YS5jbGllbnRYO2IubGFzdFk9YS5jbGllbnRZfSk7Yi56b29tQ29udGFpbmVyLmFkZChiLiRlbGVtKS5tb3VzZWVudGVyKGZ1bmN0aW9uKCl7ITE9PWIub3ZlcldpbmRvdyYmXHJcbmIuc2V0RWxlbWVudHMoXCJzaG93XCIpfSkubW91c2VsZWF2ZShmdW5jdGlvbigpe2Iuc2Nyb2xsTG9ja3x8Yi5zZXRFbGVtZW50cyhcImhpZGVcIil9KTtcImlubmVyXCIhPWIub3B0aW9ucy56b29tVHlwZSYmYi56b29tV2luZG93Lm1vdXNlZW50ZXIoZnVuY3Rpb24oKXtiLm92ZXJXaW5kb3c9ITA7Yi5zZXRFbGVtZW50cyhcImhpZGVcIil9KS5tb3VzZWxlYXZlKGZ1bmN0aW9uKCl7Yi5vdmVyV2luZG93PSExfSk7Yi5taW5ab29tTGV2ZWw9Yi5vcHRpb25zLm1pblpvb21MZXZlbD9iLm9wdGlvbnMubWluWm9vbUxldmVsOjIqYi5vcHRpb25zLnNjcm9sbFpvb21JbmNyZW1lbnQ7Yi5vcHRpb25zLnNjcm9sbFpvb20mJmIuem9vbUNvbnRhaW5lci5hZGQoYi4kZWxlbSkuYmluZChcIm1vdXNld2hlZWwgRE9NTW91c2VTY3JvbGwgTW96TW91c2VQaXhlbFNjcm9sbFwiLGZ1bmN0aW9uKGEpe2Iuc2Nyb2xsTG9jaz0hMDtjbGVhclRpbWVvdXQoZC5kYXRhKHRoaXMsXCJ0aW1lclwiKSk7ZC5kYXRhKHRoaXMsXCJ0aW1lclwiLFxyXG5zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7Yi5zY3JvbGxMb2NrPSExfSwyNTApKTt2YXIgZT1hLm9yaWdpbmFsRXZlbnQud2hlZWxEZWx0YXx8LTEqYS5vcmlnaW5hbEV2ZW50LmRldGFpbDthLnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpO2Euc3RvcFByb3BhZ2F0aW9uKCk7YS5wcmV2ZW50RGVmYXVsdCgpOzA8ZS8xMjA/Yi5jdXJyZW50Wm9vbUxldmVsPj1iLm1pblpvb21MZXZlbCYmYi5jaGFuZ2Vab29tTGV2ZWwoYi5jdXJyZW50Wm9vbUxldmVsLWIub3B0aW9ucy5zY3JvbGxab29tSW5jcmVtZW50KTpiLm9wdGlvbnMubWF4Wm9vbUxldmVsP2IuY3VycmVudFpvb21MZXZlbDw9Yi5vcHRpb25zLm1heFpvb21MZXZlbCYmYi5jaGFuZ2Vab29tTGV2ZWwocGFyc2VGbG9hdChiLmN1cnJlbnRab29tTGV2ZWwpK2Iub3B0aW9ucy5zY3JvbGxab29tSW5jcmVtZW50KTpiLmNoYW5nZVpvb21MZXZlbChwYXJzZUZsb2F0KGIuY3VycmVudFpvb21MZXZlbCkrYi5vcHRpb25zLnNjcm9sbFpvb21JbmNyZW1lbnQpO1xyXG5yZXR1cm4hMX0pfSxzZXRFbGVtZW50czpmdW5jdGlvbihiKXtpZighdGhpcy5vcHRpb25zLnpvb21FbmFibGVkKXJldHVybiExO1wic2hvd1wiPT1iJiZ0aGlzLmlzV2luZG93U2V0JiYoXCJpbm5lclwiPT10aGlzLm9wdGlvbnMuem9vbVR5cGUmJnRoaXMuc2hvd0hpZGVXaW5kb3coXCJzaG93XCIpLFwid2luZG93XCI9PXRoaXMub3B0aW9ucy56b29tVHlwZSYmdGhpcy5zaG93SGlkZVdpbmRvdyhcInNob3dcIiksdGhpcy5vcHRpb25zLnNob3dMZW5zJiZ0aGlzLnNob3dIaWRlTGVucyhcInNob3dcIiksdGhpcy5vcHRpb25zLnRpbnQmJlwiaW5uZXJcIiE9dGhpcy5vcHRpb25zLnpvb21UeXBlJiZ0aGlzLnNob3dIaWRlVGludChcInNob3dcIikpO1wiaGlkZVwiPT1iJiYoXCJ3aW5kb3dcIj09dGhpcy5vcHRpb25zLnpvb21UeXBlJiZ0aGlzLnNob3dIaWRlV2luZG93KFwiaGlkZVwiKSx0aGlzLm9wdGlvbnMudGludHx8dGhpcy5zaG93SGlkZVdpbmRvdyhcImhpZGVcIiksdGhpcy5vcHRpb25zLnNob3dMZW5zJiZ0aGlzLnNob3dIaWRlTGVucyhcImhpZGVcIiksXHJcbnRoaXMub3B0aW9ucy50aW50JiZ0aGlzLnNob3dIaWRlVGludChcImhpZGVcIikpfSxzZXRQb3NpdGlvbjpmdW5jdGlvbihiKXtpZighdGhpcy5vcHRpb25zLnpvb21FbmFibGVkKXJldHVybiExO3RoaXMubnpIZWlnaHQ9dGhpcy4kZWxlbS5oZWlnaHQoKTt0aGlzLm56V2lkdGg9dGhpcy4kZWxlbS53aWR0aCgpO3RoaXMubnpPZmZzZXQ9dGhpcy4kZWxlbS5vZmZzZXQoKTt0aGlzLm9wdGlvbnMudGludCYmXCJpbm5lclwiIT10aGlzLm9wdGlvbnMuem9vbVR5cGUmJih0aGlzLnpvb21UaW50LmNzcyh7dG9wOjB9KSx0aGlzLnpvb21UaW50LmNzcyh7bGVmdDowfSkpO3RoaXMub3B0aW9ucy5yZXNwb25zaXZlJiYhdGhpcy5vcHRpb25zLnNjcm9sbFpvb20mJnRoaXMub3B0aW9ucy5zaG93TGVucyYmKGxlbnNIZWlnaHQ9dGhpcy5uekhlaWdodDx0aGlzLm9wdGlvbnMuem9vbVdpbmRvd1dpZHRoL3RoaXMud2lkdGhSYXRpbz90aGlzLm56SGVpZ2h0OlN0cmluZyh0aGlzLm9wdGlvbnMuem9vbVdpbmRvd0hlaWdodC9cclxudGhpcy5oZWlnaHRSYXRpbyksbGVuc1dpZHRoPXRoaXMubGFyZ2VXaWR0aDx0aGlzLm9wdGlvbnMuem9vbVdpbmRvd1dpZHRoP3RoaXMubnpXaWR0aDp0aGlzLm9wdGlvbnMuem9vbVdpbmRvd1dpZHRoL3RoaXMud2lkdGhSYXRpbyx0aGlzLndpZHRoUmF0aW89dGhpcy5sYXJnZVdpZHRoL3RoaXMubnpXaWR0aCx0aGlzLmhlaWdodFJhdGlvPXRoaXMubGFyZ2VIZWlnaHQvdGhpcy5uekhlaWdodCxcImxlbnNcIiE9dGhpcy5vcHRpb25zLnpvb21UeXBlJiYobGVuc0hlaWdodD10aGlzLm56SGVpZ2h0PHRoaXMub3B0aW9ucy56b29tV2luZG93V2lkdGgvdGhpcy53aWR0aFJhdGlvP3RoaXMubnpIZWlnaHQ6U3RyaW5nKHRoaXMub3B0aW9ucy56b29tV2luZG93SGVpZ2h0L3RoaXMuaGVpZ2h0UmF0aW8pLGxlbnNXaWR0aD10aGlzLm9wdGlvbnMuem9vbVdpbmRvd1dpZHRoPHRoaXMub3B0aW9ucy56b29tV2luZG93V2lkdGg/dGhpcy5ueldpZHRoOnRoaXMub3B0aW9ucy56b29tV2luZG93V2lkdGgvXHJcbnRoaXMud2lkdGhSYXRpbyx0aGlzLnpvb21MZW5zLmNzcyhcIndpZHRoXCIsbGVuc1dpZHRoKSx0aGlzLnpvb21MZW5zLmNzcyhcImhlaWdodFwiLGxlbnNIZWlnaHQpLHRoaXMub3B0aW9ucy50aW50JiYodGhpcy56b29tVGludEltYWdlLmNzcyhcIndpZHRoXCIsdGhpcy5ueldpZHRoKSx0aGlzLnpvb21UaW50SW1hZ2UuY3NzKFwiaGVpZ2h0XCIsdGhpcy5uekhlaWdodCkpKSxcImxlbnNcIj09dGhpcy5vcHRpb25zLnpvb21UeXBlJiZ0aGlzLnpvb21MZW5zLmNzcyh7d2lkdGg6U3RyaW5nKHRoaXMub3B0aW9ucy5sZW5zU2l6ZSkrXCJweFwiLGhlaWdodDpTdHJpbmcodGhpcy5vcHRpb25zLmxlbnNTaXplKStcInB4XCJ9KSk7dGhpcy56b29tQ29udGFpbmVyLmNzcyh7dG9wOnRoaXMubnpPZmZzZXQudG9wfSk7dGhpcy56b29tQ29udGFpbmVyLmNzcyh7bGVmdDp0aGlzLm56T2Zmc2V0LmxlZnR9KTt0aGlzLm1vdXNlTGVmdD1wYXJzZUludChiLnBhZ2VYLXRoaXMubnpPZmZzZXQubGVmdCk7dGhpcy5tb3VzZVRvcD1cclxucGFyc2VJbnQoYi5wYWdlWS10aGlzLm56T2Zmc2V0LnRvcCk7XCJ3aW5kb3dcIj09dGhpcy5vcHRpb25zLnpvb21UeXBlJiYodGhpcy5FdG9wcG9zPXRoaXMubW91c2VUb3A8dGhpcy56b29tTGVucy5oZWlnaHQoKS8yLHRoaXMuRWJvcHBvcz10aGlzLm1vdXNlVG9wPnRoaXMubnpIZWlnaHQtdGhpcy56b29tTGVucy5oZWlnaHQoKS8yLTIqdGhpcy5vcHRpb25zLmxlbnNCb3JkZXJTaXplLHRoaXMuRWxvcHBvcz10aGlzLm1vdXNlTGVmdDwwK3RoaXMuem9vbUxlbnMud2lkdGgoKS8yLHRoaXMuRXJvcHBvcz10aGlzLm1vdXNlTGVmdD50aGlzLm56V2lkdGgtdGhpcy56b29tTGVucy53aWR0aCgpLzItMip0aGlzLm9wdGlvbnMubGVuc0JvcmRlclNpemUpO1wiaW5uZXJcIj09dGhpcy5vcHRpb25zLnpvb21UeXBlJiYodGhpcy5FdG9wcG9zPXRoaXMubW91c2VUb3A8dGhpcy5uekhlaWdodC8yL3RoaXMuaGVpZ2h0UmF0aW8sdGhpcy5FYm9wcG9zPXRoaXMubW91c2VUb3A+dGhpcy5uekhlaWdodC1cclxudGhpcy5uekhlaWdodC8yL3RoaXMuaGVpZ2h0UmF0aW8sdGhpcy5FbG9wcG9zPXRoaXMubW91c2VMZWZ0PDArdGhpcy5ueldpZHRoLzIvdGhpcy53aWR0aFJhdGlvLHRoaXMuRXJvcHBvcz10aGlzLm1vdXNlTGVmdD50aGlzLm56V2lkdGgtdGhpcy5ueldpZHRoLzIvdGhpcy53aWR0aFJhdGlvLTIqdGhpcy5vcHRpb25zLmxlbnNCb3JkZXJTaXplKTswPj10aGlzLm1vdXNlTGVmdHx8MD50aGlzLm1vdXNlVG9wfHx0aGlzLm1vdXNlTGVmdD50aGlzLm56V2lkdGh8fHRoaXMubW91c2VUb3A+dGhpcy5uekhlaWdodD90aGlzLnNldEVsZW1lbnRzKFwiaGlkZVwiKToodGhpcy5vcHRpb25zLnNob3dMZW5zJiYodGhpcy5sZW5zTGVmdFBvcz1TdHJpbmcodGhpcy5tb3VzZUxlZnQtdGhpcy56b29tTGVucy53aWR0aCgpLzIpLHRoaXMubGVuc1RvcFBvcz1TdHJpbmcodGhpcy5tb3VzZVRvcC10aGlzLnpvb21MZW5zLmhlaWdodCgpLzIpKSx0aGlzLkV0b3Bwb3MmJih0aGlzLmxlbnNUb3BQb3M9MCksXHJcbnRoaXMuRWxvcHBvcyYmKHRoaXMudGludHBvcz10aGlzLmxlbnNMZWZ0UG9zPXRoaXMud2luZG93TGVmdFBvcz0wKSxcIndpbmRvd1wiPT10aGlzLm9wdGlvbnMuem9vbVR5cGUmJih0aGlzLkVib3Bwb3MmJih0aGlzLmxlbnNUb3BQb3M9TWF0aC5tYXgodGhpcy5uekhlaWdodC10aGlzLnpvb21MZW5zLmhlaWdodCgpLTIqdGhpcy5vcHRpb25zLmxlbnNCb3JkZXJTaXplLDApKSx0aGlzLkVyb3Bwb3MmJih0aGlzLmxlbnNMZWZ0UG9zPXRoaXMubnpXaWR0aC10aGlzLnpvb21MZW5zLndpZHRoKCktMip0aGlzLm9wdGlvbnMubGVuc0JvcmRlclNpemUpKSxcImlubmVyXCI9PXRoaXMub3B0aW9ucy56b29tVHlwZSYmKHRoaXMuRWJvcHBvcyYmKHRoaXMubGVuc1RvcFBvcz1NYXRoLm1heCh0aGlzLm56SGVpZ2h0LTIqdGhpcy5vcHRpb25zLmxlbnNCb3JkZXJTaXplLDApKSx0aGlzLkVyb3Bwb3MmJih0aGlzLmxlbnNMZWZ0UG9zPXRoaXMubnpXaWR0aC10aGlzLm56V2lkdGgtMip0aGlzLm9wdGlvbnMubGVuc0JvcmRlclNpemUpKSxcclxuXCJsZW5zXCI9PXRoaXMub3B0aW9ucy56b29tVHlwZSYmKHRoaXMud2luZG93TGVmdFBvcz1TdHJpbmcoLTEqKChiLnBhZ2VYLXRoaXMubnpPZmZzZXQubGVmdCkqdGhpcy53aWR0aFJhdGlvLXRoaXMuem9vbUxlbnMud2lkdGgoKS8yKSksdGhpcy53aW5kb3dUb3BQb3M9U3RyaW5nKC0xKigoYi5wYWdlWS10aGlzLm56T2Zmc2V0LnRvcCkqdGhpcy5oZWlnaHRSYXRpby10aGlzLnpvb21MZW5zLmhlaWdodCgpLzIpKSx0aGlzLnpvb21MZW5zLmNzcyh7YmFja2dyb3VuZFBvc2l0aW9uOnRoaXMud2luZG93TGVmdFBvcytcInB4IFwiK3RoaXMud2luZG93VG9wUG9zK1wicHhcIn0pLHRoaXMuY2hhbmdlQmdTaXplJiYodGhpcy5uekhlaWdodD50aGlzLm56V2lkdGg/KFwibGVuc1wiPT10aGlzLm9wdGlvbnMuem9vbVR5cGUmJnRoaXMuem9vbUxlbnMuY3NzKHtcImJhY2tncm91bmQtc2l6ZVwiOnRoaXMubGFyZ2VXaWR0aC90aGlzLm5ld3ZhbHVlaGVpZ2h0K1wicHggXCIrdGhpcy5sYXJnZUhlaWdodC90aGlzLm5ld3ZhbHVlaGVpZ2h0K1xyXG5cInB4XCJ9KSx0aGlzLnpvb21XaW5kb3cuY3NzKHtcImJhY2tncm91bmQtc2l6ZVwiOnRoaXMubGFyZ2VXaWR0aC90aGlzLm5ld3ZhbHVlaGVpZ2h0K1wicHggXCIrdGhpcy5sYXJnZUhlaWdodC90aGlzLm5ld3ZhbHVlaGVpZ2h0K1wicHhcIn0pKTooXCJsZW5zXCI9PXRoaXMub3B0aW9ucy56b29tVHlwZSYmdGhpcy56b29tTGVucy5jc3Moe1wiYmFja2dyb3VuZC1zaXplXCI6dGhpcy5sYXJnZVdpZHRoL3RoaXMubmV3dmFsdWV3aWR0aCtcInB4IFwiK3RoaXMubGFyZ2VIZWlnaHQvdGhpcy5uZXd2YWx1ZXdpZHRoK1wicHhcIn0pLHRoaXMuem9vbVdpbmRvdy5jc3Moe1wiYmFja2dyb3VuZC1zaXplXCI6dGhpcy5sYXJnZVdpZHRoL3RoaXMubmV3dmFsdWV3aWR0aCtcInB4IFwiK3RoaXMubGFyZ2VIZWlnaHQvdGhpcy5uZXd2YWx1ZXdpZHRoK1wicHhcIn0pKSx0aGlzLmNoYW5nZUJnU2l6ZT0hMSksdGhpcy5zZXRXaW5kb3dQb3N0aXRpb24oYikpLHRoaXMub3B0aW9ucy50aW50JiZcImlubmVyXCIhPXRoaXMub3B0aW9ucy56b29tVHlwZSYmXHJcbnRoaXMuc2V0VGludFBvc2l0aW9uKGIpLFwid2luZG93XCI9PXRoaXMub3B0aW9ucy56b29tVHlwZSYmdGhpcy5zZXRXaW5kb3dQb3N0aXRpb24oYiksXCJpbm5lclwiPT10aGlzLm9wdGlvbnMuem9vbVR5cGUmJnRoaXMuc2V0V2luZG93UG9zdGl0aW9uKGIpLHRoaXMub3B0aW9ucy5zaG93TGVucyYmKHRoaXMuZnVsbHdpZHRoJiZcImxlbnNcIiE9dGhpcy5vcHRpb25zLnpvb21UeXBlJiYodGhpcy5sZW5zTGVmdFBvcz0wKSx0aGlzLnpvb21MZW5zLmNzcyh7bGVmdDp0aGlzLmxlbnNMZWZ0UG9zK1wicHhcIix0b3A6dGhpcy5sZW5zVG9wUG9zK1wicHhcIn0pKSl9LHNob3dIaWRlV2luZG93OmZ1bmN0aW9uKGIpe1wic2hvd1wiIT1ifHx0aGlzLmlzV2luZG93QWN0aXZlfHwodGhpcy5vcHRpb25zLnpvb21XaW5kb3dGYWRlSW4/dGhpcy56b29tV2luZG93LnN0b3AoITAsITAsITEpLmZhZGVJbih0aGlzLm9wdGlvbnMuem9vbVdpbmRvd0ZhZGVJbik6dGhpcy56b29tV2luZG93LnNob3coKSx0aGlzLmlzV2luZG93QWN0aXZlPVxyXG4hMCk7XCJoaWRlXCI9PWImJnRoaXMuaXNXaW5kb3dBY3RpdmUmJih0aGlzLm9wdGlvbnMuem9vbVdpbmRvd0ZhZGVPdXQ/dGhpcy56b29tV2luZG93LnN0b3AoITAsITApLmZhZGVPdXQodGhpcy5vcHRpb25zLnpvb21XaW5kb3dGYWRlT3V0KTp0aGlzLnpvb21XaW5kb3cuaGlkZSgpLHRoaXMuaXNXaW5kb3dBY3RpdmU9ITEpfSxzaG93SGlkZUxlbnM6ZnVuY3Rpb24oYil7XCJzaG93XCIhPWJ8fHRoaXMuaXNMZW5zQWN0aXZlfHwodGhpcy5vcHRpb25zLmxlbnNGYWRlSW4/dGhpcy56b29tTGVucy5zdG9wKCEwLCEwLCExKS5mYWRlSW4odGhpcy5vcHRpb25zLmxlbnNGYWRlSW4pOnRoaXMuem9vbUxlbnMuc2hvdygpLHRoaXMuaXNMZW5zQWN0aXZlPSEwKTtcImhpZGVcIj09YiYmdGhpcy5pc0xlbnNBY3RpdmUmJih0aGlzLm9wdGlvbnMubGVuc0ZhZGVPdXQ/dGhpcy56b29tTGVucy5zdG9wKCEwLCEwKS5mYWRlT3V0KHRoaXMub3B0aW9ucy5sZW5zRmFkZU91dCk6dGhpcy56b29tTGVucy5oaWRlKCksXHJcbnRoaXMuaXNMZW5zQWN0aXZlPSExKX0sc2hvd0hpZGVUaW50OmZ1bmN0aW9uKGIpe1wic2hvd1wiIT1ifHx0aGlzLmlzVGludEFjdGl2ZXx8KHRoaXMub3B0aW9ucy56b29tVGludEZhZGVJbj90aGlzLnpvb21UaW50LmNzcyh7b3BhY2l0eTp0aGlzLm9wdGlvbnMudGludE9wYWNpdHl9KS5hbmltYXRlKCkuc3RvcCghMCwhMCkuZmFkZUluKFwic2xvd1wiKToodGhpcy56b29tVGludC5jc3Moe29wYWNpdHk6dGhpcy5vcHRpb25zLnRpbnRPcGFjaXR5fSkuYW5pbWF0ZSgpLHRoaXMuem9vbVRpbnQuc2hvdygpKSx0aGlzLmlzVGludEFjdGl2ZT0hMCk7XCJoaWRlXCI9PWImJnRoaXMuaXNUaW50QWN0aXZlJiYodGhpcy5vcHRpb25zLnpvb21UaW50RmFkZU91dD90aGlzLnpvb21UaW50LnN0b3AoITAsITApLmZhZGVPdXQodGhpcy5vcHRpb25zLnpvb21UaW50RmFkZU91dCk6dGhpcy56b29tVGludC5oaWRlKCksdGhpcy5pc1RpbnRBY3RpdmU9ITEpfSxzZXRMZW5zUG9zdGl0aW9uOmZ1bmN0aW9uKGIpe30sXHJcbnNldFdpbmRvd1Bvc3RpdGlvbjpmdW5jdGlvbihiKXt2YXIgYT10aGlzO2lmKGlzTmFOKGEub3B0aW9ucy56b29tV2luZG93UG9zaXRpb24pKWEuZXh0ZXJuYWxDb250YWluZXI9ZChcIiNcIithLm9wdGlvbnMuem9vbVdpbmRvd1Bvc2l0aW9uKSxhLmV4dGVybmFsQ29udGFpbmVyV2lkdGg9YS5leHRlcm5hbENvbnRhaW5lci53aWR0aCgpLGEuZXh0ZXJuYWxDb250YWluZXJIZWlnaHQ9YS5leHRlcm5hbENvbnRhaW5lci5oZWlnaHQoKSxhLmV4dGVybmFsQ29udGFpbmVyT2Zmc2V0PWEuZXh0ZXJuYWxDb250YWluZXIub2Zmc2V0KCksYS53aW5kb3dPZmZzZXRUb3A9YS5leHRlcm5hbENvbnRhaW5lck9mZnNldC50b3AsYS53aW5kb3dPZmZzZXRMZWZ0PWEuZXh0ZXJuYWxDb250YWluZXJPZmZzZXQubGVmdDtlbHNlIHN3aXRjaChhLm9wdGlvbnMuem9vbVdpbmRvd1Bvc2l0aW9uKXtjYXNlIDE6YS53aW5kb3dPZmZzZXRUb3A9YS5vcHRpb25zLnpvb21XaW5kb3dPZmZldHk7YS53aW5kb3dPZmZzZXRMZWZ0PVxyXG4rYS5ueldpZHRoO2JyZWFrO2Nhc2UgMjphLm9wdGlvbnMuem9vbVdpbmRvd0hlaWdodD5hLm56SGVpZ2h0JiYoYS53aW5kb3dPZmZzZXRUb3A9LTEqKGEub3B0aW9ucy56b29tV2luZG93SGVpZ2h0LzItYS5uekhlaWdodC8yKSxhLndpbmRvd09mZnNldExlZnQ9YS5ueldpZHRoKTticmVhaztjYXNlIDM6YS53aW5kb3dPZmZzZXRUb3A9YS5uekhlaWdodC1hLnpvb21XaW5kb3cuaGVpZ2h0KCktMiphLm9wdGlvbnMuYm9yZGVyU2l6ZTthLndpbmRvd09mZnNldExlZnQ9YS5ueldpZHRoO2JyZWFrO2Nhc2UgNDphLndpbmRvd09mZnNldFRvcD1hLm56SGVpZ2h0O2Eud2luZG93T2Zmc2V0TGVmdD1hLm56V2lkdGg7YnJlYWs7Y2FzZSA1OmEud2luZG93T2Zmc2V0VG9wPWEubnpIZWlnaHQ7YS53aW5kb3dPZmZzZXRMZWZ0PWEubnpXaWR0aC1hLnpvb21XaW5kb3cud2lkdGgoKS0yKmEub3B0aW9ucy5ib3JkZXJTaXplO2JyZWFrO2Nhc2UgNjphLm9wdGlvbnMuem9vbVdpbmRvd0hlaWdodD5cclxuYS5uekhlaWdodCYmKGEud2luZG93T2Zmc2V0VG9wPWEubnpIZWlnaHQsYS53aW5kb3dPZmZzZXRMZWZ0PS0xKihhLm9wdGlvbnMuem9vbVdpbmRvd1dpZHRoLzItYS5ueldpZHRoLzIrMiphLm9wdGlvbnMuYm9yZGVyU2l6ZSkpO2JyZWFrO2Nhc2UgNzphLndpbmRvd09mZnNldFRvcD1hLm56SGVpZ2h0O2Eud2luZG93T2Zmc2V0TGVmdD0wO2JyZWFrO2Nhc2UgODphLndpbmRvd09mZnNldFRvcD1hLm56SGVpZ2h0O2Eud2luZG93T2Zmc2V0TGVmdD0tMSooYS56b29tV2luZG93LndpZHRoKCkrMiphLm9wdGlvbnMuYm9yZGVyU2l6ZSk7YnJlYWs7Y2FzZSA5OmEud2luZG93T2Zmc2V0VG9wPWEubnpIZWlnaHQtYS56b29tV2luZG93LmhlaWdodCgpLTIqYS5vcHRpb25zLmJvcmRlclNpemU7YS53aW5kb3dPZmZzZXRMZWZ0PS0xKihhLnpvb21XaW5kb3cud2lkdGgoKSsyKmEub3B0aW9ucy5ib3JkZXJTaXplKTticmVhaztjYXNlIDEwOmEub3B0aW9ucy56b29tV2luZG93SGVpZ2h0PmEubnpIZWlnaHQmJlxyXG4oYS53aW5kb3dPZmZzZXRUb3A9LTEqKGEub3B0aW9ucy56b29tV2luZG93SGVpZ2h0LzItYS5uekhlaWdodC8yKSxhLndpbmRvd09mZnNldExlZnQ9LTEqKGEuem9vbVdpbmRvdy53aWR0aCgpKzIqYS5vcHRpb25zLmJvcmRlclNpemUpKTticmVhaztjYXNlIDExOmEud2luZG93T2Zmc2V0VG9wPWEub3B0aW9ucy56b29tV2luZG93T2ZmZXR5O2Eud2luZG93T2Zmc2V0TGVmdD0tMSooYS56b29tV2luZG93LndpZHRoKCkrMiphLm9wdGlvbnMuYm9yZGVyU2l6ZSk7YnJlYWs7Y2FzZSAxMjphLndpbmRvd09mZnNldFRvcD0tMSooYS56b29tV2luZG93LmhlaWdodCgpKzIqYS5vcHRpb25zLmJvcmRlclNpemUpO2Eud2luZG93T2Zmc2V0TGVmdD0tMSooYS56b29tV2luZG93LndpZHRoKCkrMiphLm9wdGlvbnMuYm9yZGVyU2l6ZSk7YnJlYWs7Y2FzZSAxMzphLndpbmRvd09mZnNldFRvcD0tMSooYS56b29tV2luZG93LmhlaWdodCgpKzIqYS5vcHRpb25zLmJvcmRlclNpemUpO2Eud2luZG93T2Zmc2V0TGVmdD1cclxuMDticmVhaztjYXNlIDE0OmEub3B0aW9ucy56b29tV2luZG93SGVpZ2h0PmEubnpIZWlnaHQmJihhLndpbmRvd09mZnNldFRvcD0tMSooYS56b29tV2luZG93LmhlaWdodCgpKzIqYS5vcHRpb25zLmJvcmRlclNpemUpLGEud2luZG93T2Zmc2V0TGVmdD0tMSooYS5vcHRpb25zLnpvb21XaW5kb3dXaWR0aC8yLWEubnpXaWR0aC8yKzIqYS5vcHRpb25zLmJvcmRlclNpemUpKTticmVhaztjYXNlIDE1OmEud2luZG93T2Zmc2V0VG9wPS0xKihhLnpvb21XaW5kb3cuaGVpZ2h0KCkrMiphLm9wdGlvbnMuYm9yZGVyU2l6ZSk7YS53aW5kb3dPZmZzZXRMZWZ0PWEubnpXaWR0aC1hLnpvb21XaW5kb3cud2lkdGgoKS0yKmEub3B0aW9ucy5ib3JkZXJTaXplO2JyZWFrO2Nhc2UgMTY6YS53aW5kb3dPZmZzZXRUb3A9LTEqKGEuem9vbVdpbmRvdy5oZWlnaHQoKSsyKmEub3B0aW9ucy5ib3JkZXJTaXplKTthLndpbmRvd09mZnNldExlZnQ9YS5ueldpZHRoO2JyZWFrO2RlZmF1bHQ6YS53aW5kb3dPZmZzZXRUb3A9XHJcbmEub3B0aW9ucy56b29tV2luZG93T2ZmZXR5LGEud2luZG93T2Zmc2V0TGVmdD1hLm56V2lkdGh9YS5pc1dpbmRvd1NldD0hMDthLndpbmRvd09mZnNldFRvcCs9YS5vcHRpb25zLnpvb21XaW5kb3dPZmZldHk7YS53aW5kb3dPZmZzZXRMZWZ0Kz1hLm9wdGlvbnMuem9vbVdpbmRvd09mZmV0eDthLnpvb21XaW5kb3cuY3NzKHt0b3A6YS53aW5kb3dPZmZzZXRUb3B9KTthLnpvb21XaW5kb3cuY3NzKHtsZWZ0OmEud2luZG93T2Zmc2V0TGVmdH0pO1wiaW5uZXJcIj09YS5vcHRpb25zLnpvb21UeXBlJiYoYS56b29tV2luZG93LmNzcyh7dG9wOjB9KSxhLnpvb21XaW5kb3cuY3NzKHtsZWZ0OjB9KSk7YS53aW5kb3dMZWZ0UG9zPVN0cmluZygtMSooKGIucGFnZVgtYS5uek9mZnNldC5sZWZ0KSphLndpZHRoUmF0aW8tYS56b29tV2luZG93LndpZHRoKCkvMikpO2Eud2luZG93VG9wUG9zPVN0cmluZygtMSooKGIucGFnZVktYS5uek9mZnNldC50b3ApKmEuaGVpZ2h0UmF0aW8tYS56b29tV2luZG93LmhlaWdodCgpL1xyXG4yKSk7YS5FdG9wcG9zJiYoYS53aW5kb3dUb3BQb3M9MCk7YS5FbG9wcG9zJiYoYS53aW5kb3dMZWZ0UG9zPTApO2EuRWJvcHBvcyYmKGEud2luZG93VG9wUG9zPS0xKihhLmxhcmdlSGVpZ2h0L2EuY3VycmVudFpvb21MZXZlbC1hLnpvb21XaW5kb3cuaGVpZ2h0KCkpKTthLkVyb3Bwb3MmJihhLndpbmRvd0xlZnRQb3M9LTEqKGEubGFyZ2VXaWR0aC9hLmN1cnJlbnRab29tTGV2ZWwtYS56b29tV2luZG93LndpZHRoKCkpKTthLmZ1bGxoZWlnaHQmJihhLndpbmRvd1RvcFBvcz0wKTthLmZ1bGx3aWR0aCYmKGEud2luZG93TGVmdFBvcz0wKTtpZihcIndpbmRvd1wiPT1hLm9wdGlvbnMuem9vbVR5cGV8fFwiaW5uZXJcIj09YS5vcHRpb25zLnpvb21UeXBlKTE9PWEuem9vbUxvY2smJigxPj1hLndpZHRoUmF0aW8mJihhLndpbmRvd0xlZnRQb3M9MCksMT49YS5oZWlnaHRSYXRpbyYmKGEud2luZG93VG9wUG9zPTApKSxhLmxhcmdlSGVpZ2h0PGEub3B0aW9ucy56b29tV2luZG93SGVpZ2h0JiYoYS53aW5kb3dUb3BQb3M9XHJcbjApLGEubGFyZ2VXaWR0aDxhLm9wdGlvbnMuem9vbVdpbmRvd1dpZHRoJiYoYS53aW5kb3dMZWZ0UG9zPTApLGEub3B0aW9ucy5lYXNpbmc/KGEueHB8fChhLnhwPTApLGEueXB8fChhLnlwPTApLGEubG9vcHx8KGEubG9vcD1zZXRJbnRlcnZhbChmdW5jdGlvbigpe2EueHArPShhLndpbmRvd0xlZnRQb3MtYS54cCkvYS5vcHRpb25zLmVhc2luZ0Ftb3VudDthLnlwKz0oYS53aW5kb3dUb3BQb3MtYS55cCkvYS5vcHRpb25zLmVhc2luZ0Ftb3VudDthLnNjcm9sbGluZ0xvY2s/KGNsZWFySW50ZXJ2YWwoYS5sb29wKSxhLnhwPWEud2luZG93TGVmdFBvcyxhLnlwPWEud2luZG93VG9wUG9zLGEueHA9LTEqKChiLnBhZ2VYLWEubnpPZmZzZXQubGVmdCkqYS53aWR0aFJhdGlvLWEuem9vbVdpbmRvdy53aWR0aCgpLzIpLGEueXA9LTEqKChiLnBhZ2VZLWEubnpPZmZzZXQudG9wKSphLmhlaWdodFJhdGlvLWEuem9vbVdpbmRvdy5oZWlnaHQoKS8yKSxhLmNoYW5nZUJnU2l6ZSYmKGEubnpIZWlnaHQ+XHJcbmEubnpXaWR0aD8oXCJsZW5zXCI9PWEub3B0aW9ucy56b29tVHlwZSYmYS56b29tTGVucy5jc3Moe1wiYmFja2dyb3VuZC1zaXplXCI6YS5sYXJnZVdpZHRoL2EubmV3dmFsdWVoZWlnaHQrXCJweCBcIithLmxhcmdlSGVpZ2h0L2EubmV3dmFsdWVoZWlnaHQrXCJweFwifSksYS56b29tV2luZG93LmNzcyh7XCJiYWNrZ3JvdW5kLXNpemVcIjphLmxhcmdlV2lkdGgvYS5uZXd2YWx1ZWhlaWdodCtcInB4IFwiK2EubGFyZ2VIZWlnaHQvYS5uZXd2YWx1ZWhlaWdodCtcInB4XCJ9KSk6KFwibGVuc1wiIT1hLm9wdGlvbnMuem9vbVR5cGUmJmEuem9vbUxlbnMuY3NzKHtcImJhY2tncm91bmQtc2l6ZVwiOmEubGFyZ2VXaWR0aC9hLm5ld3ZhbHVld2lkdGgrXCJweCBcIithLmxhcmdlSGVpZ2h0L2EubmV3dmFsdWVoZWlnaHQrXCJweFwifSksYS56b29tV2luZG93LmNzcyh7XCJiYWNrZ3JvdW5kLXNpemVcIjphLmxhcmdlV2lkdGgvYS5uZXd2YWx1ZXdpZHRoK1wicHggXCIrYS5sYXJnZUhlaWdodC9hLm5ld3ZhbHVld2lkdGgrXCJweFwifSkpLFxyXG5hLmNoYW5nZUJnU2l6ZT0hMSksYS56b29tV2luZG93LmNzcyh7YmFja2dyb3VuZFBvc2l0aW9uOmEud2luZG93TGVmdFBvcytcInB4IFwiK2Eud2luZG93VG9wUG9zK1wicHhcIn0pLGEuc2Nyb2xsaW5nTG9jaz0hMSxhLmxvb3A9ITEpOihhLmNoYW5nZUJnU2l6ZSYmKGEubnpIZWlnaHQ+YS5ueldpZHRoPyhcImxlbnNcIj09YS5vcHRpb25zLnpvb21UeXBlJiZhLnpvb21MZW5zLmNzcyh7XCJiYWNrZ3JvdW5kLXNpemVcIjphLmxhcmdlV2lkdGgvYS5uZXd2YWx1ZWhlaWdodCtcInB4IFwiK2EubGFyZ2VIZWlnaHQvYS5uZXd2YWx1ZWhlaWdodCtcInB4XCJ9KSxhLnpvb21XaW5kb3cuY3NzKHtcImJhY2tncm91bmQtc2l6ZVwiOmEubGFyZ2VXaWR0aC9hLm5ld3ZhbHVlaGVpZ2h0K1wicHggXCIrYS5sYXJnZUhlaWdodC9hLm5ld3ZhbHVlaGVpZ2h0K1wicHhcIn0pKTooXCJsZW5zXCIhPWEub3B0aW9ucy56b29tVHlwZSYmYS56b29tTGVucy5jc3Moe1wiYmFja2dyb3VuZC1zaXplXCI6YS5sYXJnZVdpZHRoL2EubmV3dmFsdWV3aWR0aCtcclxuXCJweCBcIithLmxhcmdlSGVpZ2h0L2EubmV3dmFsdWV3aWR0aCtcInB4XCJ9KSxhLnpvb21XaW5kb3cuY3NzKHtcImJhY2tncm91bmQtc2l6ZVwiOmEubGFyZ2VXaWR0aC9hLm5ld3ZhbHVld2lkdGgrXCJweCBcIithLmxhcmdlSGVpZ2h0L2EubmV3dmFsdWV3aWR0aCtcInB4XCJ9KSksYS5jaGFuZ2VCZ1NpemU9ITEpLGEuem9vbVdpbmRvdy5jc3Moe2JhY2tncm91bmRQb3NpdGlvbjphLnhwK1wicHggXCIrYS55cCtcInB4XCJ9KSl9LDE2KSkpOihhLmNoYW5nZUJnU2l6ZSYmKGEubnpIZWlnaHQ+YS5ueldpZHRoPyhcImxlbnNcIj09YS5vcHRpb25zLnpvb21UeXBlJiZhLnpvb21MZW5zLmNzcyh7XCJiYWNrZ3JvdW5kLXNpemVcIjphLmxhcmdlV2lkdGgvYS5uZXd2YWx1ZWhlaWdodCtcInB4IFwiK2EubGFyZ2VIZWlnaHQvYS5uZXd2YWx1ZWhlaWdodCtcInB4XCJ9KSxhLnpvb21XaW5kb3cuY3NzKHtcImJhY2tncm91bmQtc2l6ZVwiOmEubGFyZ2VXaWR0aC9hLm5ld3ZhbHVlaGVpZ2h0K1wicHggXCIrYS5sYXJnZUhlaWdodC9cclxuYS5uZXd2YWx1ZWhlaWdodCtcInB4XCJ9KSk6KFwibGVuc1wiPT1hLm9wdGlvbnMuem9vbVR5cGUmJmEuem9vbUxlbnMuY3NzKHtcImJhY2tncm91bmQtc2l6ZVwiOmEubGFyZ2VXaWR0aC9hLm5ld3ZhbHVld2lkdGgrXCJweCBcIithLmxhcmdlSGVpZ2h0L2EubmV3dmFsdWV3aWR0aCtcInB4XCJ9KSxhLmxhcmdlSGVpZ2h0L2EubmV3dmFsdWV3aWR0aDxhLm9wdGlvbnMuem9vbVdpbmRvd0hlaWdodD9hLnpvb21XaW5kb3cuY3NzKHtcImJhY2tncm91bmQtc2l6ZVwiOmEubGFyZ2VXaWR0aC9hLm5ld3ZhbHVld2lkdGgrXCJweCBcIithLmxhcmdlSGVpZ2h0L2EubmV3dmFsdWV3aWR0aCtcInB4XCJ9KTphLnpvb21XaW5kb3cuY3NzKHtcImJhY2tncm91bmQtc2l6ZVwiOmEubGFyZ2VXaWR0aC9hLm5ld3ZhbHVlaGVpZ2h0K1wicHggXCIrYS5sYXJnZUhlaWdodC9hLm5ld3ZhbHVlaGVpZ2h0K1wicHhcIn0pKSxhLmNoYW5nZUJnU2l6ZT0hMSksYS56b29tV2luZG93LmNzcyh7YmFja2dyb3VuZFBvc2l0aW9uOmEud2luZG93TGVmdFBvcytcclxuXCJweCBcIithLndpbmRvd1RvcFBvcytcInB4XCJ9KSl9LHNldFRpbnRQb3NpdGlvbjpmdW5jdGlvbihiKXt0aGlzLm56T2Zmc2V0PXRoaXMuJGVsZW0ub2Zmc2V0KCk7dGhpcy50aW50cG9zPVN0cmluZygtMSooYi5wYWdlWC10aGlzLm56T2Zmc2V0LmxlZnQtdGhpcy56b29tTGVucy53aWR0aCgpLzIpKTt0aGlzLnRpbnRwb3N5PVN0cmluZygtMSooYi5wYWdlWS10aGlzLm56T2Zmc2V0LnRvcC10aGlzLnpvb21MZW5zLmhlaWdodCgpLzIpKTt0aGlzLkV0b3Bwb3MmJih0aGlzLnRpbnRwb3N5PTApO3RoaXMuRWxvcHBvcyYmKHRoaXMudGludHBvcz0wKTt0aGlzLkVib3Bwb3MmJih0aGlzLnRpbnRwb3N5PS0xKih0aGlzLm56SGVpZ2h0LXRoaXMuem9vbUxlbnMuaGVpZ2h0KCktMip0aGlzLm9wdGlvbnMubGVuc0JvcmRlclNpemUpKTt0aGlzLkVyb3Bwb3MmJih0aGlzLnRpbnRwb3M9LTEqKHRoaXMubnpXaWR0aC10aGlzLnpvb21MZW5zLndpZHRoKCktMip0aGlzLm9wdGlvbnMubGVuc0JvcmRlclNpemUpKTtcclxudGhpcy5vcHRpb25zLnRpbnQmJih0aGlzLmZ1bGxoZWlnaHQmJih0aGlzLnRpbnRwb3N5PTApLHRoaXMuZnVsbHdpZHRoJiYodGhpcy50aW50cG9zPTApLHRoaXMuem9vbVRpbnRJbWFnZS5jc3Moe2xlZnQ6dGhpcy50aW50cG9zK1wicHhcIn0pLHRoaXMuem9vbVRpbnRJbWFnZS5jc3Moe3RvcDp0aGlzLnRpbnRwb3N5K1wicHhcIn0pKX0sc3dhcHRoZWltYWdlOmZ1bmN0aW9uKGIsYSl7dmFyIGM9dGhpcyxlPW5ldyBJbWFnZTtjLm9wdGlvbnMubG9hZGluZ0ljb24mJihjLnNwaW5uZXI9ZChcIjxkaXYgc3R5bGU9XFxcImJhY2tncm91bmQ6IHVybCgnXCIrYy5vcHRpb25zLmxvYWRpbmdJY29uK1wiJykgbm8tcmVwZWF0IGNlbnRlcjtoZWlnaHQ6XCIrYy5uekhlaWdodCtcInB4O3dpZHRoOlwiK2MubnpXaWR0aCsncHg7ei1pbmRleDogMjAwMDtwb3NpdGlvbjogYWJzb2x1dGU7IGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XCI+PC9kaXY+JyksYy4kZWxlbS5hZnRlcihjLnNwaW5uZXIpKTtcclxuYy5vcHRpb25zLm9uSW1hZ2VTd2FwKGMuJGVsZW0pO2Uub25sb2FkPWZ1bmN0aW9uKCl7Yy5sYXJnZVdpZHRoPWUud2lkdGg7Yy5sYXJnZUhlaWdodD1lLmhlaWdodDtjLnpvb21JbWFnZT1hO2Muem9vbVdpbmRvdy5jc3Moe1wiYmFja2dyb3VuZC1zaXplXCI6Yy5sYXJnZVdpZHRoK1wicHggXCIrYy5sYXJnZUhlaWdodCtcInB4XCJ9KTtjLnpvb21XaW5kb3cuY3NzKHtcImJhY2tncm91bmQtc2l6ZVwiOmMubGFyZ2VXaWR0aCtcInB4IFwiK2MubGFyZ2VIZWlnaHQrXCJweFwifSk7Yy5zd2FwQWN0aW9uKGIsYSl9O2Uuc3JjPWF9LHN3YXBBY3Rpb246ZnVuY3Rpb24oYixhKXt2YXIgYz10aGlzLGU9bmV3IEltYWdlO2Uub25sb2FkPWZ1bmN0aW9uKCl7Yy5uekhlaWdodD1lLmhlaWdodDtjLm56V2lkdGg9ZS53aWR0aDtjLm9wdGlvbnMub25JbWFnZVN3YXBDb21wbGV0ZShjLiRlbGVtKTtjLmRvbmVDYWxsYmFjaygpfTtlLnNyYz1iO2MuY3VycmVudFpvb21MZXZlbD1jLm9wdGlvbnMuem9vbUxldmVsO2Mub3B0aW9ucy5tYXhab29tTGV2ZWw9XHJcbiExO1wibGVuc1wiPT1jLm9wdGlvbnMuem9vbVR5cGUmJmMuem9vbUxlbnMuY3NzKHtiYWNrZ3JvdW5kSW1hZ2U6XCJ1cmwoJ1wiK2ErXCInKVwifSk7XCJ3aW5kb3dcIj09Yy5vcHRpb25zLnpvb21UeXBlJiZjLnpvb21XaW5kb3cuY3NzKHtiYWNrZ3JvdW5kSW1hZ2U6XCJ1cmwoJ1wiK2ErXCInKVwifSk7XCJpbm5lclwiPT1jLm9wdGlvbnMuem9vbVR5cGUmJmMuem9vbVdpbmRvdy5jc3Moe2JhY2tncm91bmRJbWFnZTpcInVybCgnXCIrYStcIicpXCJ9KTtjLmN1cnJlbnRJbWFnZT1hO2lmKGMub3B0aW9ucy5pbWFnZUNyb3NzZmFkZSl7dmFyIGY9Yy4kZWxlbSxnPWYuY2xvbmUoKTtjLiRlbGVtLmF0dHIoXCJzcmNcIixiKTtjLiRlbGVtLmFmdGVyKGcpO2cuc3RvcCghMCkuZmFkZU91dChjLm9wdGlvbnMuaW1hZ2VDcm9zc2ZhZGUsZnVuY3Rpb24oKXtkKHRoaXMpLnJlbW92ZSgpfSk7Yy4kZWxlbS53aWR0aChcImF1dG9cIikucmVtb3ZlQXR0cihcIndpZHRoXCIpO2MuJGVsZW0uaGVpZ2h0KFwiYXV0b1wiKS5yZW1vdmVBdHRyKFwiaGVpZ2h0XCIpO1xyXG5mLmZhZGVJbihjLm9wdGlvbnMuaW1hZ2VDcm9zc2ZhZGUpO2Mub3B0aW9ucy50aW50JiZcImlubmVyXCIhPWMub3B0aW9ucy56b29tVHlwZSYmKGY9Yy56b29tVGludEltYWdlLGc9Zi5jbG9uZSgpLGMuem9vbVRpbnRJbWFnZS5hdHRyKFwic3JjXCIsYSksYy56b29tVGludEltYWdlLmFmdGVyKGcpLGcuc3RvcCghMCkuZmFkZU91dChjLm9wdGlvbnMuaW1hZ2VDcm9zc2ZhZGUsZnVuY3Rpb24oKXtkKHRoaXMpLnJlbW92ZSgpfSksZi5mYWRlSW4oYy5vcHRpb25zLmltYWdlQ3Jvc3NmYWRlKSxjLnpvb21UaW50LmNzcyh7aGVpZ2h0OmMuJGVsZW0uaGVpZ2h0KCl9KSxjLnpvb21UaW50LmNzcyh7d2lkdGg6Yy4kZWxlbS53aWR0aCgpfSkpO2Muem9vbUNvbnRhaW5lci5jc3MoXCJoZWlnaHRcIixjLiRlbGVtLmhlaWdodCgpKTtjLnpvb21Db250YWluZXIuY3NzKFwid2lkdGhcIixjLiRlbGVtLndpZHRoKCkpO1wiaW5uZXJcIiE9Yy5vcHRpb25zLnpvb21UeXBlfHxjLm9wdGlvbnMuY29uc3RyYWluVHlwZXx8XHJcbihjLnpvb21XcmFwLnBhcmVudCgpLmNzcyhcImhlaWdodFwiLGMuJGVsZW0uaGVpZ2h0KCkpLGMuem9vbVdyYXAucGFyZW50KCkuY3NzKFwid2lkdGhcIixjLiRlbGVtLndpZHRoKCkpLGMuem9vbVdpbmRvdy5jc3MoXCJoZWlnaHRcIixjLiRlbGVtLmhlaWdodCgpKSxjLnpvb21XaW5kb3cuY3NzKFwid2lkdGhcIixjLiRlbGVtLndpZHRoKCkpKX1lbHNlIGMuJGVsZW0uYXR0cihcInNyY1wiLGIpLGMub3B0aW9ucy50aW50JiYoYy56b29tVGludEltYWdlLmF0dHIoXCJzcmNcIixhKSxjLnpvb21UaW50SW1hZ2UuYXR0cihcImhlaWdodFwiLGMuJGVsZW0uaGVpZ2h0KCkpLGMuem9vbVRpbnRJbWFnZS5jc3Moe2hlaWdodDpjLiRlbGVtLmhlaWdodCgpfSksYy56b29tVGludC5jc3Moe2hlaWdodDpjLiRlbGVtLmhlaWdodCgpfSkpLGMuem9vbUNvbnRhaW5lci5jc3MoXCJoZWlnaHRcIixjLiRlbGVtLmhlaWdodCgpKSxjLnpvb21Db250YWluZXIuY3NzKFwid2lkdGhcIixjLiRlbGVtLndpZHRoKCkpO2Mub3B0aW9ucy5pbWFnZUNyb3NzZmFkZSYmXHJcbihjLnpvb21XcmFwLmNzcyhcImhlaWdodFwiLGMuJGVsZW0uaGVpZ2h0KCkpLGMuem9vbVdyYXAuY3NzKFwid2lkdGhcIixjLiRlbGVtLndpZHRoKCkpKTtjLm9wdGlvbnMuY29uc3RyYWluVHlwZSYmKFwiaGVpZ2h0XCI9PWMub3B0aW9ucy5jb25zdHJhaW5UeXBlJiYoYy56b29tQ29udGFpbmVyLmNzcyhcImhlaWdodFwiLGMub3B0aW9ucy5jb25zdHJhaW5TaXplKSxjLnpvb21Db250YWluZXIuY3NzKFwid2lkdGhcIixcImF1dG9cIiksYy5vcHRpb25zLmltYWdlQ3Jvc3NmYWRlPyhjLnpvb21XcmFwLmNzcyhcImhlaWdodFwiLGMub3B0aW9ucy5jb25zdHJhaW5TaXplKSxjLnpvb21XcmFwLmNzcyhcIndpZHRoXCIsXCJhdXRvXCIpLGMuY29uc3R3aWR0aD1jLnpvb21XcmFwLndpZHRoKCkpOihjLiRlbGVtLmNzcyhcImhlaWdodFwiLGMub3B0aW9ucy5jb25zdHJhaW5TaXplKSxjLiRlbGVtLmNzcyhcIndpZHRoXCIsXCJhdXRvXCIpLGMuY29uc3R3aWR0aD1jLiRlbGVtLndpZHRoKCkpLFwiaW5uZXJcIj09Yy5vcHRpb25zLnpvb21UeXBlJiZcclxuKGMuem9vbVdyYXAucGFyZW50KCkuY3NzKFwiaGVpZ2h0XCIsYy5vcHRpb25zLmNvbnN0cmFpblNpemUpLGMuem9vbVdyYXAucGFyZW50KCkuY3NzKFwid2lkdGhcIixjLmNvbnN0d2lkdGgpLGMuem9vbVdpbmRvdy5jc3MoXCJoZWlnaHRcIixjLm9wdGlvbnMuY29uc3RyYWluU2l6ZSksYy56b29tV2luZG93LmNzcyhcIndpZHRoXCIsYy5jb25zdHdpZHRoKSksYy5vcHRpb25zLnRpbnQmJihjLnRpbnRDb250YWluZXIuY3NzKFwiaGVpZ2h0XCIsYy5vcHRpb25zLmNvbnN0cmFpblNpemUpLGMudGludENvbnRhaW5lci5jc3MoXCJ3aWR0aFwiLGMuY29uc3R3aWR0aCksYy56b29tVGludC5jc3MoXCJoZWlnaHRcIixjLm9wdGlvbnMuY29uc3RyYWluU2l6ZSksYy56b29tVGludC5jc3MoXCJ3aWR0aFwiLGMuY29uc3R3aWR0aCksYy56b29tVGludEltYWdlLmNzcyhcImhlaWdodFwiLGMub3B0aW9ucy5jb25zdHJhaW5TaXplKSxjLnpvb21UaW50SW1hZ2UuY3NzKFwid2lkdGhcIixjLmNvbnN0d2lkdGgpKSksXCJ3aWR0aFwiPT1cclxuYy5vcHRpb25zLmNvbnN0cmFpblR5cGUmJihjLnpvb21Db250YWluZXIuY3NzKFwiaGVpZ2h0XCIsXCJhdXRvXCIpLGMuem9vbUNvbnRhaW5lci5jc3MoXCJ3aWR0aFwiLGMub3B0aW9ucy5jb25zdHJhaW5TaXplKSxjLm9wdGlvbnMuaW1hZ2VDcm9zc2ZhZGU/KGMuem9vbVdyYXAuY3NzKFwiaGVpZ2h0XCIsXCJhdXRvXCIpLGMuem9vbVdyYXAuY3NzKFwid2lkdGhcIixjLm9wdGlvbnMuY29uc3RyYWluU2l6ZSksYy5jb25zdGhlaWdodD1jLnpvb21XcmFwLmhlaWdodCgpKTooYy4kZWxlbS5jc3MoXCJoZWlnaHRcIixcImF1dG9cIiksYy4kZWxlbS5jc3MoXCJ3aWR0aFwiLGMub3B0aW9ucy5jb25zdHJhaW5TaXplKSxjLmNvbnN0aGVpZ2h0PWMuJGVsZW0uaGVpZ2h0KCkpLFwiaW5uZXJcIj09Yy5vcHRpb25zLnpvb21UeXBlJiYoYy56b29tV3JhcC5wYXJlbnQoKS5jc3MoXCJoZWlnaHRcIixjLmNvbnN0aGVpZ2h0KSxjLnpvb21XcmFwLnBhcmVudCgpLmNzcyhcIndpZHRoXCIsYy5vcHRpb25zLmNvbnN0cmFpblNpemUpLGMuem9vbVdpbmRvdy5jc3MoXCJoZWlnaHRcIixcclxuYy5jb25zdGhlaWdodCksYy56b29tV2luZG93LmNzcyhcIndpZHRoXCIsYy5vcHRpb25zLmNvbnN0cmFpblNpemUpKSxjLm9wdGlvbnMudGludCYmKGMudGludENvbnRhaW5lci5jc3MoXCJoZWlnaHRcIixjLmNvbnN0aGVpZ2h0KSxjLnRpbnRDb250YWluZXIuY3NzKFwid2lkdGhcIixjLm9wdGlvbnMuY29uc3RyYWluU2l6ZSksYy56b29tVGludC5jc3MoXCJoZWlnaHRcIixjLmNvbnN0aGVpZ2h0KSxjLnpvb21UaW50LmNzcyhcIndpZHRoXCIsYy5vcHRpb25zLmNvbnN0cmFpblNpemUpLGMuem9vbVRpbnRJbWFnZS5jc3MoXCJoZWlnaHRcIixjLmNvbnN0aGVpZ2h0KSxjLnpvb21UaW50SW1hZ2UuY3NzKFwid2lkdGhcIixjLm9wdGlvbnMuY29uc3RyYWluU2l6ZSkpKSl9LGRvbmVDYWxsYmFjazpmdW5jdGlvbigpe3RoaXMub3B0aW9ucy5sb2FkaW5nSWNvbiYmdGhpcy5zcGlubmVyLmhpZGUoKTt0aGlzLm56T2Zmc2V0PXRoaXMuJGVsZW0ub2Zmc2V0KCk7dGhpcy5ueldpZHRoPXRoaXMuJGVsZW0ud2lkdGgoKTtcclxudGhpcy5uekhlaWdodD10aGlzLiRlbGVtLmhlaWdodCgpO3RoaXMuY3VycmVudFpvb21MZXZlbD10aGlzLm9wdGlvbnMuem9vbUxldmVsO3RoaXMud2lkdGhSYXRpbz10aGlzLmxhcmdlV2lkdGgvdGhpcy5ueldpZHRoO3RoaXMuaGVpZ2h0UmF0aW89dGhpcy5sYXJnZUhlaWdodC90aGlzLm56SGVpZ2h0O1wid2luZG93XCI9PXRoaXMub3B0aW9ucy56b29tVHlwZSYmKGxlbnNIZWlnaHQ9dGhpcy5uekhlaWdodDx0aGlzLm9wdGlvbnMuem9vbVdpbmRvd1dpZHRoL3RoaXMud2lkdGhSYXRpbz90aGlzLm56SGVpZ2h0OlN0cmluZyh0aGlzLm9wdGlvbnMuem9vbVdpbmRvd0hlaWdodC90aGlzLmhlaWdodFJhdGlvKSxsZW5zV2lkdGg9dGhpcy5vcHRpb25zLnpvb21XaW5kb3dXaWR0aDx0aGlzLm9wdGlvbnMuem9vbVdpbmRvd1dpZHRoP3RoaXMubnpXaWR0aDp0aGlzLm9wdGlvbnMuem9vbVdpbmRvd1dpZHRoL3RoaXMud2lkdGhSYXRpbyx0aGlzLnpvb21MZW5zJiYodGhpcy56b29tTGVucy5jc3MoXCJ3aWR0aFwiLFxyXG5sZW5zV2lkdGgpLHRoaXMuem9vbUxlbnMuY3NzKFwiaGVpZ2h0XCIsbGVuc0hlaWdodCkpKX0sZ2V0Q3VycmVudEltYWdlOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuem9vbUltYWdlfSxnZXRHYWxsZXJ5TGlzdDpmdW5jdGlvbigpe3ZhciBiPXRoaXM7Yi5nYWxsZXJ5bGlzdD1bXTtiLm9wdGlvbnMuZ2FsbGVyeT9kKFwiI1wiK2Iub3B0aW9ucy5nYWxsZXJ5K1wiIGFcIikuZWFjaChmdW5jdGlvbigpe3ZhciBhPVwiXCI7ZCh0aGlzKS5kYXRhKFwiem9vbS1pbWFnZVwiKT9hPWQodGhpcykuZGF0YShcInpvb20taW1hZ2VcIik6ZCh0aGlzKS5kYXRhKFwiaW1hZ2VcIikmJihhPWQodGhpcykuZGF0YShcImltYWdlXCIpKTthPT1iLnpvb21JbWFnZT9iLmdhbGxlcnlsaXN0LnVuc2hpZnQoe2hyZWY6XCJcIithK1wiXCIsdGl0bGU6ZCh0aGlzKS5maW5kKFwiaW1nXCIpLmF0dHIoXCJ0aXRsZVwiKX0pOmIuZ2FsbGVyeWxpc3QucHVzaCh7aHJlZjpcIlwiK2ErXCJcIix0aXRsZTpkKHRoaXMpLmZpbmQoXCJpbWdcIikuYXR0cihcInRpdGxlXCIpfSl9KTpcclxuYi5nYWxsZXJ5bGlzdC5wdXNoKHtocmVmOlwiXCIrYi56b29tSW1hZ2UrXCJcIix0aXRsZTpkKHRoaXMpLmZpbmQoXCJpbWdcIikuYXR0cihcInRpdGxlXCIpfSk7cmV0dXJuIGIuZ2FsbGVyeWxpc3R9LGNoYW5nZVpvb21MZXZlbDpmdW5jdGlvbihiKXt0aGlzLnNjcm9sbGluZ0xvY2s9ITA7dGhpcy5uZXd2YWx1ZT1wYXJzZUZsb2F0KGIpLnRvRml4ZWQoMik7bmV3dmFsdWU9cGFyc2VGbG9hdChiKS50b0ZpeGVkKDIpO21heGhlaWdodG5ld3ZhbHVlPXRoaXMubGFyZ2VIZWlnaHQvKHRoaXMub3B0aW9ucy56b29tV2luZG93SGVpZ2h0L3RoaXMubnpIZWlnaHQqdGhpcy5uekhlaWdodCk7bWF4d2lkdGh0bmV3dmFsdWU9dGhpcy5sYXJnZVdpZHRoLyh0aGlzLm9wdGlvbnMuem9vbVdpbmRvd1dpZHRoL3RoaXMubnpXaWR0aCp0aGlzLm56V2lkdGgpO1wiaW5uZXJcIiE9dGhpcy5vcHRpb25zLnpvb21UeXBlJiYobWF4aGVpZ2h0bmV3dmFsdWU8PW5ld3ZhbHVlPyh0aGlzLmhlaWdodFJhdGlvPXRoaXMubGFyZ2VIZWlnaHQvXHJcbm1heGhlaWdodG5ld3ZhbHVlL3RoaXMubnpIZWlnaHQsdGhpcy5uZXd2YWx1ZWhlaWdodD1tYXhoZWlnaHRuZXd2YWx1ZSx0aGlzLmZ1bGxoZWlnaHQ9ITApOih0aGlzLmhlaWdodFJhdGlvPXRoaXMubGFyZ2VIZWlnaHQvbmV3dmFsdWUvdGhpcy5uekhlaWdodCx0aGlzLm5ld3ZhbHVlaGVpZ2h0PW5ld3ZhbHVlLHRoaXMuZnVsbGhlaWdodD0hMSksbWF4d2lkdGh0bmV3dmFsdWU8PW5ld3ZhbHVlPyh0aGlzLndpZHRoUmF0aW89dGhpcy5sYXJnZVdpZHRoL21heHdpZHRodG5ld3ZhbHVlL3RoaXMubnpXaWR0aCx0aGlzLm5ld3ZhbHVld2lkdGg9bWF4d2lkdGh0bmV3dmFsdWUsdGhpcy5mdWxsd2lkdGg9ITApOih0aGlzLndpZHRoUmF0aW89dGhpcy5sYXJnZVdpZHRoL25ld3ZhbHVlL3RoaXMubnpXaWR0aCx0aGlzLm5ld3ZhbHVld2lkdGg9bmV3dmFsdWUsdGhpcy5mdWxsd2lkdGg9ITEpLFwibGVuc1wiPT10aGlzLm9wdGlvbnMuem9vbVR5cGUmJihtYXhoZWlnaHRuZXd2YWx1ZTw9bmV3dmFsdWU/XHJcbih0aGlzLmZ1bGx3aWR0aD0hMCx0aGlzLm5ld3ZhbHVld2lkdGg9bWF4aGVpZ2h0bmV3dmFsdWUpOih0aGlzLndpZHRoUmF0aW89dGhpcy5sYXJnZVdpZHRoL25ld3ZhbHVlL3RoaXMubnpXaWR0aCx0aGlzLm5ld3ZhbHVld2lkdGg9bmV3dmFsdWUsdGhpcy5mdWxsd2lkdGg9ITEpKSk7XCJpbm5lclwiPT10aGlzLm9wdGlvbnMuem9vbVR5cGUmJihtYXhoZWlnaHRuZXd2YWx1ZT1wYXJzZUZsb2F0KHRoaXMubGFyZ2VIZWlnaHQvdGhpcy5uekhlaWdodCkudG9GaXhlZCgyKSxtYXh3aWR0aHRuZXd2YWx1ZT1wYXJzZUZsb2F0KHRoaXMubGFyZ2VXaWR0aC90aGlzLm56V2lkdGgpLnRvRml4ZWQoMiksbmV3dmFsdWU+bWF4aGVpZ2h0bmV3dmFsdWUmJihuZXd2YWx1ZT1tYXhoZWlnaHRuZXd2YWx1ZSksbmV3dmFsdWU+bWF4d2lkdGh0bmV3dmFsdWUmJihuZXd2YWx1ZT1tYXh3aWR0aHRuZXd2YWx1ZSksbWF4aGVpZ2h0bmV3dmFsdWU8PW5ld3ZhbHVlPyh0aGlzLmhlaWdodFJhdGlvPXRoaXMubGFyZ2VIZWlnaHQvXHJcbm5ld3ZhbHVlL3RoaXMubnpIZWlnaHQsdGhpcy5uZXd2YWx1ZWhlaWdodD1uZXd2YWx1ZT5tYXhoZWlnaHRuZXd2YWx1ZT9tYXhoZWlnaHRuZXd2YWx1ZTpuZXd2YWx1ZSx0aGlzLmZ1bGxoZWlnaHQ9ITApOih0aGlzLmhlaWdodFJhdGlvPXRoaXMubGFyZ2VIZWlnaHQvbmV3dmFsdWUvdGhpcy5uekhlaWdodCx0aGlzLm5ld3ZhbHVlaGVpZ2h0PW5ld3ZhbHVlPm1heGhlaWdodG5ld3ZhbHVlP21heGhlaWdodG5ld3ZhbHVlOm5ld3ZhbHVlLHRoaXMuZnVsbGhlaWdodD0hMSksbWF4d2lkdGh0bmV3dmFsdWU8PW5ld3ZhbHVlPyh0aGlzLndpZHRoUmF0aW89dGhpcy5sYXJnZVdpZHRoL25ld3ZhbHVlL3RoaXMubnpXaWR0aCx0aGlzLm5ld3ZhbHVld2lkdGg9bmV3dmFsdWU+bWF4d2lkdGh0bmV3dmFsdWU/bWF4d2lkdGh0bmV3dmFsdWU6bmV3dmFsdWUsdGhpcy5mdWxsd2lkdGg9ITApOih0aGlzLndpZHRoUmF0aW89dGhpcy5sYXJnZVdpZHRoL25ld3ZhbHVlL3RoaXMubnpXaWR0aCx0aGlzLm5ld3ZhbHVld2lkdGg9XHJcbm5ld3ZhbHVlLHRoaXMuZnVsbHdpZHRoPSExKSk7c2NyY29udGludWU9ITE7XCJpbm5lclwiPT10aGlzLm9wdGlvbnMuem9vbVR5cGUmJih0aGlzLm56V2lkdGg+dGhpcy5uekhlaWdodCYmKHRoaXMubmV3dmFsdWV3aWR0aDw9bWF4d2lkdGh0bmV3dmFsdWU/c2NyY29udGludWU9ITA6KHNjcmNvbnRpbnVlPSExLHRoaXMuZnVsbHdpZHRoPXRoaXMuZnVsbGhlaWdodD0hMCkpLHRoaXMubnpIZWlnaHQ+dGhpcy5ueldpZHRoJiYodGhpcy5uZXd2YWx1ZXdpZHRoPD1tYXh3aWR0aHRuZXd2YWx1ZT9zY3Jjb250aW51ZT0hMDooc2NyY29udGludWU9ITEsdGhpcy5mdWxsd2lkdGg9dGhpcy5mdWxsaGVpZ2h0PSEwKSkpO1wiaW5uZXJcIiE9dGhpcy5vcHRpb25zLnpvb21UeXBlJiYoc2NyY29udGludWU9ITApO3NjcmNvbnRpbnVlJiYodGhpcy56b29tTG9jaz0wLHRoaXMuY2hhbmdlWm9vbT0hMCx0aGlzLm9wdGlvbnMuem9vbVdpbmRvd0hlaWdodC90aGlzLmhlaWdodFJhdGlvPD10aGlzLm56SGVpZ2h0JiZcclxuKHRoaXMuY3VycmVudFpvb21MZXZlbD10aGlzLm5ld3ZhbHVlaGVpZ2h0LFwibGVuc1wiIT10aGlzLm9wdGlvbnMuem9vbVR5cGUmJlwiaW5uZXJcIiE9dGhpcy5vcHRpb25zLnpvb21UeXBlJiYodGhpcy5jaGFuZ2VCZ1NpemU9ITAsdGhpcy56b29tTGVucy5jc3Moe2hlaWdodDpTdHJpbmcodGhpcy5vcHRpb25zLnpvb21XaW5kb3dIZWlnaHQvdGhpcy5oZWlnaHRSYXRpbykrXCJweFwifSkpLFwibGVuc1wiPT10aGlzLm9wdGlvbnMuem9vbVR5cGV8fFwiaW5uZXJcIj09dGhpcy5vcHRpb25zLnpvb21UeXBlKSYmKHRoaXMuY2hhbmdlQmdTaXplPSEwKSx0aGlzLm9wdGlvbnMuem9vbVdpbmRvd1dpZHRoL3RoaXMud2lkdGhSYXRpbzw9dGhpcy5ueldpZHRoJiYoXCJpbm5lclwiIT10aGlzLm9wdGlvbnMuem9vbVR5cGUmJnRoaXMubmV3dmFsdWV3aWR0aD50aGlzLm5ld3ZhbHVlaGVpZ2h0JiYodGhpcy5jdXJyZW50Wm9vbUxldmVsPXRoaXMubmV3dmFsdWV3aWR0aCksXCJsZW5zXCIhPXRoaXMub3B0aW9ucy56b29tVHlwZSYmXHJcblwiaW5uZXJcIiE9dGhpcy5vcHRpb25zLnpvb21UeXBlJiYodGhpcy5jaGFuZ2VCZ1NpemU9ITAsdGhpcy56b29tTGVucy5jc3Moe3dpZHRoOlN0cmluZyh0aGlzLm9wdGlvbnMuem9vbVdpbmRvd1dpZHRoL3RoaXMud2lkdGhSYXRpbykrXCJweFwifSkpLFwibGVuc1wiPT10aGlzLm9wdGlvbnMuem9vbVR5cGV8fFwiaW5uZXJcIj09dGhpcy5vcHRpb25zLnpvb21UeXBlKSYmKHRoaXMuY2hhbmdlQmdTaXplPSEwKSxcImlubmVyXCI9PXRoaXMub3B0aW9ucy56b29tVHlwZSYmKHRoaXMuY2hhbmdlQmdTaXplPSEwLHRoaXMubnpXaWR0aD50aGlzLm56SGVpZ2h0JiYodGhpcy5jdXJyZW50Wm9vbUxldmVsPXRoaXMubmV3dmFsdWV3aWR0aCksdGhpcy5uekhlaWdodD50aGlzLm56V2lkdGgmJih0aGlzLmN1cnJlbnRab29tTGV2ZWw9dGhpcy5uZXd2YWx1ZXdpZHRoKSkpO3RoaXMuc2V0UG9zaXRpb24odGhpcy5jdXJyZW50TG9jKX0sY2xvc2VBbGw6ZnVuY3Rpb24oKXtzZWxmLnpvb21XaW5kb3cmJnNlbGYuem9vbVdpbmRvdy5oaWRlKCk7XHJcbnNlbGYuem9vbUxlbnMmJnNlbGYuem9vbUxlbnMuaGlkZSgpO3NlbGYuem9vbVRpbnQmJnNlbGYuem9vbVRpbnQuaGlkZSgpfSxjaGFuZ2VTdGF0ZTpmdW5jdGlvbihiKXtcImVuYWJsZVwiPT1iJiYodGhpcy5vcHRpb25zLnpvb21FbmFibGVkPSEwKTtcImRpc2FibGVcIj09YiYmKHRoaXMub3B0aW9ucy56b29tRW5hYmxlZD0hMSl9fTtkLmZuLmVsZXZhdGVab29tPWZ1bmN0aW9uKGIpe3JldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKXt2YXIgYT1PYmplY3QuY3JlYXRlKGspO2EuaW5pdChiLHRoaXMpO2QuZGF0YSh0aGlzLFwiZWxldmF0ZVpvb21cIixhKX0pfTtkLmZuLmVsZXZhdGVab29tLm9wdGlvbnM9e3pvb21BY3RpdmF0aW9uOlwiaG92ZXJcIix6b29tRW5hYmxlZDohMCxwcmVsb2FkaW5nOjEsem9vbUxldmVsOjEsc2Nyb2xsWm9vbTohMSxzY3JvbGxab29tSW5jcmVtZW50OjAuMSxtaW5ab29tTGV2ZWw6ITEsbWF4Wm9vbUxldmVsOiExLGVhc2luZzohMSxlYXNpbmdBbW91bnQ6MTIsbGVuc1NpemU6MjAwLFxyXG56b29tV2luZG93V2lkdGg6NDAwLHpvb21XaW5kb3dIZWlnaHQ6NDAwLHpvb21XaW5kb3dPZmZldHg6MCx6b29tV2luZG93T2ZmZXR5OjAsem9vbVdpbmRvd1Bvc2l0aW9uOjEsem9vbVdpbmRvd0JnQ29sb3VyOlwiI2ZmZlwiLGxlbnNGYWRlSW46ITEsbGVuc0ZhZGVPdXQ6ITEsZGVidWc6ITEsem9vbVdpbmRvd0ZhZGVJbjohMSx6b29tV2luZG93RmFkZU91dDohMSx6b29tV2luZG93QWx3YXlzU2hvdzohMSx6b29tVGludEZhZGVJbjohMSx6b29tVGludEZhZGVPdXQ6ITEsYm9yZGVyU2l6ZTo0LHNob3dMZW5zOiEwLGJvcmRlckNvbG91cjpcIiM4ODhcIixsZW5zQm9yZGVyU2l6ZToxLGxlbnNCb3JkZXJDb2xvdXI6XCIjMDAwXCIsbGVuc1NoYXBlOlwic3F1YXJlXCIsem9vbVR5cGU6XCJ3aW5kb3dcIixjb250YWluTGVuc1pvb206ITEsbGVuc0NvbG91cjpcIndoaXRlXCIsbGVuc09wYWNpdHk6MC40LGxlbnN6b29tOiExLHRpbnQ6ITEsdGludENvbG91cjpcIiMzMzNcIix0aW50T3BhY2l0eTowLjQsZ2FsbGVyeTohMSxcclxuZ2FsbGVyeUFjdGl2ZUNsYXNzOlwiem9vbUdhbGxlcnlBY3RpdmVcIixpbWFnZUNyb3NzZmFkZTohMSxjb25zdHJhaW5UeXBlOiExLGNvbnN0cmFpblNpemU6ITEsbG9hZGluZ0ljb246ITEsY3Vyc29yOlwiZGVmYXVsdFwiLHJlc3BvbnNpdmU6ITAsb25Db21wbGV0ZTpkLm5vb3Asb25ab29tZWRJbWFnZUxvYWRlZDpmdW5jdGlvbigpe30sb25JbWFnZVN3YXA6ZC5ub29wLG9uSW1hZ2VTd2FwQ29tcGxldGU6ZC5ub29wfX0pKGpRdWVyeSx3aW5kb3csZG9jdW1lbnQpOyIsImNvbnN0IFNUT1JFID0ge1xyXG4gICAgYXBpVVJMOiAnaHR0cHM6Ly9mdW5pdHVyZS1zdG9yZS5oZXJva3VhcHAuY29tL3YxL2FwaS9wcm9kdWN0cycsXHJcbiAgICBmaWx0ZXJQYXJhbToge1xyXG4gICAgICAgIGNhdGVnb3JpZXM6ICcnLFxyXG4gICAgICAgIGNvbG9yczogW10sXHJcbiAgICAgICAgbWluUHJpY2U6IG51bGwsXHJcbiAgICAgICAgbWF4UHJpY2U6IG51bGxcclxuICAgIH0sXHJcbiAgICBsb2FkZXI6IHtcclxuICAgICAgICBzaG93OiAoKSA9PiB7XHJcbiAgICAgICAgICAgICQoJy5sb2FkZXInKS5jc3MoJ2Rpc3BsYXknLCAnZmxleCcpLmhpZGUoKS5mYWRlSW4oKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIGhpZGU6ICgpID0+IHtcclxuICAgICAgICAgICAgJCgnLmxvYWRlcicpLmZhZGVPdXQoKTtcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgaW5pdDogZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgdGhpcy5pbml0U2xpZGUoKTtcclxuICAgICAgICB0aGlzLnNob3dCaWdQcm9kdWN0VGh1bWIoKTtcclxuICAgICAgICB0aGlzLmFkZFRvQ2FydEV2ZW50KCk7XHJcbiAgICAgICAgdGhpcy5wb3B1cEhhbmRsZSgpO1xyXG4gICAgICAgIHRoaXMuYnV0dG9uSGFuZGxlKCk7XHJcbiAgICAgICAgdGhpcy5hY2NvcmRpb25DYXRlZ29yeSgpO1xyXG4gICAgICAgIHRoaXMuZmlsdGVyUHJvZHVjdCgpO1xyXG4gICAgICAgIHRoaXMuc29ydEhhbmRsZSgpO1xyXG4gICAgICAgIHRoaXMuc2VhcmNoSGFuZGxlKCk7XHJcbiAgICB9LFxyXG4gICAgaW5pdFNsaWRlOiBmdW5jdGlvbigpIHtcclxuICAgICAgICAkKCcuc2xpZGUnKS5zbGljayh7XHJcbiAgICAgICAgICAgIGFycm93czogZmFsc2UsXHJcbiAgICAgICAgICAgIGRvdHM6IHRydWUsXHJcbiAgICAgICAgICAgIGF1dG9wbGF5OiB0cnVlLFxyXG4gICAgICAgICAgICBhdXRvcGxheVNwZWVkOiAyMDAwLFxyXG4gICAgICAgICAgICBwcmV2QXJyb3c6ICc8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBjbGFzcz1cInNsaWNrLXByZXZcIj48aSBjbGFzcz1cImZhcyBmYS1hcnJvdy1sZWZ0XCI+PC9pPjwvYnV0dG9uPicsXHJcbiAgICAgICAgICAgIG5leHRBcnJvdzogJzxidXR0b24gdHlwZT1cImJ1dHRvblwiIGNsYXNzPVwic2xpY2stbmV4dFwiPjxpIGNsYXNzPVwiZmFzIGZhLWFycm93LXJpZ2h0XCI+PC9pPjwvYnV0dG9uPidcclxuICAgICAgICB9KVxyXG5cclxuICAgICAgICAkKCcjc21hbGxQaWNzJykuc2xpY2soe1xyXG4gICAgICAgICAgICBzbGlkZXNUb1Nob3c6IDQsXHJcbiAgICAgICAgICAgIGFycm93czogZmFsc2UsXHJcbiAgICAgICAgICAgIGRvdHM6IGZhbHNlLFxyXG4gICAgICAgICAgICBpbmZpbml0ZTogZmFsc2UsXHJcbiAgICAgICAgICAgIGZvY3VzT25TZWxlY3Q6IHRydWUsXHJcbiAgICAgICAgICAgIHByZXZBcnJvdzogJzxidXR0b24gdHlwZT1cImJ1dHRvblwiIGNsYXNzPVwic2xpY2stcHJldlwiPjxpIGNsYXNzPVwiZmFzIGZhLWNoZXZyb24tbGVmdFwiPjwvaT48L2J1dHRvbj4nLFxyXG4gICAgICAgICAgICBuZXh0QXJyb3c6ICc8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBjbGFzcz1cInNsaWNrLW5leHRcIj48aSBjbGFzcz1cImZhcyBmYS1jaGV2cm9uLXJpZ2h0XCI+PC9pPjwvYnV0dG9uPidcclxuICAgICAgICB9KTtcclxuICAgICAgICAkKCcjb3RoZXJQcm9kdWN0cycpLnNsaWNrKHtcclxuICAgICAgICAgICAgc2xpZGVzVG9TaG93OiA1LFxyXG4gICAgICAgICAgICBzbGlkZXNUb1Njcm9sbDogMixcclxuICAgICAgICAgICAgYXJyb3dzOiB0cnVlLFxyXG4gICAgICAgICAgICBkb3RzOiBmYWxzZSxcclxuICAgICAgICAgICAgaW5maW5pdGU6IHRydWUsXHJcbiAgICAgICAgICAgIGZvY3VzT25TZWxlY3Q6IHRydWUsXHJcbiAgICAgICAgICAgIHByZXZBcnJvdzogJzxidXR0b24gdHlwZT1cImJ1dHRvblwiIGNsYXNzPVwic2xpY2stcHJldlwiPjxpIGNsYXNzPVwiZmFzIGZhLWNoZXZyb24tbGVmdFwiPjwvaT48L2J1dHRvbj4nLFxyXG4gICAgICAgICAgICBuZXh0QXJyb3c6ICc8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBjbGFzcz1cInNsaWNrLW5leHRcIj48aSBjbGFzcz1cImZhcyBmYS1jaGV2cm9uLXJpZ2h0XCI+PC9pPjwvYnV0dG9uPicsXHJcbiAgICAgICAgICAgIHJlc3BvbnNpdmU6IFt7XHJcbiAgICAgICAgICAgICAgICBicmVha3BvaW50OiA3NjgsXHJcbiAgICAgICAgICAgICAgICBzZXR0aW5nczoge1xyXG4gICAgICAgICAgICAgICAgICAgIHNsaWRlc1RvU2hvdzogMSxcclxuICAgICAgICAgICAgICAgICAgICBzbGlkZXNUb1Njcm9sbDogMSxcclxuICAgICAgICAgICAgICAgICAgICBjZW50ZXJNb2RlOiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgICAgIGluZmluaXRlOiB0cnVlXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1dXHJcbiAgICAgICAgfSk7XHJcbiAgICB9LFxyXG4gICAgaW5pdFpvb21Qcm9kdWN0OiBmdW5jdGlvbigpIHtcclxuICAgICAgICAkKCcuem9vbS12aWV3JykuZWxldmF0ZVpvb20oe1xyXG4gICAgICAgICAgICB6b29tVHlwZTogJ2lubmVyJyxcclxuICAgICAgICAgICAgY3Vyc29yOiAnem9vbS1pbidcclxuICAgICAgICB9KTtcclxuICAgIH0sXHJcbiAgICBzaG93QmlnUHJvZHVjdFRodW1iOiBmdW5jdGlvbigpIHtcclxuICAgICAgICBjb25zdCBzcmNEZWZhdWx0ID0gJCgnI3NtYWxsUGljcyAuZGVmYXVsdCcpLmF0dHIoJ3NyYycpO1xyXG4gICAgICAgIGNvbnN0IHpvb21EZWZhdWx0ID0gJCgnI3NtYWxsUGljcyAuZGVmYXVsdCcpLmRhdGEoJ3pvb20taW1hZ2UnKTtcclxuICAgICAgICB6b29tRGVmYXVsdCAmJiBTVE9SRS5pbml0Wm9vbVByb2R1Y3QoKTtcclxuICAgICAgICAkKCcjYmlnUGljcyAuem9vbS12aWV3JykuYXR0cignc3JjJywgc3JjRGVmYXVsdCk7XHJcbiAgICAgICAgJCgnI2JpZ1BpY3MgLnpvb20tdmlldycpLmRhdGEoJ3pvb20taW1hZ2UnLCB6b29tRGVmYXVsdCk7XHJcbiAgICAgICAgJCgnI3NtYWxsUGljcyAuc2xpY2stc2xpZGU6Zmlyc3QtY2hpbGQnKS5hZGRDbGFzcygnYWN0aXZlJyk7XHJcblxyXG4gICAgICAgICQoJyNzbWFsbFBpY3MnKS5vbignY2xpY2snLCAnLnNsaWNrLXNsaWRlJywgZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICQoJyNzbWFsbFBpY3MgLnNsaWNrLXNsaWRlLmFjdGl2ZScpLnJlbW92ZUNsYXNzKCdhY3RpdmUnKTtcclxuICAgICAgICAgICAgJCh0aGlzKS5hZGRDbGFzcygnYWN0aXZlJyk7XHJcbiAgICAgICAgICAgICQoJyNiaWdQaWNzIC56b29tLXZpZXcnKS5hdHRyKCdzcmMnLCAkKHRoaXMpLmF0dHIoJ3NyYycpKTtcclxuICAgICAgICAgICAgaWYgKCQod2luZG93KS53aWR0aCgpID4gNzY4KSB7XHJcbiAgICAgICAgICAgICAgICAkKCcjYmlnUGljcyAuem9vbS12aWV3JykuZGF0YSgnem9vbS1pbWFnZScsICQodGhpcykuZGF0YSgnem9vbS1pbWFnZScpKTtcclxuICAgICAgICAgICAgICAgICQodGhpcykuZGF0YSgnem9vbS1pbWFnZScpID8gU1RPUkUuaW5pdFpvb21Qcm9kdWN0KCkgOiAkKCcuem9vbUNvbnRhaW5lcicpLmhpZGUoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pXHJcbiAgICB9LFxyXG4gICAgYWRkVG9DYXJ0RXZlbnQ6IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICQoJyNhZGRUb0NhcnQnKS5jbGljaygoZSkgPT4ge1xyXG4gICAgICAgICAgICAkKCcucG9wdXAnKS5mYWRlSW4oKTtcclxuICAgICAgICB9KVxyXG4gICAgfSxcclxuICAgIHBvcHVwSGFuZGxlOiBmdW5jdGlvbigpIHtcclxuICAgICAgICAkKCcucG9wdXBfX2Nsb3NlJykuY2xpY2soZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICQoJy5wb3B1cCcpLmZhZGVPdXQoKTtcclxuICAgICAgICB9KTtcclxuICAgIH0sXHJcbiAgICBidXR0b25IYW5kbGU6IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICQoJyNwYXktcHJvY2VzcycpLmNsaWNrKGZ1bmN0aW9uKGUpIHtcclxuICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgIH0pXHJcbiAgICAgICAgJCgnLm1lbnUtYnRuJykuY2xpY2soZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICQoJy5uYXZiYXJfX2xpc3QnKS5zbGlkZVRvZ2dsZSgpO1xyXG4gICAgICAgIH0pXHJcbiAgICAgICAgJCgnI2NvbnRpbnVlU2hvcHBpbmcnKS5jbGljaygoKSA9PiB7XHJcbiAgICAgICAgICAgICQoJy5wb3B1cCcpLmhpZGUoKTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgaWYgKCQod2luZG93KS53aWR0aCgpIDwgNzY4KSB7XHJcbiAgICAgICAgICAgICQoJy5uYXZiYXJfX2xpbmsuaGFzLWNoaWxkJykuY2xpY2soZnVuY3Rpb24oZSkge1xyXG4gICAgICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgICAgICAgICAgJCh0aGlzKS5uZXh0KCkuc2xpZGVUb2dnbGUoKTtcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgYWNjb3JkaW9uQ2F0ZWdvcnk6IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgIGlmICgkKHdpbmRvdykud2lkdGgoKSA8IDc2OCkge1xyXG4gICAgICAgICAgICAkKCcuY2F0ZWdvcnlfX3RpdGxlJykub24oJ2NsaWNrJywgZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgICAkKHRoaXMpLm5leHQoJy5jYXRlZ29yeV9fY29udGFpbmVyJykudG9nZ2xlKCk7XHJcbiAgICAgICAgICAgICAgICAkKHRoaXMpLnRvZ2dsZUNsYXNzKCdleHBhbmQnKTtcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgZ2VuZXJhdGVIVE1MUHJvZHVjdDogZnVuY3Rpb24ocHJvZHVjdCkge1xyXG4gICAgICAgIGNvbnN0IGh0bWxQcm9kdWN0ID0gYDxkaXYgY2xhc3M9XCJjb2wtbWQtNCBwcm9kdWN0XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGZpZ3VyZT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj1cImRldGFpbC5odG1sXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPVwicHJvZHVjdF9faW1hZ2VcIiBzcmM9XCIkeyBwcm9kdWN0LnRodW1ibmFpbCB9XCIgYWx0PVwiXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGZpZ2NhcHRpb24gY2xhc3M9XCJwcm9kdWN0X19pbmZvIHRleHQtY2VudGVyXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz1cInByb2R1Y3RfX25hbWVcIj4keyBwcm9kdWN0Lm5hbWUgfTwvcD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPVwicHJvZHVjdF9fb2xkLXByaWNlXCI+JHsgcHJvZHVjdC5vbGRQcmljZSB8fCAnJm5ic3A7JyB9PC9wPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9XCJwcm9kdWN0X19wcmljZVwiPiR7ICBwcm9kdWN0LnByaWNlIH08L3A+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZmlnY2FwdGlvbj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2ZpZ3VyZT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidGV4dC1jZW50ZXJcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj1cImRldGFpbC5odG1sXCIgY2xhc3M9XCJidG4gYnRuLTJcIiBpZD1cIiR7IHByb2R1Y3QuX2lkIH1cIj5NVUEgTkdBWTwvYT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PmA7XHJcbiAgICAgICAgJCgnLnByb2R1Y3QtbGlzdD4ucm93JykuYXBwZW5kKGh0bWxQcm9kdWN0KTtcclxuICAgIH0sXHJcbiAgICBmaWx0ZXJQcm9kdWN0OiBmdW5jdGlvbigpIHtcclxuICAgICAgICAkKCcuY2F0ZWdvcnlfX2xpc3QnKS5vbignY2xpY2snLCAnLmNhdGVnb3J5X19pdGVtJywgKGUpID0+IHtcclxuICAgICAgICAgICAgY29uc3QgX3RoaXMgPSBlLnRhcmdldDtcclxuICAgICAgICAgICAgJCgnLmNhdGVnb3J5X19pdGVtLmFjdGl2ZScpLnJlbW92ZUNsYXNzKCdhY3RpdmUnKTtcclxuICAgICAgICAgICAgJChfdGhpcykuYWRkQ2xhc3MoJ2FjdGl2ZScpO1xyXG4gICAgICAgICAgICB0aGlzLmdldEZpbHRlclBhcmFtKCk7XHJcbiAgICAgICAgICAgIHRoaXMuZmlsdGVyUHJvZHVjdEFKQVgoKTtcclxuICAgICAgICB9KTtcclxuICAgICAgICAkKCdpbnB1dFtuYW1lPVwiY29sb3JcIl0nKS5vbignY2hhbmdlJywgKGUpID0+IHtcclxuICAgICAgICAgICAgICAgIHRoaXMuZ2V0RmlsdGVyUGFyYW0oKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuZmlsdGVyUHJvZHVjdEFKQVgoKTtcclxuICAgICAgICAgICAgfSksXHJcbiAgICAgICAgICAgICQoJyNwcmljZUZpbHRlcicpLmNsaWNrKGUgPT4ge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5nZXRGaWx0ZXJQYXJhbSgpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5maWx0ZXJQcm9kdWN0QUpBWCgpO1xyXG4gICAgICAgICAgICB9KVxyXG4gICAgfSxcclxuICAgIGdldEZpbHRlclBhcmFtOiBmdW5jdGlvbigpIHtcclxuICAgICAgICB0aGlzLmZpbHRlclBhcmFtLmNhdGVnb3JpZXMgPSAkKCcuY2F0ZWdvcnlfX2l0ZW0uYWN0aXZlJykudGV4dCgpICE9PSAnVOG6pXQgY+G6oycgPyAkKCcuY2F0ZWdvcnlfX2l0ZW0uYWN0aXZlJykudGV4dCgpIDogJyc7XHJcbiAgICAgICAgdGhpcy5maWx0ZXJQYXJhbS5jb2xvcnMgPSBbXTtcclxuICAgICAgICBpZiAoJCgnaW5wdXRbbmFtZT1cImNvbG9yXCJdOmNoZWNrZWQnKS5sZW5ndGgpIHtcclxuICAgICAgICAgICAgQXJyYXkuZnJvbSgkKCdpbnB1dFtuYW1lPVwiY29sb3JcIl06Y2hlY2tlZCcpKS5mb3JFYWNoKGNoZWNrQ29sb3IgPT4ge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5maWx0ZXJQYXJhbS5jb2xvcnMucHVzaCgkKGNoZWNrQ29sb3IpLnBhcmVudCgpLmRhdGEoJ2NvbG9yJykpO1xyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmZpbHRlclBhcmFtLm1pblByaWNlID0gJCgnI21pblByaWNlJykudmFsKCk7XHJcbiAgICAgICAgdGhpcy5maWx0ZXJQYXJhbS5tYXhQcmljZSA9ICQoJyNtYXhQcmljZScpLnZhbCgpO1xyXG4gICAgfSxcclxuICAgIGZpbHRlclByb2R1Y3RBSkFYOiBmdW5jdGlvbigpIHtcclxuICAgICAgICB0aGlzLmxvYWRlci5zaG93KCk7XHJcbiAgICAgICAgJC5hamF4KHtcclxuICAgICAgICAgICAgdXJsOiB0aGlzLmFwaVVSTCxcclxuICAgICAgICAgICAgZGF0YTogdGhpcy5maWx0ZXJQYXJhbVxyXG4gICAgICAgIH0pLmRvbmUoZGF0YSA9PiB7XHJcbiAgICAgICAgICAgIGlmIChkYXRhLmxlbmd0aCkge1xyXG4gICAgICAgICAgICAgICAgJCgnLnByb2R1Y3QtbGlzdD4ucm93JykuaHRtbCgnJyk7XHJcbiAgICAgICAgICAgICAgICBkYXRhLmZvckVhY2gocHJvZHVjdCA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5nZW5lcmF0ZUhUTUxQcm9kdWN0KHByb2R1Y3QpO1xyXG4gICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICQoJy5wcm9kdWN0LWxpc3Q+LnJvdycpLmh0bWwoJycpO1xyXG4gICAgICAgICAgICAgICAgJCgnLnByb2R1Y3QtbGlzdD4ucm93JykuYXBwZW5kKCc8cCBjbGFzcz1cIm1sLTNcIj5LaMO0bmcgdMOsbSB0aOG6pXkgc+G6o24gcGjhuqltPC9wPicpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHRoaXMubG9hZGVyLmhpZGUoKTtcclxuICAgICAgICB9KVxyXG4gICAgfSxcclxuICAgIHNvcnRIYW5kbGU6IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICQoJyNzb3J0JykuY2hhbmdlKGUgPT4ge1xyXG4gICAgICAgICAgICBjb25zdCBfdGhpcyA9IGUudGFyZ2V0O1xyXG4gICAgICAgICAgICBjb25zdCB0eXBlU29ydCA9ICQoX3RoaXMpLmZpbmQoYG9wdGlvbjpzZWxlY3RlZGApLmRhdGEoJ3R5cGUnKTtcclxuICAgICAgICAgICAgY29uc3QgcGFyYW0gPSAkKF90aGlzKS52YWwoKTtcclxuICAgICAgICAgICAgdGhpcy5zb3J0QUpBWCh0eXBlU29ydCwgcGFyYW0pO1xyXG4gICAgICAgIH0pXHJcbiAgICB9LFxyXG4gICAgc29ydEFKQVg6IGZ1bmN0aW9uKHR5cGVTb3J0LCBwYXJhbSkge1xyXG4gICAgICAgIHRoaXMubG9hZGVyLnNob3coKTtcclxuICAgICAgICBsZXQgZGF0YUFKQVggPSB7fTtcclxuICAgICAgICBpZiAodHlwZVNvcnQpIHtcclxuICAgICAgICAgICAgZGF0YUFKQVhbdHlwZVNvcnRdID0gcGFyYW07XHJcbiAgICAgICAgfVxyXG4gICAgICAgICQuYWpheCh7XHJcbiAgICAgICAgICAgIHVybDogdGhpcy5hcGlVUkwsXHJcbiAgICAgICAgICAgIGRhdGE6IGRhdGFBSkFYXHJcbiAgICAgICAgfSkuZG9uZShkYXRhID0+IHtcclxuICAgICAgICAgICAgaWYgKGRhdGEubGVuZ3RoKSB7XHJcbiAgICAgICAgICAgICAgICAkKCcucHJvZHVjdC1saXN0Pi5yb3cnKS5odG1sKCcnKTtcclxuICAgICAgICAgICAgICAgIGRhdGEuZm9yRWFjaChwcm9kdWN0ID0+IHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmdlbmVyYXRlSFRNTFByb2R1Y3QocHJvZHVjdCk7XHJcbiAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICB0aGlzLmxvYWRlci5oaWRlKCk7XHJcbiAgICAgICAgfSlcclxuICAgIH0sXHJcbiAgICBzZWFyY2hIYW5kbGU6IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICQoJyNzZWFyY2hCdG4nKS5jbGljayhlID0+IHtcclxuICAgICAgICAgICAgY29uc3Qgc2VhcmNoS2V5ID0gJCgnLnNlYXJjaCcpLnZhbCgpO1xyXG4gICAgICAgICAgICB0aGlzLnNlYXJjaEFKQVgoc2VhcmNoS2V5KTtcclxuICAgICAgICB9KVxyXG4gICAgfSxcclxuICAgIHNlYXJjaEFKQVg6IGZ1bmN0aW9uKHNlYXJjaEtleSkge1xyXG4gICAgICAgIHRoaXMubG9hZGVyLnNob3coKTtcclxuICAgICAgICAkLmFqYXgoe1xyXG4gICAgICAgICAgICB1cmw6IHRoaXMuYXBpVVJMLFxyXG4gICAgICAgICAgICBkYXRhOiB7XHJcbiAgICAgICAgICAgICAgICBzZWFyY2hLZXk6IHNlYXJjaEtleVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSkuZG9uZShkYXRhID0+IHtcclxuICAgICAgICAgICAgaWYgKGRhdGEubGVuZ3RoKSB7XHJcbiAgICAgICAgICAgICAgICAkKCcucHJvZHVjdC1saXN0Pi5yb3cnKS5odG1sKCcnKTtcclxuICAgICAgICAgICAgICAgIGRhdGEuZm9yRWFjaChwcm9kdWN0ID0+IHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmdlbmVyYXRlSFRNTFByb2R1Y3QocHJvZHVjdCk7XHJcbiAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgJCgnLnByb2R1Y3QtbGlzdD4ucm93JykuaHRtbCgnJyk7XHJcbiAgICAgICAgICAgICAgICAkKCcucHJvZHVjdC1saXN0Pi5yb3cnKS5hcHBlbmQoJzxwIGNsYXNzPVwibWwtM1wiPktow7RuZyB0w6xtIHRo4bqleSBz4bqjbiBwaOG6qW08L3A+Jyk7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIHRoaXMubG9hZGVyLmhpZGUoKTtcclxuICAgICAgICB9KVxyXG4gICAgfVxyXG59XHJcblxyXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwiRE9NQ29udGVudExvYWRlZFwiLCBmdW5jdGlvbigpIHtcclxuICAgIFNUT1JFLmluaXQoKTtcclxufSk7Il19
